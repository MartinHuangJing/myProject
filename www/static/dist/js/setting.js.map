{"version":3,"sources":["webpack:///setting.js","webpack:///./www/static/src/js/setting.js","webpack:///./~/vue/dist/vue.common.js?e881","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?6f0e","webpack:///./~/Swiper/dist/js/swiper.js?520d"],"names":["webpackJsonp","module","exports","__webpack_require__","_pageFn","data","$","post","res","arr","i","totalPages","push","setting","$set","currentPage","eq","addClass","siblings","removeClass","count","Vue","Swiper","oldAuth","el","settingList","pageList","keyword","pageNo","pageCount","detailConfig","active","right","opacity","addCon","userInfo","thisAuth","allowAuth","methods","removeAuthFn","e","_this","currentTarget","index","item","$remove","addAuthFn","slideDown","slideUp","addThisAuth","hide","JSON","stringify","console","log","detailAction","user_id","role_id","textStatus","xhr","user_info","this_auth","allow_auth","closeDetail","searchSub","page","username","alert","pageFn","parseInt","text","hasClass","closeSearch","prev","next","savaAuth","code","ready","scrollbar","direction","slidesPerView","mousewheelControl","freeMode","observer","watch","n","o","global","process","set","obj","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","call","isLiteral","exp","literalValueRE","test","isReserved","str","c","charCodeAt","_toString","value","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","start","ret","Array","extend","to","from","keys","Object","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","this","indexOf","cancellable","cb","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","selector","document","querySelector","env","NODE_ENV","warn","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","classList","add","cur","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","guardArrayAssets","guardComponents","components","ids","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","_maxUpdateCount","pushWatcher","user","splice","q","nextTick","Watcher","expOrFn","isFn","uid$2","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","Math","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","kebab","setObjectClasses","toggleClasses","stringToObject","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","forEach","m","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","$broadcast","source","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","textNode","characterData","setImmediate","p","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","msg","error","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","Error","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","cleanUpNextTick","draining","currentQueue","drainQueue","len","clearTimeout","Item","fun","array","title","browser","argv","versions","addListener","once","removeListener","removeAllListeners","binding","cwd","chdir","umask","addLibraryPlugin","lib","swiper","firstInstance","each","isH","round","autoplay","autoplayTimeoutId","loop","fixLoop","_slideNext","isEnd","autoplayStopOnLast","stopAutoplay","_slideTo","findElementInEvent","parents","found","_el","initObserver","ObserverFunc","WebkitMutationObserver","mutations","mutation","onResize","childList","observers","handleKeyboard","originalEvent","kc","allowSwipeToNext","allowSwipeToPrev","shiftKey","altKey","ctrlKey","metaKey","activeElement","nodeName","inView","windowScroll","pageXOffset","top","pageYOffset","windowWidth","innerWidth","windowHeight","innerHeight","swiperOffset","rtl","scrollLeft","swiperCoord","point","returnValue","slideNext","slidePrev","handleMousewheel","we","mousewheel","delta","rtlFactor","detail","mousewheelForceToAxis","wheelDeltaX","wheelDeltaY","deltaX","deltaY","mousewheelInvert","position","getWrapperTranslate","mousewheelSensitivity","wasBeginning","isBeginning","wasEnd","minTranslate","maxTranslate","setWrapperTransition","setWrapperTranslate","updateProgress","updateActiveIndex","updateClasses","freeModeSticky","slideReset","getTime","lastScrollTime","animating","mousewheelReleaseOnEdges","setParallaxTransform","progress","pX","pY","r","transform","normalizeEventName","eventName","substring","defaults","touchEventsTarget","initialSlide","speed","autoplayDisableOnInteraction","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMinimumVelocity","autoHeight","setWrapperSize","virtualTranslate","effect","coverflow","rotate","stretch","modifier","slideShadows","cube","shadow","shadowOffset","shadowScale","fade","crossFade","parallax","scrollbarHide","scrollbarDraggable","scrollbarSnapOnRelease","keyboardControl","hashnav","breakpoints","spaceBetween","slidesPerColumn","slidesPerColumnFill","slidesPerGroup","centeredSlides","slidesOffsetBefore","slidesOffsetAfter","roundLengths","touchRatio","touchAngle","simulateTouch","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","onlyExternal","threshold","touchMoveStopPropagation","pagination","paginationElement","paginationClickable","paginationHide","paginationBulletRender","resistance","resistanceRatio","nextButton","prevButton","watchSlidesProgress","watchSlidesVisibility","grabCursor","preventClicks","preventClicksPropagation","slideToClickedSlide","lazyLoading","lazyLoadingInPrevNext","lazyLoadingOnTransitionStart","preloadImages","updateOnImagesReady","loopAdditionalSlides","loopedSlides","control","controlInverse","controlBy","swipeHandler","noSwiping","noSwipingClass","slideClass","slideActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slidePrevClass","wrapperClass","bulletClass","bulletActiveClass","buttonDisabledClass","paginationHiddenClass","observeParents","a11y","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","runCallbacksOnInit","initialVirtualTranslate","originalParams","param","Dom7","deepParam","deepDef","classNames","Zepto","currentBreakpoint","getActiveBreakpoint","breakpoint","points","setBreakpoint","breakPointsParams","support","flexbox","transforms3d","touch","wrapper","paginationContainer","wrongRTL","device","android","translate","velocity","lockSwipeToNext","lockSwipeToPrev","lockSwipes","unlockSwipeToNext","unlockSwipeToPrev","unlockSwipes","cursor","imagesToLoad","imagesLoaded","loadImage","imgElement","srcset","checkForComplete","callback","onReady","complete","Image","onload","onerror","_onReady","find","currentSrc","autoplaying","autoplayPaused","startAutoplay","internal","pauseAutoplay","transitionEnd","snapGrid","updateAutoHeight","newHeight","slides","activeIndex","updateContainerSize","clientWidth","clientHeight","updateSlidesSize","slidesGrid","slidesSizesGrid","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","ceil","max","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","margin-top","outerWidth","outerHeight","swiperSlideSize","newSlidesGrid","updateSlidesOffset","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","slideProgress","slideBefore","slideAfter","isVisible","translatesDiff","newActiveIndex","snapIndex","previousIndex","activeSlide","bullets","bulletIndex","disable","enable","updatePagination","bulletsHTML","numberOfBullets","initPagination","updateTranslate","forceSetTranslate","newTranslate","min","translated","controller","spline","slideTo","forceUpdatePagination","desktopEvents","pointerEnabled","msPointerEnabled","touchEvents","initEvents","actionDom","moveCapture","nested","ie","onTouchStart","onTouchMove","onTouchEnd","ios","onClickNext","onEnterKey","onClickPrev","onClickIndex","attachEvents","detachEvents","allowClick","stopImmediatePropagation","updateClickedSlide","slideFound","clickedSlide","clickedIndex","realIndex","slideToIndex","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","clickTimeout","allowMomentumBounce","formElements","lastClickTime","velocities","touches","startX","startY","currentX","currentY","isTouchEvent","startMoving","which","targetTouches","pageX","pageY","swipeDirection","blur","preventedByNestedSwiper","atan2","PI","ieTouch","trigger","disableParentSwiper","pow","time","touchEndTime","timeDiff","toggleClass","currentPos","lastMoveEvent","pop","velocityEvent","distance","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","nextSlide","onTransitionStart","onTransitionEnd","stopIndex","groupSize","ratio","slideIndex","runCallbacks","setHash","clientLeft","_slidePrev","duration","byController","effects","setTransition","x","y","z","setTranslate","getTranslate","axis","matrix","curTransform","curStyle","transformMatrix","WebKitCSSMatrix","webkitTransform","MozTransform","OTransform","MsTransform","msTransform","getPropertyValue","m41","m42","initObservers","containerParents","disconnectObservers","disconnect","createLoop","prependSlides","appendSlides","destroyLoop","removeAttr","newIndex","appendSlide","prependSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","tx","ty","slideOpacity","eventTriggered","triggerEvents","cubeShadow","wrapperRotate","slideAngle","tz","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowAngle","multiplier","sin","cos","scale1","scale2","zFactor","isSafari","isUiWebView","center","slideOffset","offsetMultiplier","rotateY","rotateX","translateZ","translateY","u","translateX","slideTransform","zIndex","perspectiveOrigin","initialImageLoaded","loadImageInSlide","loadInDuplicate","img","_img","background","slideOriginalIndex","originalSlide","duplicatedSlide","load","prevSlide","setDragPosition","sb","pointerPosition","clientX","clientY","track","dragSize","positionMin","moveDivider","positionMax","dragStart","dragTimeout","drag","dragMove","dragEnd","enableDraggable","disableDraggable","trackSize","divider","newPos","newSize","LinearSpline","i1","i3","interpolate","x2","binarySearch","maxIndex","minIndex","guess","getInterpolateFunction","setControlledTranslate","controlledTranslate","controlled","setControlledTransition","initialized","location","slideHash","disableKeyboardControl","enableKeyboardControl","WheelEvent","onmousewheel","disableMousewheelControl","enableMousewheelControl","parallaxDuration","_plugins","plugins","callPlugins","emitterEventListeners","_handler","makeFocusable","addRole","role","addLabel","label","click","liveRegion","message","notification","bullet","cleanupStyles","deleteInstance","ua","msMaxTouchPoints","maxTouchPoints","ipad","ipod","iphone","Modernizr","DocumentTouch","csstransforms3d","div","styles","els","tempParent","toCreate","classes","attrName","dom7ElementDataStorage","dataKey","elStyle","webkitTransitionDuration","MsTransitionDuration","msTransitionDuration","MozTransitionDuration","OTransitionDuration","transitionDuration","targetSelector","handleLiveEvent","dom7LiveListeners","liveListener","proxy","dom","eventData","evt","CustomEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","fireCallBack","includeMargins","box","clientTop","scrollTop","compareWith","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","returnIndex","newChild","tempDiv","insertAfter","nextAll","nextEls","prevAll","prevEls","unique","foundElements","toAdd","swiperDomPlugins","domLib"],"mappings":"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","file":"setting.js","sourcesContent":["webpackJsonp([2],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Vue = __webpack_require__(1);\n\tvar $ = __webpack_require__(4);\n\tvar Swiper = __webpack_require__(3);\n\tvar oldAuth = '';\n\tvar setting = new Vue({\n\t  el: '#setting',\n\t  data: {\n\t    settingList: [],\n\t    pageList: [],\n\t    keyword: '',\n\t    pageNo: 1,\n\t    pageCount: 1,\n\t    detailConfig: {\n\t      active: false,\n\t      right: '-500px',\n\t      opacity: 0,\n\t      addCon: false\n\t    },\n\t    userInfo: {},\n\t    thisAuth: [],\n\t    allowAuth: [],\n\t    oldAuth: []\n\t  },\n\t  methods: {\n\t    removeAuthFn: function removeAuthFn(e) {\n\t      var _this = e.currentTarget;\n\t      var menu_id = $(_this).data('menu_id');\n\t      var index = $(_this).data('index');\n\t      var item = setting.thisAuth[index];\n\t      setting.thisAuth.$remove(item);\n\t      setting.allowAuth.push(item);\n\t    },\n\t    addAuthFn: function addAuthFn(e) {\n\t      if (setting.detailConfig.addCon) {\n\t        setting.detailConfig.addCon = false;\n\t      } else {\n\t        setting.detailConfig.addCon = true;\n\t      }\n\t      if (setting.detailConfig.addCon) {\n\t        $('.allAuth').slideDown(200);\n\t      } else {\n\t        $('.allAuth').slideUp(200);\n\t      }\n\t    },\n\t    addThisAuth: function addThisAuth(e) {\n\t      var _this = e.currentTarget;\n\t      var menu_id = $(_this).data('menu_id');\n\t      var index = $(_this).data('index');\n\t      var item = setting.allowAuth[index];\n\t      setting.thisAuth.push(item);\n\t      setting.allowAuth.$remove(item);\n\t      setting.detailConfig.addCon = false;\n\t      $('.allAuth').hide();\n\t\n\t      var thisAuth = JSON.stringify(setting.thisAuth);\n\t      console.log(thisAuth == oldAuth);\n\t    },\n\t    detailAction: function detailAction(e) {\n\t      var _this = e.currentTarget;\n\t      var user_id = $(_this).data('id');\n\t      var role_id = $(_this).data('role');\n\t      setting.$set('userInfo', {});\n\t      $.post('/admin/detail', { 'user_id': user_id, 'role_id': role_id }, function (data, textStatus, xhr) {\n\t        setting.userInfo = data.user_info;\n\t        setting.thisAuth = data.this_auth;\n\t        oldAuth = JSON.stringify(data.this_auth);\n\t        setting.allowAuth = data.allow_auth;\n\t        setting.detailConfig.active = true;\n\t        setting.detailConfig.right = '0px';\n\t        setting.detailConfig.opacity = 1;\n\t      });\n\t    },\n\t    closeDetail: function closeDetail() {\n\t      setting.detailConfig.active = false;\n\t      setting.detailConfig.right = '-500px';\n\t      setting.detailConfig.opacity = 0;\n\t      $('.allAuth').hide();\n\t    },\n\t    searchSub: function searchSub() {\n\t      if (setting.keyword != '') {\n\t        _pageFn({\n\t          'page': 1,\n\t          'username': setting.keyword\n\t        });\n\t      } else {\n\t        alert('请输入手机号码查询用户');\n\t      }\n\t    },\n\t    pageFn: function pageFn(e) {\n\t      var page = parseInt($(e.currentTarget).text());\n\t      if (!$(e.currentTarget).hasClass('active')) {\n\t        if (setting.keyword == '') {\n\t          _pageFn({\n\t            'page': page\n\t          });\n\t        } else {\n\t          _pageFn({\n\t            'page': page,\n\t            'username': setting.keyword\n\t          });\n\t        }\n\t      }\n\t    },\n\t    closeSearch: function closeSearch() {\n\t      setting.keyword = '';\n\t      _pageFn({ 'page': 1 });\n\t    },\n\t    prev: function prev() {\n\t      if (setting.pageNo == 1 || setting.pageCount == 0) {\n\t        return false;\n\t      } else {\n\t        var page = setting.pageNo - 1;\n\t        if (setting.keyword == '') {\n\t          _pageFn({\n\t            'page': page\n\t          });\n\t        } else {\n\t          _pageFn({\n\t            'page': page,\n\t            'username': setting.keyword\n\t          });\n\t        }\n\t      }\n\t    },\n\t    next: function next() {\n\t      if (setting.pageNo == setting.pageCount || setting.pageCount == 0) {\n\t        return false;\n\t      } else {\n\t        var page = setting.pageNo + 1;\n\t        if (setting.keyword == '') {\n\t          _pageFn({\n\t            'page': page\n\t          });\n\t        } else {\n\t          _pageFn({\n\t            'page': page,\n\t            'username': setting.keyword\n\t          });\n\t        }\n\t      }\n\t    },\n\t    savaAuth: function savaAuth() {\n\t      var userInfo = JSON.stringify(setting.userInfo);\n\t      var thisAuth = JSON.stringify(setting.thisAuth);\n\t      console.log(thisAuth == oldAuth);\n\t      $.post('/admin/sava', {\n\t        'userInfo': userInfo,\n\t        'thisAuth': thisAuth,\n\t        'oldAuth': oldAuth\n\t      }, function (res) {\n\t        if (res.code == 200) {\n\t          alert('保存成功');\n\t          setting.detailConfig.active = false;\n\t          setting.detailConfig.right = '-500px';\n\t          setting.detailConfig.opacity = 0;\n\t          $('.allAuth').hide();\n\t        }\n\t      });\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var arr = [];\n\t    $.post('/admin/user', { page: 1 }, function (res) {\n\t      for (var i = 0; i < res.totalPages; i++) {\n\t        arr.push(i + 1);\n\t      }\n\t      setting.$set('pageList', arr);\n\t      setting.$set('pageCount', res.totalPages);\n\t      setting.$set('pageNo', res.currentPage);\n\t      setting.$set('settingList', res.data);\n\t    });\n\t    var swiper = new Swiper('.swiper-container', {\n\t      scrollbar: '.swiper-scrollbar',\n\t      direction: 'vertical',\n\t      slidesPerView: 'auto',\n\t      mousewheelControl: true,\n\t      freeMode: true,\n\t      observer: true\n\t    });\n\t  },\n\t  watch: {\n\t    'pageNo': function pageNo(n, o) {\n\t      $('.pageNum').eq(n - 1).addClass('active').siblings('.pageNum').removeClass('active');\n\t      if (n == 1) {\n\t        $('.Previous').addClass('disabled');\n\t      } else if (n == setting.pageCount) {\n\t        $('.Next').addClass('disabled');\n\t      } else {\n\t        $('.Previous').removeClass('disabled');\n\t        $('.Next').removeClass('disabled');\n\t      }\n\t    },\n\t    'pageList': function pageList(n, o) {\n\t      $('.pageNum').eq(0).addClass('active');\n\t    }\n\t  }\n\t});\n\t\n\tfunction _pageFn(data) {\n\t  $.post('/admin/user', data, function (res) {\n\t    var arr = [];\n\t    for (var i = 0; i < res.totalPages; i++) {\n\t      arr.push(i + 1);\n\t    }\n\t    setting.$set('pageList', arr);\n\t    setting.$set('pageCount', res.totalPages);\n\t    setting.$set('pageNo', res.currentPage);\n\t    setting.$set('settingList', res.data);\n\t    $('.pageNum').eq(res.currentPage - 1).addClass('active').siblings('.pageNum').removeClass('active');\n\t    if (res.totalPages == 1 || res.count == 0) {\n\t      $('.Next').addClass('disabled');\n\t    } else {\n\t      $('.Next').removeClass('disabled');\n\t    }\n\t    if (res.currentPage == 1) {\n\t      $('.Previous').addClass('disabled');\n\t    } else {\n\t      $('.Previous').removeClass('disabled');\n\t    }\n\t  });\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t * Vue.js v1.0.21\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: process.env.NODE_ENV !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (process.env.NODE_ENV !== 'production' && config.debug) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    this.prevKeys = Object.keys(value);\n\t    setObjectClasses(this.el, value);\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val && isPlainObject(val)) {\n\t        setObjectClasses(this.el, val);\n\t      } else if (val && typeof val === 'string') {\n\t        addClass(this.el, val);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (!this.prevKeys) return;\n\t\n\t    var i = this.prevKeys.length;\n\t    while (i--) {\n\t      var key = this.prevKeys[i];\n\t      if (!key) continue;\n\t\n\t      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n\t      for (var j = 0, l = keys.length; j < l; j++) {\n\t        toggleClasses(this.el, keys[j], removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setObjectClasses(el, obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    if (!obj[key]) continue;\n\t    toggleClasses(el, key, addClass);\n\t  }\n\t}\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction toggleClasses(el, key, fn) {\n\t  key = key.trim();\n\t\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (process.env.NODE_ENV !== 'production') {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV === 'production') {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (process.env.NODE_ENV !== 'production' && !destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    modifiers = parseModifiers(attr.name);\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (process.env.NODE_ENV !== 'production') {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (process.env.NODE_ENV !== 'production' && this.el) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (process.env.NODE_ENV !== 'production') {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (process.env.NODE_ENV !== 'production' && this.el) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.21';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Swiper 3.2.7\n\t * Most modern mobile touch slider and framework with hardware accelerated transitions\n\t * \n\t * http://www.idangero.us/swiper/\n\t * \n\t * Copyright 2015, Vladimir Kharlampidi\n\t * The iDangero.us\n\t * http://www.idangero.us/\n\t * \n\t * Licensed under MIT\n\t * \n\t * Released on: December 7, 2015\n\t */\n\t(function () {\n\t    'use strict';\n\t    var $;\n\t    /*===========================\n\t    Swiper\n\t    ===========================*/\n\t    var Swiper = function (container, params) {\n\t        if (!(this instanceof Swiper)) return new Swiper(container, params);\n\t\n\t        var defaults = {\n\t            direction: 'horizontal',\n\t            touchEventsTarget: 'container',\n\t            initialSlide: 0,\n\t            speed: 300,\n\t            // autoplay\n\t            autoplay: false,\n\t            autoplayDisableOnInteraction: true,\n\t            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n\t            iOSEdgeSwipeDetection: false,\n\t            iOSEdgeSwipeThreshold: 20,\n\t            // Free mode\n\t            freeMode: false,\n\t            freeModeMomentum: true,\n\t            freeModeMomentumRatio: 1,\n\t            freeModeMomentumBounce: true,\n\t            freeModeMomentumBounceRatio: 1,\n\t            freeModeSticky: false,\n\t            freeModeMinimumVelocity: 0.02,\n\t            // Autoheight\n\t            autoHeight: false,\n\t            // Set wrapper width\n\t            setWrapperSize: false,\n\t            // Virtual Translate\n\t            virtualTranslate: false,\n\t            // Effects\n\t            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow'\n\t            coverflow: {\n\t                rotate: 50,\n\t                stretch: 0,\n\t                depth: 100,\n\t                modifier: 1,\n\t                slideShadows : true\n\t            },\n\t            cube: {\n\t                slideShadows: true,\n\t                shadow: true,\n\t                shadowOffset: 20,\n\t                shadowScale: 0.94\n\t            },\n\t            fade: {\n\t                crossFade: false\n\t            },\n\t            // Parallax\n\t            parallax: false,\n\t            // Scrollbar\n\t            scrollbar: null,\n\t            scrollbarHide: true,\n\t            scrollbarDraggable: false,\n\t            scrollbarSnapOnRelease: false,\n\t            // Keyboard Mousewheel\n\t            keyboardControl: false,\n\t            mousewheelControl: false,\n\t            mousewheelReleaseOnEdges: false,\n\t            mousewheelInvert: false,\n\t            mousewheelForceToAxis: false,\n\t            mousewheelSensitivity: 1,\n\t            // Hash Navigation\n\t            hashnav: false,\n\t            // Breakpoints\n\t            breakpoints: undefined,\n\t            // Slides grid\n\t            spaceBetween: 0,\n\t            slidesPerView: 1,\n\t            slidesPerColumn: 1,\n\t            slidesPerColumnFill: 'column',\n\t            slidesPerGroup: 1,\n\t            centeredSlides: false,\n\t            slidesOffsetBefore: 0, // in px\n\t            slidesOffsetAfter: 0, // in px\n\t            // Round length\n\t            roundLengths: false,\n\t            // Touches\n\t            touchRatio: 1,\n\t            touchAngle: 45,\n\t            simulateTouch: true,\n\t            shortSwipes: true,\n\t            longSwipes: true,\n\t            longSwipesRatio: 0.5,\n\t            longSwipesMs: 300,\n\t            followFinger: true,\n\t            onlyExternal: false,\n\t            threshold: 0,\n\t            touchMoveStopPropagation: true,\n\t            // Pagination\n\t            pagination: null,\n\t            paginationElement: 'span',\n\t            paginationClickable: false,\n\t            paginationHide: false,\n\t            paginationBulletRender: null,\n\t            // Resistance\n\t            resistance: true,\n\t            resistanceRatio: 0.85,\n\t            // Next/prev buttons\n\t            nextButton: null,\n\t            prevButton: null,\n\t            // Progress\n\t            watchSlidesProgress: false,\n\t            watchSlidesVisibility: false,\n\t            // Cursor\n\t            grabCursor: false,\n\t            // Clicks\n\t            preventClicks: true,\n\t            preventClicksPropagation: true,\n\t            slideToClickedSlide: false,\n\t            // Lazy Loading\n\t            lazyLoading: false,\n\t            lazyLoadingInPrevNext: false,\n\t            lazyLoadingOnTransitionStart: false,\n\t            // Images\n\t            preloadImages: true,\n\t            updateOnImagesReady: true,\n\t            // loop\n\t            loop: false,\n\t            loopAdditionalSlides: 0,\n\t            loopedSlides: null,\n\t            // Control\n\t            control: undefined,\n\t            controlInverse: false,\n\t            controlBy: 'slide', //or 'container'\n\t            // Swiping/no swiping\n\t            allowSwipeToPrev: true,\n\t            allowSwipeToNext: true,\n\t            swipeHandler: null, //'.swipe-handler',\n\t            noSwiping: true,\n\t            noSwipingClass: 'swiper-no-swiping',\n\t            // NS\n\t            slideClass: 'swiper-slide',\n\t            slideActiveClass: 'swiper-slide-active',\n\t            slideVisibleClass: 'swiper-slide-visible',\n\t            slideDuplicateClass: 'swiper-slide-duplicate',\n\t            slideNextClass: 'swiper-slide-next',\n\t            slidePrevClass: 'swiper-slide-prev',\n\t            wrapperClass: 'swiper-wrapper',\n\t            bulletClass: 'swiper-pagination-bullet',\n\t            bulletActiveClass: 'swiper-pagination-bullet-active',\n\t            buttonDisabledClass: 'swiper-button-disabled',\n\t            paginationHiddenClass: 'swiper-pagination-hidden',\n\t            // Observer\n\t            observer: false,\n\t            observeParents: false,\n\t            // Accessibility\n\t            a11y: false,\n\t            prevSlideMessage: 'Previous slide',\n\t            nextSlideMessage: 'Next slide',\n\t            firstSlideMessage: 'This is the first slide',\n\t            lastSlideMessage: 'This is the last slide',\n\t            paginationBulletMessage: 'Go to slide {{index}}',\n\t            // Callbacks\n\t            runCallbacksOnInit: true\n\t            /*\n\t            Callbacks:\n\t            onInit: function (swiper)\n\t            onDestroy: function (swiper)\n\t            onClick: function (swiper, e)\n\t            onTap: function (swiper, e)\n\t            onDoubleTap: function (swiper, e)\n\t            onSliderMove: function (swiper, e)\n\t            onSlideChangeStart: function (swiper)\n\t            onSlideChangeEnd: function (swiper)\n\t            onTransitionStart: function (swiper)\n\t            onTransitionEnd: function (swiper)\n\t            onImagesReady: function (swiper)\n\t            onProgress: function (swiper, progress)\n\t            onTouchStart: function (swiper, e)\n\t            onTouchMove: function (swiper, e)\n\t            onTouchMoveOpposite: function (swiper, e)\n\t            onTouchEnd: function (swiper, e)\n\t            onReachBeginning: function (swiper)\n\t            onReachEnd: function (swiper)\n\t            onSetTransition: function (swiper, duration)\n\t            onSetTranslate: function (swiper, translate)\n\t            onAutoplayStart: function (swiper)\n\t            onAutoplayStop: function (swiper),\n\t            onLazyImageLoad: function (swiper, slide, image)\n\t            onLazyImageReady: function (swiper, slide, image)\n\t            */\n\t        \n\t        };\n\t        var initialVirtualTranslate = params && params.virtualTranslate;\n\t        \n\t        params = params || {};\n\t        var originalParams = {};\n\t        for (var param in params) {\n\t            if (typeof params[param] === 'object' && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {\n\t                originalParams[param] = {};\n\t                for (var deepParam in params[param]) {\n\t                    originalParams[param][deepParam] = params[param][deepParam];\n\t                }\n\t            }\n\t            else {\n\t                originalParams[param] = params[param];\n\t            }\n\t        }\n\t        for (var def in defaults) {\n\t            if (typeof params[def] === 'undefined') {\n\t                params[def] = defaults[def];\n\t            }\n\t            else if (typeof params[def] === 'object') {\n\t                for (var deepDef in defaults[def]) {\n\t                    if (typeof params[def][deepDef] === 'undefined') {\n\t                        params[def][deepDef] = defaults[def][deepDef];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        \n\t        // Swiper\n\t        var s = this;\n\t        \n\t        // Params\n\t        s.params = params;\n\t        s.originalParams = originalParams;\n\t        \n\t        // Classname\n\t        s.classNames = [];\n\t        /*=========================\n\t          Dom Library and plugins\n\t          ===========================*/\n\t        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){\n\t            $ = Dom7;\n\t        }\n\t        if (typeof $ === 'undefined') {\n\t            if (typeof Dom7 === 'undefined') {\n\t                $ = window.Dom7 || window.Zepto || window.jQuery;\n\t            }\n\t            else {\n\t                $ = Dom7;\n\t            }\n\t            if (!$) return;\n\t        }\n\t        // Export it to Swiper instance\n\t        s.$ = $;\n\t        \n\t        /*=========================\n\t          Breakpoints\n\t          ===========================*/\n\t        s.currentBreakpoint = undefined;\n\t        s.getActiveBreakpoint = function () {\n\t            //Get breakpoint for window width\n\t            if (!s.params.breakpoints) return false;\n\t            var breakpoint = false;\n\t            var points = [], point;\n\t            for ( point in s.params.breakpoints ) {\n\t                if (s.params.breakpoints.hasOwnProperty(point)) {\n\t                    points.push(point);\n\t                }\n\t            }\n\t            points.sort(function (a, b) {\n\t                return parseInt(a, 10) > parseInt(b, 10);\n\t            });\n\t            for (var i = 0; i < points.length; i++) {\n\t                point = points[i];\n\t                if (point >= window.innerWidth && !breakpoint) {\n\t                    breakpoint = point;\n\t                }\n\t            }\n\t            return breakpoint || 'max';\n\t        };\n\t        s.setBreakpoint = function () {\n\t            //Set breakpoint for window width and update parameters\n\t            var breakpoint = s.getActiveBreakpoint();\n\t            if (breakpoint && s.currentBreakpoint !== breakpoint) {\n\t                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;\n\t                for ( var param in breakPointsParams ) {\n\t                    s.params[param] = breakPointsParams[param];\n\t                }\n\t                s.currentBreakpoint = breakpoint;\n\t            }\n\t        };\n\t        // Set breakpoint on load\n\t        if (s.params.breakpoints) {\n\t            s.setBreakpoint();\n\t        }\n\t        \n\t        /*=========================\n\t          Preparation - Define Container, Wrapper and Pagination\n\t          ===========================*/\n\t        s.container = $(container);\n\t        if (s.container.length === 0) return;\n\t        if (s.container.length > 1) {\n\t            s.container.each(function () {\n\t                new Swiper(this, params);\n\t            });\n\t            return;\n\t        }\n\t        \n\t        // Save instance in container HTML Element and in data\n\t        s.container[0].swiper = s;\n\t        s.container.data('swiper', s);\n\t        \n\t        s.classNames.push('swiper-container-' + s.params.direction);\n\t        \n\t        if (s.params.freeMode) {\n\t            s.classNames.push('swiper-container-free-mode');\n\t        }\n\t        if (!s.support.flexbox) {\n\t            s.classNames.push('swiper-container-no-flexbox');\n\t            s.params.slidesPerColumn = 1;\n\t        }\n\t        if (s.params.autoHeight) {\n\t            s.classNames.push('swiper-container-autoheight');\n\t        }\n\t        // Enable slides progress when required\n\t        if (s.params.parallax || s.params.watchSlidesVisibility) {\n\t            s.params.watchSlidesProgress = true;\n\t        }\n\t        // Coverflow / 3D\n\t        if (['cube', 'coverflow'].indexOf(s.params.effect) >= 0) {\n\t            if (s.support.transforms3d) {\n\t                s.params.watchSlidesProgress = true;\n\t                s.classNames.push('swiper-container-3d');\n\t            }\n\t            else {\n\t                s.params.effect = 'slide';\n\t            }\n\t        }\n\t        if (s.params.effect !== 'slide') {\n\t            s.classNames.push('swiper-container-' + s.params.effect);\n\t        }\n\t        if (s.params.effect === 'cube') {\n\t            s.params.resistanceRatio = 0;\n\t            s.params.slidesPerView = 1;\n\t            s.params.slidesPerColumn = 1;\n\t            s.params.slidesPerGroup = 1;\n\t            s.params.centeredSlides = false;\n\t            s.params.spaceBetween = 0;\n\t            s.params.virtualTranslate = true;\n\t            s.params.setWrapperSize = false;\n\t        }\n\t        if (s.params.effect === 'fade') {\n\t            s.params.slidesPerView = 1;\n\t            s.params.slidesPerColumn = 1;\n\t            s.params.slidesPerGroup = 1;\n\t            s.params.watchSlidesProgress = true;\n\t            s.params.spaceBetween = 0;\n\t            if (typeof initialVirtualTranslate === 'undefined') {\n\t                s.params.virtualTranslate = true;\n\t            }\n\t        }\n\t        \n\t        // Grab Cursor\n\t        if (s.params.grabCursor && s.support.touch) {\n\t            s.params.grabCursor = false;\n\t        }\n\t        \n\t        // Wrapper\n\t        s.wrapper = s.container.children('.' + s.params.wrapperClass);\n\t        \n\t        // Pagination\n\t        if (s.params.pagination) {\n\t            s.paginationContainer = $(s.params.pagination);\n\t            if (s.params.paginationClickable) {\n\t                s.paginationContainer.addClass('swiper-pagination-clickable');\n\t            }\n\t        }\n\t        \n\t        // Is Horizontal\n\t        function isH() {\n\t            return s.params.direction === 'horizontal';\n\t        }\n\t        \n\t        // RTL\n\t        s.rtl = isH() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');\n\t        if (s.rtl) {\n\t            s.classNames.push('swiper-container-rtl');\n\t        }\n\t        \n\t        // Wrong RTL support\n\t        if (s.rtl) {\n\t            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';\n\t        }\n\t        \n\t        // Columns\n\t        if (s.params.slidesPerColumn > 1) {\n\t            s.classNames.push('swiper-container-multirow');\n\t        }\n\t        \n\t        // Check for Android\n\t        if (s.device.android) {\n\t            s.classNames.push('swiper-container-android');\n\t        }\n\t        \n\t        // Add classes\n\t        s.container.addClass(s.classNames.join(' '));\n\t        \n\t        // Translate\n\t        s.translate = 0;\n\t        \n\t        // Progress\n\t        s.progress = 0;\n\t        \n\t        // Velocity\n\t        s.velocity = 0;\n\t        \n\t        /*=========================\n\t          Locks, unlocks\n\t          ===========================*/\n\t        s.lockSwipeToNext = function () {\n\t            s.params.allowSwipeToNext = false;\n\t        };\n\t        s.lockSwipeToPrev = function () {\n\t            s.params.allowSwipeToPrev = false;\n\t        };\n\t        s.lockSwipes = function () {\n\t            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;\n\t        };\n\t        s.unlockSwipeToNext = function () {\n\t            s.params.allowSwipeToNext = true;\n\t        };\n\t        s.unlockSwipeToPrev = function () {\n\t            s.params.allowSwipeToPrev = true;\n\t        };\n\t        s.unlockSwipes = function () {\n\t            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;\n\t        };\n\t        \n\t        /*=========================\n\t          Round helper\n\t          ===========================*/\n\t        function round(a) {\n\t            return Math.floor(a);\n\t        }\n\t        /*=========================\n\t          Set grab cursor\n\t          ===========================*/\n\t        if (s.params.grabCursor) {\n\t            s.container[0].style.cursor = 'move';\n\t            s.container[0].style.cursor = '-webkit-grab';\n\t            s.container[0].style.cursor = '-moz-grab';\n\t            s.container[0].style.cursor = 'grab';\n\t        }\n\t        /*=========================\n\t          Update on Images Ready\n\t          ===========================*/\n\t        s.imagesToLoad = [];\n\t        s.imagesLoaded = 0;\n\t        \n\t        s.loadImage = function (imgElement, src, srcset, checkForComplete, callback) {\n\t            var image;\n\t            function onReady () {\n\t                if (callback) callback();\n\t            }\n\t            if (!imgElement.complete || !checkForComplete) {\n\t                if (src) {\n\t                    image = new window.Image();\n\t                    image.onload = onReady;\n\t                    image.onerror = onReady;\n\t                    if (srcset) {\n\t                        image.srcset = srcset;\n\t                    }\n\t                    if (src) {\n\t                        image.src = src;\n\t                    }\n\t                } else {\n\t                    onReady();\n\t                }\n\t        \n\t            } else {//image already loaded...\n\t                onReady();\n\t            }\n\t        };\n\t        s.preloadImages = function () {\n\t            s.imagesToLoad = s.container.find('img');\n\t            function _onReady() {\n\t                if (typeof s === 'undefined' || s === null) return;\n\t                if (s.imagesLoaded !== undefined) s.imagesLoaded++;\n\t                if (s.imagesLoaded === s.imagesToLoad.length) {\n\t                    if (s.params.updateOnImagesReady) s.update();\n\t                    s.emit('onImagesReady', s);\n\t                }\n\t            }\n\t            for (var i = 0; i < s.imagesToLoad.length; i++) {\n\t                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), true, _onReady);\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Autoplay\n\t          ===========================*/\n\t        s.autoplayTimeoutId = undefined;\n\t        s.autoplaying = false;\n\t        s.autoplayPaused = false;\n\t        function autoplay() {\n\t            s.autoplayTimeoutId = setTimeout(function () {\n\t                if (s.params.loop) {\n\t                    s.fixLoop();\n\t                    s._slideNext();\n\t                }\n\t                else {\n\t                    if (!s.isEnd) {\n\t                        s._slideNext();\n\t                    }\n\t                    else {\n\t                        if (!params.autoplayStopOnLast) {\n\t                            s._slideTo(0);\n\t                        }\n\t                        else {\n\t                            s.stopAutoplay();\n\t                        }\n\t                    }\n\t                }\n\t            }, s.params.autoplay);\n\t        }\n\t        s.startAutoplay = function () {\n\t            if (typeof s.autoplayTimeoutId !== 'undefined') return false;\n\t            if (!s.params.autoplay) return false;\n\t            if (s.autoplaying) return false;\n\t            s.autoplaying = true;\n\t            s.emit('onAutoplayStart', s);\n\t            autoplay();\n\t        };\n\t        s.stopAutoplay = function (internal) {\n\t            if (!s.autoplayTimeoutId) return;\n\t            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n\t            s.autoplaying = false;\n\t            s.autoplayTimeoutId = undefined;\n\t            s.emit('onAutoplayStop', s);\n\t        };\n\t        s.pauseAutoplay = function (speed) {\n\t            if (s.autoplayPaused) return;\n\t            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n\t            s.autoplayPaused = true;\n\t            if (speed === 0) {\n\t                s.autoplayPaused = false;\n\t                autoplay();\n\t            }\n\t            else {\n\t                s.wrapper.transitionEnd(function () {\n\t                    if (!s) return;\n\t                    s.autoplayPaused = false;\n\t                    if (!s.autoplaying) {\n\t                        s.stopAutoplay();\n\t                    }\n\t                    else {\n\t                        autoplay();\n\t                    }\n\t                });\n\t            }\n\t        };\n\t        /*=========================\n\t          Min/Max Translate\n\t          ===========================*/\n\t        s.minTranslate = function () {\n\t            return (-s.snapGrid[0]);\n\t        };\n\t        s.maxTranslate = function () {\n\t            return (-s.snapGrid[s.snapGrid.length - 1]);\n\t        };\n\t        /*=========================\n\t          Slider/slides sizes\n\t          ===========================*/\n\t        s.updateAutoHeight = function () {\n\t            // Update Height\n\t            var newHeight = s.slides.eq(s.activeIndex)[0].offsetHeight;\n\t            if (newHeight) s.wrapper.css('height', s.slides.eq(s.activeIndex)[0].offsetHeight + 'px');\n\t        };\n\t        s.updateContainerSize = function () {\n\t            var width, height;\n\t            if (typeof s.params.width !== 'undefined') {\n\t                width = s.params.width;\n\t            }\n\t            else {\n\t                width = s.container[0].clientWidth;\n\t            }\n\t            if (typeof s.params.height !== 'undefined') {\n\t                height = s.params.height;\n\t            }\n\t            else {\n\t                height = s.container[0].clientHeight;\n\t            }\n\t            if (width === 0 && isH() || height === 0 && !isH()) {\n\t                return;\n\t            }\n\t        \n\t            //Subtract paddings\n\t            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);\n\t            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);\n\t        \n\t            // Store values\n\t            s.width = width;\n\t            s.height = height;\n\t            s.size = isH() ? s.width : s.height;\n\t        };\n\t        \n\t        s.updateSlidesSize = function () {\n\t            s.slides = s.wrapper.children('.' + s.params.slideClass);\n\t            s.snapGrid = [];\n\t            s.slidesGrid = [];\n\t            s.slidesSizesGrid = [];\n\t        \n\t            var spaceBetween = s.params.spaceBetween,\n\t                slidePosition = -s.params.slidesOffsetBefore,\n\t                i,\n\t                prevSlideSize = 0,\n\t                index = 0;\n\t            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n\t                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;\n\t            }\n\t        \n\t            s.virtualSize = -spaceBetween;\n\t            // reset margins\n\t            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});\n\t            else s.slides.css({marginRight: '', marginBottom: ''});\n\t        \n\t            var slidesNumberEvenToRows;\n\t            if (s.params.slidesPerColumn > 1) {\n\t                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {\n\t                    slidesNumberEvenToRows = s.slides.length;\n\t                }\n\t                else {\n\t                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;\n\t                }\n\t                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {\n\t                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);\n\t                }\n\t            }\n\t        \n\t            // Calc slides\n\t            var slideSize;\n\t            var slidesPerColumn = s.params.slidesPerColumn;\n\t            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n\t            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);\n\t            for (i = 0; i < s.slides.length; i++) {\n\t                slideSize = 0;\n\t                var slide = s.slides.eq(i);\n\t                if (s.params.slidesPerColumn > 1) {\n\t                    // Set slides order\n\t                    var newSlideOrderIndex;\n\t                    var column, row;\n\t                    if (s.params.slidesPerColumnFill === 'column') {\n\t                        column = Math.floor(i / slidesPerColumn);\n\t                        row = i - column * slidesPerColumn;\n\t                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {\n\t                            if (++row >= slidesPerColumn) {\n\t                                row = 0;\n\t                                column++;\n\t                            }\n\t                        }\n\t                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n\t                        slide\n\t                            .css({\n\t                                '-webkit-box-ordinal-group': newSlideOrderIndex,\n\t                                '-moz-box-ordinal-group': newSlideOrderIndex,\n\t                                '-ms-flex-order': newSlideOrderIndex,\n\t                                '-webkit-order': newSlideOrderIndex,\n\t                                'order': newSlideOrderIndex\n\t                            });\n\t                    }\n\t                    else {\n\t                        row = Math.floor(i / slidesPerRow);\n\t                        column = i - row * slidesPerRow;\n\t                    }\n\t                    slide\n\t                        .css({\n\t                            'margin-top': (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')\n\t                        })\n\t                        .attr('data-swiper-column', column)\n\t                        .attr('data-swiper-row', row);\n\t        \n\t                }\n\t                if (slide.css('display') === 'none') continue;\n\t                if (s.params.slidesPerView === 'auto') {\n\t                    slideSize = isH() ? slide.outerWidth(true) : slide.outerHeight(true);\n\t                    if (s.params.roundLengths) slideSize = round(slideSize);\n\t                }\n\t                else {\n\t                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;\n\t                    if (s.params.roundLengths) slideSize = round(slideSize);\n\t        \n\t                    if (isH()) {\n\t                        s.slides[i].style.width = slideSize + 'px';\n\t                    }\n\t                    else {\n\t                        s.slides[i].style.height = slideSize + 'px';\n\t                    }\n\t                }\n\t                s.slides[i].swiperSlideSize = slideSize;\n\t                s.slidesSizesGrid.push(slideSize);\n\t        \n\t        \n\t                if (s.params.centeredSlides) {\n\t                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n\t                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;\n\t                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n\t                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n\t                    s.slidesGrid.push(slidePosition);\n\t                }\n\t                else {\n\t                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n\t                    s.slidesGrid.push(slidePosition);\n\t                    slidePosition = slidePosition + slideSize + spaceBetween;\n\t                }\n\t        \n\t                s.virtualSize += slideSize + spaceBetween;\n\t        \n\t                prevSlideSize = slideSize;\n\t        \n\t                index ++;\n\t            }\n\t            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;\n\t            var newSlidesGrid;\n\t        \n\t            if (\n\t                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {\n\t                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t            }\n\t            if (!s.support.flexbox || s.params.setWrapperSize) {\n\t                if (isH()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n\t            }\n\t        \n\t            if (s.params.slidesPerColumn > 1) {\n\t                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;\n\t                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;\n\t                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t                if (s.params.centeredSlides) {\n\t                    newSlidesGrid = [];\n\t                    for (i = 0; i < s.snapGrid.length; i++) {\n\t                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);\n\t                    }\n\t                    s.snapGrid = newSlidesGrid;\n\t                }\n\t            }\n\t        \n\t            // Remove last grid elements depending on width\n\t            if (!s.params.centeredSlides) {\n\t                newSlidesGrid = [];\n\t                for (i = 0; i < s.snapGrid.length; i++) {\n\t                    if (s.snapGrid[i] <= s.virtualSize - s.size) {\n\t                        newSlidesGrid.push(s.snapGrid[i]);\n\t                    }\n\t                }\n\t                s.snapGrid = newSlidesGrid;\n\t                if (Math.floor(s.virtualSize - s.size) > Math.floor(s.snapGrid[s.snapGrid.length - 1])) {\n\t                    s.snapGrid.push(s.virtualSize - s.size);\n\t                }\n\t            }\n\t            if (s.snapGrid.length === 0) s.snapGrid = [0];\n\t        \n\t            if (s.params.spaceBetween !== 0) {\n\t                if (isH()) {\n\t                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});\n\t                    else s.slides.css({marginRight: spaceBetween + 'px'});\n\t                }\n\t                else s.slides.css({marginBottom: spaceBetween + 'px'});\n\t            }\n\t            if (s.params.watchSlidesProgress) {\n\t                s.updateSlidesOffset();\n\t            }\n\t        };\n\t        s.updateSlidesOffset = function () {\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                s.slides[i].swiperSlideOffset = isH() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Slider/slides progress\n\t          ===========================*/\n\t        s.updateSlidesProgress = function (translate) {\n\t            if (typeof translate === 'undefined') {\n\t                translate = s.translate || 0;\n\t            }\n\t            if (s.slides.length === 0) return;\n\t            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();\n\t        \n\t            var offsetCenter = -translate;\n\t            if (s.rtl) offsetCenter = translate;\n\t        \n\t            // Visible Slides\n\t            s.slides.removeClass(s.params.slideVisibleClass);\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                var slide = s.slides[i];\n\t                var slideProgress = (offsetCenter - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);\n\t                if (s.params.watchSlidesVisibility) {\n\t                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n\t                    var slideAfter = slideBefore + s.slidesSizesGrid[i];\n\t                    var isVisible =\n\t                        (slideBefore >= 0 && slideBefore < s.size) ||\n\t                        (slideAfter > 0 && slideAfter <= s.size) ||\n\t                        (slideBefore <= 0 && slideAfter >= s.size);\n\t                    if (isVisible) {\n\t                        s.slides.eq(i).addClass(s.params.slideVisibleClass);\n\t                    }\n\t                }\n\t                slide.progress = s.rtl ? -slideProgress : slideProgress;\n\t            }\n\t        };\n\t        s.updateProgress = function (translate) {\n\t            if (typeof translate === 'undefined') {\n\t                translate = s.translate || 0;\n\t            }\n\t            var translatesDiff = s.maxTranslate() - s.minTranslate();\n\t            var wasBeginning = s.isBeginning;\n\t            var wasEnd = s.isEnd;\n\t            if (translatesDiff === 0) {\n\t                s.progress = 0;\n\t                s.isBeginning = s.isEnd = true;\n\t            }\n\t            else {\n\t                s.progress = (translate - s.minTranslate()) / (translatesDiff);\n\t                s.isBeginning = s.progress <= 0;\n\t                s.isEnd = s.progress >= 1;\n\t            }\n\t            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);\n\t            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);\n\t        \n\t            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);\n\t            s.emit('onProgress', s, s.progress);\n\t        };\n\t        s.updateActiveIndex = function () {\n\t            var translate = s.rtl ? s.translate : -s.translate;\n\t            var newActiveIndex, i, snapIndex;\n\t            for (i = 0; i < s.slidesGrid.length; i ++) {\n\t                if (typeof s.slidesGrid[i + 1] !== 'undefined') {\n\t                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {\n\t                        newActiveIndex = i;\n\t                    }\n\t                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {\n\t                        newActiveIndex = i + 1;\n\t                    }\n\t                }\n\t                else {\n\t                    if (translate >= s.slidesGrid[i]) {\n\t                        newActiveIndex = i;\n\t                    }\n\t                }\n\t            }\n\t            // Normalize slideIndex\n\t            if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;\n\t            // for (i = 0; i < s.slidesGrid.length; i++) {\n\t                // if (- translate >= s.slidesGrid[i]) {\n\t                    // newActiveIndex = i;\n\t                // }\n\t            // }\n\t            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);\n\t            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;\n\t        \n\t            if (newActiveIndex === s.activeIndex) {\n\t                return;\n\t            }\n\t            s.snapIndex = snapIndex;\n\t            s.previousIndex = s.activeIndex;\n\t            s.activeIndex = newActiveIndex;\n\t            s.updateClasses();\n\t        };\n\t        \n\t        /*=========================\n\t          Classes\n\t          ===========================*/\n\t        s.updateClasses = function () {\n\t            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);\n\t            var activeSlide = s.slides.eq(s.activeIndex);\n\t            // Active classes\n\t            activeSlide.addClass(s.params.slideActiveClass);\n\t            activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);\n\t            activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);\n\t        \n\t            // Pagination\n\t            if (s.bullets && s.bullets.length > 0) {\n\t                s.bullets.removeClass(s.params.bulletActiveClass);\n\t                var bulletIndex;\n\t                if (s.params.loop) {\n\t                    bulletIndex = Math.ceil(s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup;\n\t                    if (bulletIndex > s.slides.length - 1 - s.loopedSlides * 2) {\n\t                        bulletIndex = bulletIndex - (s.slides.length - s.loopedSlides * 2);\n\t                    }\n\t                    if (bulletIndex > s.bullets.length - 1) bulletIndex = bulletIndex - s.bullets.length;\n\t                }\n\t                else {\n\t                    if (typeof s.snapIndex !== 'undefined') {\n\t                        bulletIndex = s.snapIndex;\n\t                    }\n\t                    else {\n\t                        bulletIndex = s.activeIndex || 0;\n\t                    }\n\t                }\n\t                if (s.paginationContainer.length > 1) {\n\t                    s.bullets.each(function () {\n\t                        if ($(this).index() === bulletIndex) $(this).addClass(s.params.bulletActiveClass);\n\t                    });\n\t                }\n\t                else {\n\t                    s.bullets.eq(bulletIndex).addClass(s.params.bulletActiveClass);\n\t                }\n\t            }\n\t        \n\t            // Next/active buttons\n\t            if (!s.params.loop) {\n\t                if (s.params.prevButton) {\n\t                    if (s.isBeginning) {\n\t                        $(s.params.prevButton).addClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.prevButton));\n\t                    }\n\t                    else {\n\t                        $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.prevButton));\n\t                    }\n\t                }\n\t                if (s.params.nextButton) {\n\t                    if (s.isEnd) {\n\t                        $(s.params.nextButton).addClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.nextButton));\n\t                    }\n\t                    else {\n\t                        $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.nextButton));\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Pagination\n\t          ===========================*/\n\t        s.updatePagination = function () {\n\t            if (!s.params.pagination) return;\n\t            if (s.paginationContainer && s.paginationContainer.length > 0) {\n\t                var bulletsHTML = '';\n\t                var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n\t                for (var i = 0; i < numberOfBullets; i++) {\n\t                    if (s.params.paginationBulletRender) {\n\t                        bulletsHTML += s.params.paginationBulletRender(i, s.params.bulletClass);\n\t                    }\n\t                    else {\n\t                        bulletsHTML += '<' + s.params.paginationElement+' class=\"' + s.params.bulletClass + '\"></' + s.params.paginationElement + '>';\n\t                    }\n\t                }\n\t                s.paginationContainer.html(bulletsHTML);\n\t                s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);\n\t                if (s.params.paginationClickable && s.params.a11y && s.a11y) {\n\t                    s.a11y.initPagination();\n\t                }\n\t            }\n\t        };\n\t        /*=========================\n\t          Common update method\n\t          ===========================*/\n\t        s.update = function (updateTranslate) {\n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            s.updateProgress();\n\t            s.updatePagination();\n\t            s.updateClasses();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t            }\n\t            function forceSetTranslate() {\n\t                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n\t                s.setWrapperTranslate(newTranslate);\n\t                s.updateActiveIndex();\n\t                s.updateClasses();\n\t            }\n\t            if (updateTranslate) {\n\t                var translated, newTranslate;\n\t                if (s.controller && s.controller.spline) {\n\t                    s.controller.spline = undefined;\n\t                }\n\t                if (s.params.freeMode) {\n\t                    forceSetTranslate();\n\t                    if (s.params.autoHeight) {\n\t                        s.updateAutoHeight();\n\t                    }\n\t                }\n\t                else {\n\t                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n\t                        translated = s.slideTo(s.slides.length - 1, 0, false, true);\n\t                    }\n\t                    else {\n\t                        translated = s.slideTo(s.activeIndex, 0, false, true);\n\t                    }\n\t                    if (!translated) {\n\t                        forceSetTranslate();\n\t                    }\n\t                }\n\t            }\n\t            else if (s.params.autoHeight) {\n\t                s.updateAutoHeight();\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Resize Handler\n\t          ===========================*/\n\t        s.onResize = function (forceUpdatePagination) {\n\t            //Breakpoints\n\t            if (s.params.breakpoints) {\n\t                s.setBreakpoint();\n\t            }\n\t        \n\t            // Disable locks on resize\n\t            var allowSwipeToPrev = s.params.allowSwipeToPrev;\n\t            var allowSwipeToNext = s.params.allowSwipeToNext;\n\t            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;\n\t        \n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t            }\n\t            if (s.controller && s.controller.spline) {\n\t                s.controller.spline = undefined;\n\t            }\n\t            if (s.params.freeMode) {\n\t                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n\t                s.setWrapperTranslate(newTranslate);\n\t                s.updateActiveIndex();\n\t                s.updateClasses();\n\t        \n\t                if (s.params.autoHeight) {\n\t                    s.updateAutoHeight();\n\t                }\n\t            }\n\t            else {\n\t                s.updateClasses();\n\t                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n\t                    s.slideTo(s.slides.length - 1, 0, false, true);\n\t                }\n\t                else {\n\t                    s.slideTo(s.activeIndex, 0, false, true);\n\t                }\n\t            }\n\t            // Return locks after resize\n\t            s.params.allowSwipeToPrev = allowSwipeToPrev;\n\t            s.params.allowSwipeToNext = allowSwipeToNext;\n\t        };\n\t        \n\t        /*=========================\n\t          Events\n\t          ===========================*/\n\t        \n\t        //Define Touch Events\n\t        var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];\n\t        if (window.navigator.pointerEnabled) desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];\n\t        else if (window.navigator.msPointerEnabled) desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n\t        s.touchEvents = {\n\t            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : desktopEvents[0],\n\t            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : desktopEvents[1],\n\t            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : desktopEvents[2]\n\t        };\n\t        \n\t        \n\t        // WP8 Touch Events Fix\n\t        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {\n\t            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);\n\t        }\n\t        \n\t        // Attach/detach events\n\t        s.initEvents = function (detach) {\n\t            var actionDom = detach ? 'off' : 'on';\n\t            var action = detach ? 'removeEventListener' : 'addEventListener';\n\t            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];\n\t            var target = s.support.touch ? touchEventsTarget : document;\n\t        \n\t            var moveCapture = s.params.nested ? true : false;\n\t        \n\t            //Touch Events\n\t            if (s.browser.ie) {\n\t                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n\t                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n\t                target[action](s.touchEvents.end, s.onTouchEnd, false);\n\t            }\n\t            else {\n\t                if (s.support.touch) {\n\t                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n\t                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n\t                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, false);\n\t                }\n\t                if (params.simulateTouch && !s.device.ios && !s.device.android) {\n\t                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);\n\t                    document[action]('mousemove', s.onTouchMove, moveCapture);\n\t                    document[action]('mouseup', s.onTouchEnd, false);\n\t                }\n\t            }\n\t            window[action]('resize', s.onResize);\n\t        \n\t            // Next, Prev, Index\n\t            if (s.params.nextButton) {\n\t                $(s.params.nextButton)[actionDom]('click', s.onClickNext);\n\t                if (s.params.a11y && s.a11y) $(s.params.nextButton)[actionDom]('keydown', s.a11y.onEnterKey);\n\t            }\n\t            if (s.params.prevButton) {\n\t                $(s.params.prevButton)[actionDom]('click', s.onClickPrev);\n\t                if (s.params.a11y && s.a11y) $(s.params.prevButton)[actionDom]('keydown', s.a11y.onEnterKey);\n\t            }\n\t            if (s.params.pagination && s.params.paginationClickable) {\n\t                $(s.paginationContainer)[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);\n\t                if (s.params.a11y && s.a11y) $(s.paginationContainer)[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);\n\t            }\n\t        \n\t            // Prevent Links Clicks\n\t            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);\n\t        };\n\t        s.attachEvents = function (detach) {\n\t            s.initEvents();\n\t        };\n\t        s.detachEvents = function () {\n\t            s.initEvents(true);\n\t        };\n\t        \n\t        /*=========================\n\t          Handle Clicks\n\t          ===========================*/\n\t        // Prevent Clicks\n\t        s.allowClick = true;\n\t        s.preventClicks = function (e) {\n\t            if (!s.allowClick) {\n\t                if (s.params.preventClicks) e.preventDefault();\n\t                if (s.params.preventClicksPropagation && s.animating) {\n\t                    e.stopPropagation();\n\t                    e.stopImmediatePropagation();\n\t                }\n\t            }\n\t        };\n\t        // Clicks\n\t        s.onClickNext = function (e) {\n\t            e.preventDefault();\n\t            if (s.isEnd && !s.params.loop) return;\n\t            s.slideNext();\n\t        };\n\t        s.onClickPrev = function (e) {\n\t            e.preventDefault();\n\t            if (s.isBeginning && !s.params.loop) return;\n\t            s.slidePrev();\n\t        };\n\t        s.onClickIndex = function (e) {\n\t            e.preventDefault();\n\t            var index = $(this).index() * s.params.slidesPerGroup;\n\t            if (s.params.loop) index = index + s.loopedSlides;\n\t            s.slideTo(index);\n\t        };\n\t        \n\t        /*=========================\n\t          Handle Touches\n\t          ===========================*/\n\t        function findElementInEvent(e, selector) {\n\t            var el = $(e.target);\n\t            if (!el.is(selector)) {\n\t                if (typeof selector === 'string') {\n\t                    el = el.parents(selector);\n\t                }\n\t                else if (selector.nodeType) {\n\t                    var found;\n\t                    el.parents().each(function (index, _el) {\n\t                        if (_el === selector) found = selector;\n\t                    });\n\t                    if (!found) return undefined;\n\t                    else return selector;\n\t                }\n\t            }\n\t            if (el.length === 0) {\n\t                return undefined;\n\t            }\n\t            return el[0];\n\t        }\n\t        s.updateClickedSlide = function (e) {\n\t            var slide = findElementInEvent(e, '.' + s.params.slideClass);\n\t            var slideFound = false;\n\t            if (slide) {\n\t                for (var i = 0; i < s.slides.length; i++) {\n\t                    if (s.slides[i] === slide) slideFound = true;\n\t                }\n\t            }\n\t        \n\t            if (slide && slideFound) {\n\t                s.clickedSlide = slide;\n\t                s.clickedIndex = $(slide).index();\n\t            }\n\t            else {\n\t                s.clickedSlide = undefined;\n\t                s.clickedIndex = undefined;\n\t                return;\n\t            }\n\t            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {\n\t                var slideToIndex = s.clickedIndex,\n\t                    realIndex,\n\t                    duplicatedSlides;\n\t                if (s.params.loop) {\n\t                    if (s.animating) return;\n\t                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');\n\t                    if (s.params.centeredSlides) {\n\t                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {\n\t                            s.fixLoop();\n\t                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n\t                            setTimeout(function () {\n\t                                s.slideTo(slideToIndex);\n\t                            }, 0);\n\t                        }\n\t                        else {\n\t                            s.slideTo(slideToIndex);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {\n\t                            s.fixLoop();\n\t                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n\t                            setTimeout(function () {\n\t                                s.slideTo(slideToIndex);\n\t                            }, 0);\n\t                        }\n\t                        else {\n\t                            s.slideTo(slideToIndex);\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    s.slideTo(slideToIndex);\n\t                }\n\t            }\n\t        };\n\t        \n\t        var isTouched,\n\t            isMoved,\n\t            allowTouchCallbacks,\n\t            touchStartTime,\n\t            isScrolling,\n\t            currentTranslate,\n\t            startTranslate,\n\t            allowThresholdMove,\n\t            // Form elements to match\n\t            formElements = 'input, select, textarea, button',\n\t            // Last click time\n\t            lastClickTime = Date.now(), clickTimeout,\n\t            //Velocities\n\t            velocities = [],\n\t            allowMomentumBounce;\n\t        \n\t        // Animating Flag\n\t        s.animating = false;\n\t        \n\t        // Touches information\n\t        s.touches = {\n\t            startX: 0,\n\t            startY: 0,\n\t            currentX: 0,\n\t            currentY: 0,\n\t            diff: 0\n\t        };\n\t        \n\t        // Touch handlers\n\t        var isTouchEvent, startMoving;\n\t        s.onTouchStart = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            isTouchEvent = e.type === 'touchstart';\n\t            if (!isTouchEvent && 'which' in e && e.which === 3) return;\n\t            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {\n\t                s.allowClick = true;\n\t                return;\n\t            }\n\t            if (s.params.swipeHandler) {\n\t                if (!findElementInEvent(e, s.params.swipeHandler)) return;\n\t            }\n\t        \n\t            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n\t            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\t        \n\t            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\t            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {\n\t                return;\n\t            }\n\t        \n\t            isTouched = true;\n\t            isMoved = false;\n\t            allowTouchCallbacks = true;\n\t            isScrolling = undefined;\n\t            startMoving = undefined;\n\t            s.touches.startX = startX;\n\t            s.touches.startY = startY;\n\t            touchStartTime = Date.now();\n\t            s.allowClick = true;\n\t            s.updateContainerSize();\n\t            s.swipeDirection = undefined;\n\t            if (s.params.threshold > 0) allowThresholdMove = false;\n\t            if (e.type !== 'touchstart') {\n\t                var preventDefault = true;\n\t                if ($(e.target).is(formElements)) preventDefault = false;\n\t                if (document.activeElement && $(document.activeElement).is(formElements)) {\n\t                    document.activeElement.blur();\n\t                }\n\t                if (preventDefault) {\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t            s.emit('onTouchStart', s, e);\n\t        };\n\t        \n\t        s.onTouchMove = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            if (isTouchEvent && e.type === 'mousemove') return;\n\t            if (e.preventedByNestedSwiper) return;\n\t            if (s.params.onlyExternal) {\n\t                // isMoved = true;\n\t                s.allowClick = false;\n\t                if (isTouched) {\n\t                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t                    touchStartTime = Date.now();\n\t                }\n\t                return;\n\t            }\n\t            if (isTouchEvent && document.activeElement) {\n\t                if (e.target === document.activeElement && $(e.target).is(formElements)) {\n\t                    isMoved = true;\n\t                    s.allowClick = false;\n\t                    return;\n\t                }\n\t            }\n\t            if (allowTouchCallbacks) {\n\t                s.emit('onTouchMove', s, e);\n\t            }\n\t            if (e.targetTouches && e.targetTouches.length > 1) return;\n\t        \n\t            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t        \n\t            if (typeof isScrolling === 'undefined') {\n\t                var touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;\n\t                isScrolling = isH() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);\n\t            }\n\t            if (isScrolling) {\n\t                s.emit('onTouchMoveOpposite', s, e);\n\t            }\n\t            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {\n\t                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {\n\t                    startMoving = true;\n\t                }\n\t            }\n\t            if (!isTouched) return;\n\t            if (isScrolling)  {\n\t                isTouched = false;\n\t                return;\n\t            }\n\t            if (!startMoving && s.browser.ieTouch) {\n\t                return;\n\t            }\n\t            s.allowClick = false;\n\t            s.emit('onSliderMove', s, e);\n\t            e.preventDefault();\n\t            if (s.params.touchMoveStopPropagation && !s.params.nested) {\n\t                e.stopPropagation();\n\t            }\n\t        \n\t            if (!isMoved) {\n\t                if (params.loop) {\n\t                    s.fixLoop();\n\t                }\n\t                startTranslate = s.getWrapperTranslate();\n\t                s.setWrapperTransition(0);\n\t                if (s.animating) {\n\t                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');\n\t                }\n\t                if (s.params.autoplay && s.autoplaying) {\n\t                    if (s.params.autoplayDisableOnInteraction) {\n\t                        s.stopAutoplay();\n\t                    }\n\t                    else {\n\t                        s.pauseAutoplay();\n\t                    }\n\t                }\n\t                allowMomentumBounce = false;\n\t                //Grab Cursor\n\t                if (s.params.grabCursor) {\n\t                    s.container[0].style.cursor = 'move';\n\t                    s.container[0].style.cursor = '-webkit-grabbing';\n\t                    s.container[0].style.cursor = '-moz-grabbin';\n\t                    s.container[0].style.cursor = 'grabbing';\n\t                }\n\t            }\n\t            isMoved = true;\n\t        \n\t            var diff = s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n\t        \n\t            diff = diff * s.params.touchRatio;\n\t            if (s.rtl) diff = -diff;\n\t        \n\t            s.swipeDirection = diff > 0 ? 'prev' : 'next';\n\t            currentTranslate = diff + startTranslate;\n\t        \n\t            var disableParentSwiper = true;\n\t            if ((diff > 0 && currentTranslate > s.minTranslate())) {\n\t                disableParentSwiper = false;\n\t                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);\n\t            }\n\t            else if (diff < 0 && currentTranslate < s.maxTranslate()) {\n\t                disableParentSwiper = false;\n\t                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);\n\t            }\n\t        \n\t            if (disableParentSwiper) {\n\t                e.preventedByNestedSwiper = true;\n\t            }\n\t        \n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {\n\t                currentTranslate = startTranslate;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {\n\t                currentTranslate = startTranslate;\n\t            }\n\t        \n\t            if (!s.params.followFinger) return;\n\t        \n\t            // Threshold\n\t            if (s.params.threshold > 0) {\n\t                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {\n\t                    if (!allowThresholdMove) {\n\t                        allowThresholdMove = true;\n\t                        s.touches.startX = s.touches.currentX;\n\t                        s.touches.startY = s.touches.currentY;\n\t                        currentTranslate = startTranslate;\n\t                        s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n\t                        return;\n\t                    }\n\t                }\n\t                else {\n\t                    currentTranslate = startTranslate;\n\t                    return;\n\t                }\n\t            }\n\t            // Update active index in free mode\n\t            if (s.params.freeMode || s.params.watchSlidesProgress) {\n\t                s.updateActiveIndex();\n\t            }\n\t            if (s.params.freeMode) {\n\t                //Velocity\n\t                if (velocities.length === 0) {\n\t                    velocities.push({\n\t                        position: s.touches[isH() ? 'startX' : 'startY'],\n\t                        time: touchStartTime\n\t                    });\n\t                }\n\t                velocities.push({\n\t                    position: s.touches[isH() ? 'currentX' : 'currentY'],\n\t                    time: (new window.Date()).getTime()\n\t                });\n\t            }\n\t            // Update progress\n\t            s.updateProgress(currentTranslate);\n\t            // Update translate\n\t            s.setWrapperTranslate(currentTranslate);\n\t        };\n\t        s.onTouchEnd = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            if (allowTouchCallbacks) {\n\t                s.emit('onTouchEnd', s, e);\n\t            }\n\t            allowTouchCallbacks = false;\n\t            if (!isTouched) return;\n\t            //Return Grab Cursor\n\t            if (s.params.grabCursor && isMoved && isTouched) {\n\t                s.container[0].style.cursor = 'move';\n\t                s.container[0].style.cursor = '-webkit-grab';\n\t                s.container[0].style.cursor = '-moz-grab';\n\t                s.container[0].style.cursor = 'grab';\n\t            }\n\t        \n\t            // Time diff\n\t            var touchEndTime = Date.now();\n\t            var timeDiff = touchEndTime - touchStartTime;\n\t        \n\t            // Tap, doubleTap, Click\n\t            if (s.allowClick) {\n\t                s.updateClickedSlide(e);\n\t                s.emit('onTap', s, e);\n\t                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {\n\t                    if (clickTimeout) clearTimeout(clickTimeout);\n\t                    clickTimeout = setTimeout(function () {\n\t                        if (!s) return;\n\t                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {\n\t                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);\n\t                        }\n\t                        s.emit('onClick', s, e);\n\t                    }, 300);\n\t        \n\t                }\n\t                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {\n\t                    if (clickTimeout) clearTimeout(clickTimeout);\n\t                    s.emit('onDoubleTap', s, e);\n\t                }\n\t            }\n\t        \n\t            lastClickTime = Date.now();\n\t            setTimeout(function () {\n\t                if (s) s.allowClick = true;\n\t            }, 0);\n\t        \n\t            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {\n\t                isTouched = isMoved = false;\n\t                return;\n\t            }\n\t            isTouched = isMoved = false;\n\t        \n\t            var currentPos;\n\t            if (s.params.followFinger) {\n\t                currentPos = s.rtl ? s.translate : -s.translate;\n\t            }\n\t            else {\n\t                currentPos = -currentTranslate;\n\t            }\n\t            if (s.params.freeMode) {\n\t                if (currentPos < -s.minTranslate()) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                else if (currentPos > -s.maxTranslate()) {\n\t                    if (s.slides.length < s.snapGrid.length) {\n\t                        s.slideTo(s.snapGrid.length - 1);\n\t                    }\n\t                    else {\n\t                        s.slideTo(s.slides.length - 1);\n\t                    }\n\t                    return;\n\t                }\n\t        \n\t                if (s.params.freeModeMomentum) {\n\t                    if (velocities.length > 1) {\n\t                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();\n\t        \n\t                        var distance = lastMoveEvent.position - velocityEvent.position;\n\t                        var time = lastMoveEvent.time - velocityEvent.time;\n\t                        s.velocity = distance / time;\n\t                        s.velocity = s.velocity / 2;\n\t                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {\n\t                            s.velocity = 0;\n\t                        }\n\t                        // this implies that the user stopped moving a finger then released.\n\t                        // There would be no events with distance zero, so the last event is stale.\n\t                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {\n\t                            s.velocity = 0;\n\t                        }\n\t                    } else {\n\t                        s.velocity = 0;\n\t                    }\n\t        \n\t                    velocities.length = 0;\n\t                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;\n\t                    var momentumDistance = s.velocity * momentumDuration;\n\t        \n\t                    var newPosition = s.translate + momentumDistance;\n\t                    if (s.rtl) newPosition = - newPosition;\n\t                    var doBounce = false;\n\t                    var afterBouncePosition;\n\t                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;\n\t                    if (newPosition < s.maxTranslate()) {\n\t                        if (s.params.freeModeMomentumBounce) {\n\t                            if (newPosition + s.maxTranslate() < -bounceAmount) {\n\t                                newPosition = s.maxTranslate() - bounceAmount;\n\t                            }\n\t                            afterBouncePosition = s.maxTranslate();\n\t                            doBounce = true;\n\t                            allowMomentumBounce = true;\n\t                        }\n\t                        else {\n\t                            newPosition = s.maxTranslate();\n\t                        }\n\t                    }\n\t                    else if (newPosition > s.minTranslate()) {\n\t                        if (s.params.freeModeMomentumBounce) {\n\t                            if (newPosition - s.minTranslate() > bounceAmount) {\n\t                                newPosition = s.minTranslate() + bounceAmount;\n\t                            }\n\t                            afterBouncePosition = s.minTranslate();\n\t                            doBounce = true;\n\t                            allowMomentumBounce = true;\n\t                        }\n\t                        else {\n\t                            newPosition = s.minTranslate();\n\t                        }\n\t                    }\n\t                    else if (s.params.freeModeSticky) {\n\t                        var j = 0,\n\t                            nextSlide;\n\t                        for (j = 0; j < s.snapGrid.length; j += 1) {\n\t                            if (s.snapGrid[j] > -newPosition) {\n\t                                nextSlide = j;\n\t                                break;\n\t                            }\n\t        \n\t                        }\n\t                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {\n\t                            newPosition = s.snapGrid[nextSlide];\n\t                        } else {\n\t                            newPosition = s.snapGrid[nextSlide - 1];\n\t                        }\n\t                        if (!s.rtl) newPosition = - newPosition;\n\t                    }\n\t                    //Fix duration\n\t                    if (s.velocity !== 0) {\n\t                        if (s.rtl) {\n\t                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);\n\t                        }\n\t                        else {\n\t                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);\n\t                        }\n\t                    }\n\t                    else if (s.params.freeModeSticky) {\n\t                        s.slideReset();\n\t                        return;\n\t                    }\n\t        \n\t                    if (s.params.freeModeMomentumBounce && doBounce) {\n\t                        s.updateProgress(afterBouncePosition);\n\t                        s.setWrapperTransition(momentumDuration);\n\t                        s.setWrapperTranslate(newPosition);\n\t                        s.onTransitionStart();\n\t                        s.animating = true;\n\t                        s.wrapper.transitionEnd(function () {\n\t                            if (!s || !allowMomentumBounce) return;\n\t                            s.emit('onMomentumBounce', s);\n\t        \n\t                            s.setWrapperTransition(s.params.speed);\n\t                            s.setWrapperTranslate(afterBouncePosition);\n\t                            s.wrapper.transitionEnd(function () {\n\t                                if (!s) return;\n\t                                s.onTransitionEnd();\n\t                            });\n\t                        });\n\t                    } else if (s.velocity) {\n\t                        s.updateProgress(newPosition);\n\t                        s.setWrapperTransition(momentumDuration);\n\t                        s.setWrapperTranslate(newPosition);\n\t                        s.onTransitionStart();\n\t                        if (!s.animating) {\n\t                            s.animating = true;\n\t                            s.wrapper.transitionEnd(function () {\n\t                                if (!s) return;\n\t                                s.onTransitionEnd();\n\t                            });\n\t                        }\n\t        \n\t                    } else {\n\t                        s.updateProgress(newPosition);\n\t                    }\n\t        \n\t                    s.updateActiveIndex();\n\t                }\n\t                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {\n\t                    s.updateProgress();\n\t                    s.updateActiveIndex();\n\t                }\n\t                return;\n\t            }\n\t        \n\t            // Find current slide\n\t            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];\n\t            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {\n\t                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {\n\t                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {\n\t                        stopIndex = i;\n\t                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];\n\t                    }\n\t                }\n\t                else {\n\t                    if (currentPos >= s.slidesGrid[i]) {\n\t                        stopIndex = i;\n\t                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];\n\t                    }\n\t                }\n\t            }\n\t        \n\t            // Find current slide size\n\t            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;\n\t        \n\t            if (timeDiff > s.params.longSwipesMs) {\n\t                // Long touches\n\t                if (!s.params.longSwipes) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                if (s.swipeDirection === 'next') {\n\t                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t                    else s.slideTo(stopIndex);\n\t        \n\t                }\n\t                if (s.swipeDirection === 'prev') {\n\t                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t                    else s.slideTo(stopIndex);\n\t                }\n\t            }\n\t            else {\n\t                // Short swipes\n\t                if (!s.params.shortSwipes) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                if (s.swipeDirection === 'next') {\n\t                    s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t        \n\t                }\n\t                if (s.swipeDirection === 'prev') {\n\t                    s.slideTo(stopIndex);\n\t                }\n\t            }\n\t        };\n\t        /*=========================\n\t          Transitions\n\t          ===========================*/\n\t        s._slideTo = function (slideIndex, speed) {\n\t            return s.slideTo(slideIndex, speed, true, true);\n\t        };\n\t        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (typeof slideIndex === 'undefined') slideIndex = 0;\n\t            if (slideIndex < 0) slideIndex = 0;\n\t            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);\n\t            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;\n\t        \n\t            var translate = - s.snapGrid[s.snapIndex];\n\t            // Stop autoplay\n\t            if (s.params.autoplay && s.autoplaying) {\n\t                if (internal || !s.params.autoplayDisableOnInteraction) {\n\t                    s.pauseAutoplay(speed);\n\t                }\n\t                else {\n\t                    s.stopAutoplay();\n\t                }\n\t            }\n\t            // Update progress\n\t            s.updateProgress(translate);\n\t        \n\t            // Normalize slideIndex\n\t            for (var i = 0; i < s.slidesGrid.length; i++) {\n\t                if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {\n\t                    slideIndex = i;\n\t                }\n\t            }\n\t        \n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {\n\t                return false;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {\n\t                if ((s.activeIndex || 0) !== slideIndex ) return false;\n\t            }\n\t        \n\t            // Update Index\n\t            if (typeof speed === 'undefined') speed = s.params.speed;\n\t            s.previousIndex = s.activeIndex || 0;\n\t            s.activeIndex = slideIndex;\n\t        \n\t            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {\n\t                // Update Height\n\t                if (s.params.autoHeight) {\n\t                    s.updateAutoHeight();\n\t                }\n\t                s.updateClasses();\n\t                if (s.params.effect !== 'slide') {\n\t                    s.setWrapperTranslate(translate);\n\t                }\n\t                return false;\n\t            }\n\t            s.updateClasses();\n\t            s.onTransitionStart(runCallbacks);\n\t        \n\t            if (speed === 0) {\n\t                s.setWrapperTranslate(translate);\n\t                s.setWrapperTransition(0);\n\t                s.onTransitionEnd(runCallbacks);\n\t            }\n\t            else {\n\t                s.setWrapperTranslate(translate);\n\t                s.setWrapperTransition(speed);\n\t                if (!s.animating) {\n\t                    s.animating = true;\n\t                    s.wrapper.transitionEnd(function () {\n\t                        if (!s) return;\n\t                        s.onTransitionEnd(runCallbacks);\n\t                    });\n\t                }\n\t        \n\t            }\n\t        \n\t            return true;\n\t        };\n\t        \n\t        s.onTransitionStart = function (runCallbacks) {\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (s.params.autoHeight) {\n\t                s.updateAutoHeight();\n\t            }\n\t            if (s.lazy) s.lazy.onTransitionStart();\n\t            if (runCallbacks) {\n\t                s.emit('onTransitionStart', s);\n\t                if (s.activeIndex !== s.previousIndex) {\n\t                    s.emit('onSlideChangeStart', s);\n\t                    if (s.activeIndex > s.previousIndex) {\n\t                        s.emit('onSlideNextStart', s);\n\t                    }\n\t                    else {\n\t                        s.emit('onSlidePrevStart', s);\n\t                    }\n\t                }\n\t        \n\t            }\n\t        };\n\t        s.onTransitionEnd = function (runCallbacks) {\n\t            s.animating = false;\n\t            s.setWrapperTransition(0);\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (s.lazy) s.lazy.onTransitionEnd();\n\t            if (runCallbacks) {\n\t                s.emit('onTransitionEnd', s);\n\t                if (s.activeIndex !== s.previousIndex) {\n\t                    s.emit('onSlideChangeEnd', s);\n\t                    if (s.activeIndex > s.previousIndex) {\n\t                        s.emit('onSlideNextEnd', s);\n\t                    }\n\t                    else {\n\t                        s.emit('onSlidePrevEnd', s);\n\t                    }\n\t                }\n\t            }\n\t            if (s.params.hashnav && s.hashnav) {\n\t                s.hashnav.setHash();\n\t            }\n\t        \n\t        };\n\t        s.slideNext = function (runCallbacks, speed, internal) {\n\t            if (s.params.loop) {\n\t                if (s.animating) return false;\n\t                s.fixLoop();\n\t                var clientLeft = s.container[0].clientLeft;\n\t                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n\t            }\n\t            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n\t        };\n\t        s._slideNext = function (speed) {\n\t            return s.slideNext(true, speed, true);\n\t        };\n\t        s.slidePrev = function (runCallbacks, speed, internal) {\n\t            if (s.params.loop) {\n\t                if (s.animating) return false;\n\t                s.fixLoop();\n\t                var clientLeft = s.container[0].clientLeft;\n\t                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n\t            }\n\t            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n\t        };\n\t        s._slidePrev = function (speed) {\n\t            return s.slidePrev(true, speed, true);\n\t        };\n\t        s.slideReset = function (runCallbacks, speed, internal) {\n\t            return s.slideTo(s.activeIndex, speed, runCallbacks);\n\t        };\n\t        \n\t        /*=========================\n\t          Translate/transition helpers\n\t          ===========================*/\n\t        s.setWrapperTransition = function (duration, byController) {\n\t            s.wrapper.transition(duration);\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                s.effects[s.params.effect].setTransition(duration);\n\t            }\n\t            if (s.params.parallax && s.parallax) {\n\t                s.parallax.setTransition(duration);\n\t            }\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.setTransition(duration);\n\t            }\n\t            if (s.params.control && s.controller) {\n\t                s.controller.setTransition(duration, byController);\n\t            }\n\t            s.emit('onSetTransition', s, duration);\n\t        };\n\t        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {\n\t            var x = 0, y = 0, z = 0;\n\t            if (isH()) {\n\t                x = s.rtl ? -translate : translate;\n\t            }\n\t            else {\n\t                y = translate;\n\t            }\n\t        \n\t            if (s.params.roundLengths) {\n\t                x = round(x);\n\t                y = round(y);\n\t            }\n\t        \n\t            if (!s.params.virtualTranslate) {\n\t                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');\n\t                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');\n\t            }\n\t        \n\t            s.translate = isH() ? x : y;\n\t        \n\t            // Check if we need to update progress\n\t            var progress;\n\t            var translatesDiff = s.maxTranslate() - s.minTranslate();\n\t            if (translatesDiff === 0) {\n\t                progress = 0;\n\t            }\n\t            else {\n\t                progress = (translate - s.minTranslate()) / (translatesDiff);\n\t            }\n\t            if (progress !== s.progress) {\n\t                s.updateProgress(translate);\n\t            }\n\t        \n\t            if (updateActiveIndex) s.updateActiveIndex();\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                s.effects[s.params.effect].setTranslate(s.translate);\n\t            }\n\t            if (s.params.parallax && s.parallax) {\n\t                s.parallax.setTranslate(s.translate);\n\t            }\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.setTranslate(s.translate);\n\t            }\n\t            if (s.params.control && s.controller) {\n\t                s.controller.setTranslate(s.translate, byController);\n\t            }\n\t            s.emit('onSetTranslate', s, s.translate);\n\t        };\n\t        \n\t        s.getTranslate = function (el, axis) {\n\t            var matrix, curTransform, curStyle, transformMatrix;\n\t        \n\t            // automatic axis detection\n\t            if (typeof axis === 'undefined') {\n\t                axis = 'x';\n\t            }\n\t        \n\t            if (s.params.virtualTranslate) {\n\t                return s.rtl ? -s.translate : s.translate;\n\t            }\n\t        \n\t            curStyle = window.getComputedStyle(el, null);\n\t            if (window.WebKitCSSMatrix) {\n\t                curTransform = curStyle.transform || curStyle.webkitTransform;\n\t                if (curTransform.split(',').length > 6) {\n\t                    curTransform = curTransform.split(', ').map(function(a){\n\t                        return a.replace(',','.');\n\t                    }).join(', ');\n\t                }\n\t                // Some old versions of Webkit choke when 'none' is passed; pass\n\t                // empty string instead in this case\n\t                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n\t            }\n\t            else {\n\t                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n\t                matrix = transformMatrix.toString().split(',');\n\t            }\n\t        \n\t            if (axis === 'x') {\n\t                //Latest Chrome and webkits Fix\n\t                if (window.WebKitCSSMatrix)\n\t                    curTransform = transformMatrix.m41;\n\t                //Crazy IE10 Matrix\n\t                else if (matrix.length === 16)\n\t                    curTransform = parseFloat(matrix[12]);\n\t                //Normal Browsers\n\t                else\n\t                    curTransform = parseFloat(matrix[4]);\n\t            }\n\t            if (axis === 'y') {\n\t                //Latest Chrome and webkits Fix\n\t                if (window.WebKitCSSMatrix)\n\t                    curTransform = transformMatrix.m42;\n\t                //Crazy IE10 Matrix\n\t                else if (matrix.length === 16)\n\t                    curTransform = parseFloat(matrix[13]);\n\t                //Normal Browsers\n\t                else\n\t                    curTransform = parseFloat(matrix[5]);\n\t            }\n\t            if (s.rtl && curTransform) curTransform = -curTransform;\n\t            return curTransform || 0;\n\t        };\n\t        s.getWrapperTranslate = function (axis) {\n\t            if (typeof axis === 'undefined') {\n\t                axis = isH() ? 'x' : 'y';\n\t            }\n\t            return s.getTranslate(s.wrapper[0], axis);\n\t        };\n\t        \n\t        /*=========================\n\t          Observer\n\t          ===========================*/\n\t        s.observers = [];\n\t        function initObserver(target, options) {\n\t            options = options || {};\n\t            // create an observer instance\n\t            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n\t            var observer = new ObserverFunc(function (mutations) {\n\t                mutations.forEach(function (mutation) {\n\t                    s.onResize(true);\n\t                    s.emit('onObserverUpdate', s, mutation);\n\t                });\n\t            });\n\t        \n\t            observer.observe(target, {\n\t                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n\t                childList: typeof options.childList === 'undefined' ? true : options.childList,\n\t                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n\t            });\n\t        \n\t            s.observers.push(observer);\n\t        }\n\t        s.initObservers = function () {\n\t            if (s.params.observeParents) {\n\t                var containerParents = s.container.parents();\n\t                for (var i = 0; i < containerParents.length; i++) {\n\t                    initObserver(containerParents[i]);\n\t                }\n\t            }\n\t        \n\t            // Observe container\n\t            initObserver(s.container[0], {childList: false});\n\t        \n\t            // Observe wrapper\n\t            initObserver(s.wrapper[0], {attributes: false});\n\t        };\n\t        s.disconnectObservers = function () {\n\t            for (var i = 0; i < s.observers.length; i++) {\n\t                s.observers[i].disconnect();\n\t            }\n\t            s.observers = [];\n\t        };\n\t        /*=========================\n\t          Loop\n\t          ===========================*/\n\t        // Create looped slides\n\t        s.createLoop = function () {\n\t            // Remove duplicated slides\n\t            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n\t        \n\t            var slides = s.wrapper.children('.' + s.params.slideClass);\n\t        \n\t            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;\n\t        \n\t            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);\n\t            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;\n\t            if (s.loopedSlides > slides.length) {\n\t                s.loopedSlides = slides.length;\n\t            }\n\t        \n\t            var prependSlides = [], appendSlides = [], i;\n\t            slides.each(function (index, el) {\n\t                var slide = $(this);\n\t                if (index < s.loopedSlides) appendSlides.push(el);\n\t                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);\n\t                slide.attr('data-swiper-slide-index', index);\n\t            });\n\t            for (i = 0; i < appendSlides.length; i++) {\n\t                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n\t            }\n\t            for (i = prependSlides.length - 1; i >= 0; i--) {\n\t                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n\t            }\n\t        };\n\t        s.destroyLoop = function () {\n\t            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n\t            s.slides.removeAttr('data-swiper-slide-index');\n\t        };\n\t        s.fixLoop = function () {\n\t            var newIndex;\n\t            //Fix For Negative Oversliding\n\t            if (s.activeIndex < s.loopedSlides) {\n\t                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;\n\t                newIndex = newIndex + s.loopedSlides;\n\t                s.slideTo(newIndex, 0, false, true);\n\t            }\n\t            //Fix For Positive Oversliding\n\t            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {\n\t                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;\n\t                newIndex = newIndex + s.loopedSlides;\n\t                s.slideTo(newIndex, 0, false, true);\n\t            }\n\t        };\n\t        /*=========================\n\t          Append/Prepend/Remove Slides\n\t          ===========================*/\n\t        s.appendSlide = function (slides) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            if (typeof slides === 'object' && slides.length) {\n\t                for (var i = 0; i < slides.length; i++) {\n\t                    if (slides[i]) s.wrapper.append(slides[i]);\n\t                }\n\t            }\n\t            else {\n\t                s.wrapper.append(slides);\n\t            }\n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t        };\n\t        s.prependSlide = function (slides) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            var newActiveIndex = s.activeIndex + 1;\n\t            if (typeof slides === 'object' && slides.length) {\n\t                for (var i = 0; i < slides.length; i++) {\n\t                    if (slides[i]) s.wrapper.prepend(slides[i]);\n\t                }\n\t                newActiveIndex = s.activeIndex + slides.length;\n\t            }\n\t            else {\n\t                s.wrapper.prepend(slides);\n\t            }\n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t            s.slideTo(newActiveIndex, 0, false);\n\t        };\n\t        s.removeSlide = function (slidesIndexes) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t                s.slides = s.wrapper.children('.' + s.params.slideClass);\n\t            }\n\t            var newActiveIndex = s.activeIndex,\n\t                indexToRemove;\n\t            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {\n\t                for (var i = 0; i < slidesIndexes.length; i++) {\n\t                    indexToRemove = slidesIndexes[i];\n\t                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n\t                    if (indexToRemove < newActiveIndex) newActiveIndex--;\n\t                }\n\t                newActiveIndex = Math.max(newActiveIndex, 0);\n\t            }\n\t            else {\n\t                indexToRemove = slidesIndexes;\n\t                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n\t                if (indexToRemove < newActiveIndex) newActiveIndex--;\n\t                newActiveIndex = Math.max(newActiveIndex, 0);\n\t            }\n\t        \n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t        \n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t            if (s.params.loop) {\n\t                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);\n\t            }\n\t            else {\n\t                s.slideTo(newActiveIndex, 0, false);\n\t            }\n\t        \n\t        };\n\t        s.removeAllSlides = function () {\n\t            var slidesIndexes = [];\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                slidesIndexes.push(i);\n\t            }\n\t            s.removeSlide(slidesIndexes);\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Effects\n\t          ===========================*/\n\t        s.effects = {\n\t            fade: {\n\t                setTranslate: function () {\n\t                    for (var i = 0; i < s.slides.length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var offset = slide[0].swiperSlideOffset;\n\t                        var tx = -offset;\n\t                        if (!s.params.virtualTranslate) tx = tx - s.translate;\n\t                        var ty = 0;\n\t                        if (!isH()) {\n\t                            ty = tx;\n\t                            tx = 0;\n\t                        }\n\t                        var slideOpacity = s.params.fade.crossFade ?\n\t                                Math.max(1 - Math.abs(slide[0].progress), 0) :\n\t                                1 + Math.min(Math.max(slide[0].progress, -1), 0);\n\t                        slide\n\t                            .css({\n\t                                opacity: slideOpacity\n\t                            })\n\t                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');\n\t        \n\t                    }\n\t        \n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration);\n\t                    if (s.params.virtualTranslate && duration !== 0) {\n\t                        var eventTriggered = false;\n\t                        s.slides.transitionEnd(function () {\n\t                            if (eventTriggered) return;\n\t                            if (!s) return;\n\t                            eventTriggered = true;\n\t                            s.animating = false;\n\t                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n\t                            for (var i = 0; i < triggerEvents.length; i++) {\n\t                                s.wrapper.trigger(triggerEvents[i]);\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            },\n\t            cube: {\n\t                setTranslate: function () {\n\t                    var wrapperRotate = 0, cubeShadow;\n\t                    if (s.params.cube.shadow) {\n\t                        if (isH()) {\n\t                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');\n\t                            if (cubeShadow.length === 0) {\n\t                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n\t                                s.wrapper.append(cubeShadow);\n\t                            }\n\t                            cubeShadow.css({height: s.width + 'px'});\n\t                        }\n\t                        else {\n\t                            cubeShadow = s.container.find('.swiper-cube-shadow');\n\t                            if (cubeShadow.length === 0) {\n\t                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n\t                                s.container.append(cubeShadow);\n\t                            }\n\t                        }\n\t                    }\n\t                    for (var i = 0; i < s.slides.length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var slideAngle = i * 90;\n\t                        var round = Math.floor(slideAngle / 360);\n\t                        if (s.rtl) {\n\t                            slideAngle = -slideAngle;\n\t                            round = Math.floor(-slideAngle / 360);\n\t                        }\n\t                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);\n\t                        var tx = 0, ty = 0, tz = 0;\n\t                        if (i % 4 === 0) {\n\t                            tx = - round * 4 * s.size;\n\t                            tz = 0;\n\t                        }\n\t                        else if ((i - 1) % 4 === 0) {\n\t                            tx = 0;\n\t                            tz = - round * 4 * s.size;\n\t                        }\n\t                        else if ((i - 2) % 4 === 0) {\n\t                            tx = s.size + round * 4 * s.size;\n\t                            tz = s.size;\n\t                        }\n\t                        else if ((i - 3) % 4 === 0) {\n\t                            tx = - s.size;\n\t                            tz = 3 * s.size + s.size * 4 * round;\n\t                        }\n\t                        if (s.rtl) {\n\t                            tx = -tx;\n\t                        }\n\t        \n\t                        if (!isH()) {\n\t                            ty = tx;\n\t                            tx = 0;\n\t                        }\n\t        \n\t                        var transform = 'rotateX(' + (isH() ? 0 : -slideAngle) + 'deg) rotateY(' + (isH() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';\n\t                        if (progress <= 1 && progress > -1) {\n\t                            wrapperRotate = i * 90 + progress * 90;\n\t                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;\n\t                        }\n\t                        slide.transform(transform);\n\t                        if (s.params.cube.slideShadows) {\n\t                            //Set shadows\n\t                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n\t                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n\t                            if (shadowBefore.length === 0) {\n\t                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n\t                                slide.append(shadowBefore);\n\t                            }\n\t                            if (shadowAfter.length === 0) {\n\t                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n\t                                slide.append(shadowAfter);\n\t                            }\n\t                            var shadowOpacity = slide[0].progress;\n\t                            if (shadowBefore.length) shadowBefore[0].style.opacity = -slide[0].progress;\n\t                            if (shadowAfter.length) shadowAfter[0].style.opacity = slide[0].progress;\n\t                        }\n\t                    }\n\t                    s.wrapper.css({\n\t                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'\n\t                    });\n\t        \n\t                    if (s.params.cube.shadow) {\n\t                        if (isH()) {\n\t                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');\n\t                        }\n\t                        else {\n\t                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n\t                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n\t                            var scale1 = s.params.cube.shadowScale,\n\t                                scale2 = s.params.cube.shadowScale / multiplier,\n\t                                offset = s.params.cube.shadowOffset;\n\t                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');\n\t                        }\n\t                    }\n\t                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;\n\t                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (isH() ? 0 : wrapperRotate) + 'deg) rotateY(' + (isH() ? -wrapperRotate : 0) + 'deg)');\n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\t                    if (s.params.cube.shadow && !isH()) {\n\t                        s.container.find('.swiper-cube-shadow').transition(duration);\n\t                    }\n\t                }\n\t            },\n\t            coverflow: {\n\t                setTranslate: function () {\n\t                    var transform = s.translate;\n\t                    var center = isH() ? -transform + s.width / 2 : -transform + s.height / 2;\n\t                    var rotate = isH() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;\n\t                    var translate = s.params.coverflow.depth;\n\t                    //Each slide offset from center\n\t                    for (var i = 0, length = s.slides.length; i < length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var slideSize = s.slidesSizesGrid[i];\n\t                        var slideOffset = slide[0].swiperSlideOffset;\n\t                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;\n\t        \n\t                        var rotateY = isH() ? rotate * offsetMultiplier : 0;\n\t                        var rotateX = isH() ? 0 : rotate * offsetMultiplier;\n\t                        // var rotateZ = 0\n\t                        var translateZ = -translate * Math.abs(offsetMultiplier);\n\t        \n\t                        var translateY = isH() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);\n\t                        var translateX = isH() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;\n\t        \n\t                        //Fix for ultra small values\n\t                        if (Math.abs(translateX) < 0.001) translateX = 0;\n\t                        if (Math.abs(translateY) < 0.001) translateY = 0;\n\t                        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n\t                        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n\t                        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\t        \n\t                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';\n\t        \n\t                        slide.transform(slideTransform);\n\t                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\t                        if (s.params.coverflow.slideShadows) {\n\t                            //Set shadows\n\t                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n\t                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n\t                            if (shadowBefore.length === 0) {\n\t                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n\t                                slide.append(shadowBefore);\n\t                            }\n\t                            if (shadowAfter.length === 0) {\n\t                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n\t                                slide.append(shadowAfter);\n\t                            }\n\t                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n\t                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n\t                        }\n\t                    }\n\t        \n\t                    //Set correct perspective for IE10\n\t                    if (s.browser.ie) {\n\t                        var ws = s.wrapper[0].style;\n\t                        ws.perspectiveOrigin = center + 'px 50%';\n\t                    }\n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Images Lazy Loading\n\t          ===========================*/\n\t        s.lazy = {\n\t            initialImageLoaded: false,\n\t            loadImageInSlide: function (index, loadInDuplicate) {\n\t                if (typeof index === 'undefined') return;\n\t                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;\n\t                if (s.slides.length === 0) return;\n\t        \n\t                var slide = s.slides.eq(index);\n\t                var img = slide.find('.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');\n\t                if (slide.hasClass('swiper-lazy') && !slide.hasClass('swiper-lazy-loaded') && !slide.hasClass('swiper-lazy-loading')) {\n\t                    img = img.add(slide[0]);\n\t                }\n\t                if (img.length === 0) return;\n\t        \n\t                img.each(function () {\n\t                    var _img = $(this);\n\t                    _img.addClass('swiper-lazy-loading');\n\t                    var background = _img.attr('data-background');\n\t                    var src = _img.attr('data-src'),\n\t                        srcset = _img.attr('data-srcset');\n\t                    s.loadImage(_img[0], (src || background), srcset, false, function () {\n\t                        if (background) {\n\t                            _img.css('background-image', 'url(' + background + ')');\n\t                            _img.removeAttr('data-background');\n\t                        }\n\t                        else {\n\t                            if (srcset) {\n\t                                _img.attr('srcset', srcset);\n\t                                _img.removeAttr('data-srcset');\n\t                            }\n\t                            if (src) {\n\t                                _img.attr('src', src);\n\t                                _img.removeAttr('data-src');\n\t                            }\n\t        \n\t                        }\n\t        \n\t                        _img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');\n\t                        slide.find('.swiper-lazy-preloader, .preloader').remove();\n\t                        if (s.params.loop && loadInDuplicate) {\n\t                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');\n\t                            if (slide.hasClass(s.params.slideDuplicateClass)) {\n\t                                var originalSlide = s.wrapper.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')');\n\t                                s.lazy.loadImageInSlide(originalSlide.index(), false);\n\t                            }\n\t                            else {\n\t                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n\t                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);\n\t                            }\n\t                        }\n\t                        s.emit('onLazyImageReady', s, slide[0], _img[0]);\n\t                    });\n\t        \n\t                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);\n\t                });\n\t        \n\t            },\n\t            load: function () {\n\t                var i;\n\t                if (s.params.watchSlidesVisibility) {\n\t                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {\n\t                        s.lazy.loadImageInSlide($(this).index());\n\t                    });\n\t                }\n\t                else {\n\t                    if (s.params.slidesPerView > 1) {\n\t                        for (i = s.activeIndex; i < s.activeIndex + s.params.slidesPerView ; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                    }\n\t                    else {\n\t                        s.lazy.loadImageInSlide(s.activeIndex);\n\t                    }\n\t                }\n\t                if (s.params.lazyLoadingInPrevNext) {\n\t                    if (s.params.slidesPerView > 1) {\n\t                        // Next Slides\n\t                        for (i = s.activeIndex + s.params.slidesPerView; i < s.activeIndex + s.params.slidesPerView + s.params.slidesPerView; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                        // Prev Slides\n\t                        for (i = s.activeIndex - s.params.slidesPerView; i < s.activeIndex ; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                    }\n\t                    else {\n\t                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);\n\t                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());\n\t        \n\t                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);\n\t                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());\n\t                    }\n\t                }\n\t            },\n\t            onTransitionStart: function () {\n\t                if (s.params.lazyLoading) {\n\t                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {\n\t                        s.lazy.load();\n\t                    }\n\t                }\n\t            },\n\t            onTransitionEnd: function () {\n\t                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {\n\t                    s.lazy.load();\n\t                }\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Scrollbar\n\t          ===========================*/\n\t        s.scrollbar = {\n\t            isTouched: false,\n\t            setDragPosition: function (e) {\n\t                var sb = s.scrollbar;\n\t                var x = 0, y = 0;\n\t                var translate;\n\t                var pointerPosition = isH() ?\n\t                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :\n\t                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;\n\t                var position = (pointerPosition) - sb.track.offset()[isH() ? 'left' : 'top'] - sb.dragSize / 2;\n\t                var positionMin = -s.minTranslate() * sb.moveDivider;\n\t                var positionMax = -s.maxTranslate() * sb.moveDivider;\n\t                if (position < positionMin) {\n\t                    position = positionMin;\n\t                }\n\t                else if (position > positionMax) {\n\t                    position = positionMax;\n\t                }\n\t                position = -position / sb.moveDivider;\n\t                s.updateProgress(position);\n\t                s.setWrapperTranslate(position, true);\n\t            },\n\t            dragStart: function (e) {\n\t                var sb = s.scrollbar;\n\t                sb.isTouched = true;\n\t                e.preventDefault();\n\t                e.stopPropagation();\n\t        \n\t                sb.setDragPosition(e);\n\t                clearTimeout(sb.dragTimeout);\n\t        \n\t                sb.track.transition(0);\n\t                if (s.params.scrollbarHide) {\n\t                    sb.track.css('opacity', 1);\n\t                }\n\t                s.wrapper.transition(100);\n\t                sb.drag.transition(100);\n\t                s.emit('onScrollbarDragStart', s);\n\t            },\n\t            dragMove: function (e) {\n\t                var sb = s.scrollbar;\n\t                if (!sb.isTouched) return;\n\t                if (e.preventDefault) e.preventDefault();\n\t                else e.returnValue = false;\n\t                sb.setDragPosition(e);\n\t                s.wrapper.transition(0);\n\t                sb.track.transition(0);\n\t                sb.drag.transition(0);\n\t                s.emit('onScrollbarDragMove', s);\n\t            },\n\t            dragEnd: function (e) {\n\t                var sb = s.scrollbar;\n\t                if (!sb.isTouched) return;\n\t                sb.isTouched = false;\n\t                if (s.params.scrollbarHide) {\n\t                    clearTimeout(sb.dragTimeout);\n\t                    sb.dragTimeout = setTimeout(function () {\n\t                        sb.track.css('opacity', 0);\n\t                        sb.track.transition(400);\n\t                    }, 1000);\n\t        \n\t                }\n\t                s.emit('onScrollbarDragEnd', s);\n\t                if (s.params.scrollbarSnapOnRelease) {\n\t                    s.slideReset();\n\t                }\n\t            },\n\t            enableDraggable: function () {\n\t                var sb = s.scrollbar;\n\t                var target = s.support.touch ? sb.track : document;\n\t                $(sb.track).on(s.touchEvents.start, sb.dragStart);\n\t                $(target).on(s.touchEvents.move, sb.dragMove);\n\t                $(target).on(s.touchEvents.end, sb.dragEnd);\n\t            },\n\t            disableDraggable: function () {\n\t                var sb = s.scrollbar;\n\t                var target = s.support.touch ? sb.track : document;\n\t                $(sb.track).off(s.touchEvents.start, sb.dragStart);\n\t                $(target).off(s.touchEvents.move, sb.dragMove);\n\t                $(target).off(s.touchEvents.end, sb.dragEnd);\n\t            },\n\t            set: function () {\n\t                if (!s.params.scrollbar) return;\n\t                var sb = s.scrollbar;\n\t                sb.track = $(s.params.scrollbar);\n\t                sb.drag = sb.track.find('.swiper-scrollbar-drag');\n\t                if (sb.drag.length === 0) {\n\t                    sb.drag = $('<div class=\"swiper-scrollbar-drag\"></div>');\n\t                    sb.track.append(sb.drag);\n\t                }\n\t                sb.drag[0].style.width = '';\n\t                sb.drag[0].style.height = '';\n\t                sb.trackSize = isH() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;\n\t        \n\t                sb.divider = s.size / s.virtualSize;\n\t                sb.moveDivider = sb.divider * (sb.trackSize / s.size);\n\t                sb.dragSize = sb.trackSize * sb.divider;\n\t        \n\t                if (isH()) {\n\t                    sb.drag[0].style.width = sb.dragSize + 'px';\n\t                }\n\t                else {\n\t                    sb.drag[0].style.height = sb.dragSize + 'px';\n\t                }\n\t        \n\t                if (sb.divider >= 1) {\n\t                    sb.track[0].style.display = 'none';\n\t                }\n\t                else {\n\t                    sb.track[0].style.display = '';\n\t                }\n\t                if (s.params.scrollbarHide) {\n\t                    sb.track[0].style.opacity = 0;\n\t                }\n\t            },\n\t            setTranslate: function () {\n\t                if (!s.params.scrollbar) return;\n\t                var diff;\n\t                var sb = s.scrollbar;\n\t                var translate = s.translate || 0;\n\t                var newPos;\n\t        \n\t                var newSize = sb.dragSize;\n\t                newPos = (sb.trackSize - sb.dragSize) * s.progress;\n\t                if (s.rtl && isH()) {\n\t                    newPos = -newPos;\n\t                    if (newPos > 0) {\n\t                        newSize = sb.dragSize - newPos;\n\t                        newPos = 0;\n\t                    }\n\t                    else if (-newPos + sb.dragSize > sb.trackSize) {\n\t                        newSize = sb.trackSize + newPos;\n\t                    }\n\t                }\n\t                else {\n\t                    if (newPos < 0) {\n\t                        newSize = sb.dragSize + newPos;\n\t                        newPos = 0;\n\t                    }\n\t                    else if (newPos + sb.dragSize > sb.trackSize) {\n\t                        newSize = sb.trackSize - newPos;\n\t                    }\n\t                }\n\t                if (isH()) {\n\t                    if (s.support.transforms3d) {\n\t                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');\n\t                    }\n\t                    else {\n\t                        sb.drag.transform('translateX(' + (newPos) + 'px)');\n\t                    }\n\t                    sb.drag[0].style.width = newSize + 'px';\n\t                }\n\t                else {\n\t                    if (s.support.transforms3d) {\n\t                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');\n\t                    }\n\t                    else {\n\t                        sb.drag.transform('translateY(' + (newPos) + 'px)');\n\t                    }\n\t                    sb.drag[0].style.height = newSize + 'px';\n\t                }\n\t                if (s.params.scrollbarHide) {\n\t                    clearTimeout(sb.timeout);\n\t                    sb.track[0].style.opacity = 1;\n\t                    sb.timeout = setTimeout(function () {\n\t                        sb.track[0].style.opacity = 0;\n\t                        sb.track.transition(400);\n\t                    }, 1000);\n\t                }\n\t            },\n\t            setTransition: function (duration) {\n\t                if (!s.params.scrollbar) return;\n\t                s.scrollbar.drag.transition(duration);\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Controller\n\t          ===========================*/\n\t        s.controller = {\n\t            LinearSpline: function (x, y) {\n\t                this.x = x;\n\t                this.y = y;\n\t                this.lastIndex = x.length - 1;\n\t                // Given an x value (x2), return the expected y2 value:\n\t                // (x1,y1) is the known point before given value,\n\t                // (x3,y3) is the known point after given value.\n\t                var i1, i3;\n\t                var l = this.x.length;\n\t        \n\t                this.interpolate = function (x2) {\n\t                    if (!x2) return 0;\n\t        \n\t                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\t                    i3 = binarySearch(this.x, x2);\n\t                    i1 = i3 - 1;\n\t        \n\t                    // We have our indexes i1 & i3, so we can calculate already:\n\t                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\t                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];\n\t                };\n\t        \n\t                var binarySearch = (function() {\n\t                    var maxIndex, minIndex, guess;\n\t                    return function(array, val) {\n\t                        minIndex = -1;\n\t                        maxIndex = array.length;\n\t                        while (maxIndex - minIndex > 1)\n\t                            if (array[guess = maxIndex + minIndex >> 1] <= val) {\n\t                                minIndex = guess;\n\t                            } else {\n\t                                maxIndex = guess;\n\t                            }\n\t                        return maxIndex;\n\t                    };\n\t                })();\n\t            },\n\t            //xxx: for now i will just save one spline function to to\n\t            getInterpolateFunction: function(c){\n\t                if(!s.controller.spline) s.controller.spline = s.params.loop ?\n\t                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :\n\t                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);\n\t            },\n\t            setTranslate: function (translate, byController) {\n\t               var controlled = s.params.control;\n\t               var multiplier, controlledTranslate;\n\t               function setControlledTranslate(c) {\n\t                    // this will create an Interpolate function based on the snapGrids\n\t                    // x is the Grid of the scrolled scroller and y will be the controlled scroller\n\t                    // it makes sense to create this only once and recall it for the interpolation\n\t                    // the function does a lot of value caching for performance\n\t                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;\n\t                    if (s.params.controlBy === 'slide') {\n\t                        s.controller.getInterpolateFunction(c);\n\t                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n\t                        // but it did not work out\n\t                        controlledTranslate = -s.controller.spline.interpolate(-translate);\n\t                    }\n\t        \n\t                    if(!controlledTranslate || s.params.controlBy === 'container'){\n\t                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());\n\t                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();\n\t                    }\n\t        \n\t                    if (s.params.controlInverse) {\n\t                        controlledTranslate = c.maxTranslate() - controlledTranslate;\n\t                    }\n\t                    c.updateProgress(controlledTranslate);\n\t                    c.setWrapperTranslate(controlledTranslate, false, s);\n\t                    c.updateActiveIndex();\n\t               }\n\t               if (s.isArray(controlled)) {\n\t                   for (var i = 0; i < controlled.length; i++) {\n\t                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n\t                           setControlledTranslate(controlled[i]);\n\t                       }\n\t                   }\n\t               }\n\t               else if (controlled instanceof Swiper && byController !== controlled) {\n\t        \n\t                   setControlledTranslate(controlled);\n\t               }\n\t            },\n\t            setTransition: function (duration, byController) {\n\t                var controlled = s.params.control;\n\t                var i;\n\t                function setControlledTransition(c) {\n\t                    c.setWrapperTransition(duration, s);\n\t                    if (duration !== 0) {\n\t                        c.onTransitionStart();\n\t                        c.wrapper.transitionEnd(function(){\n\t                            if (!controlled) return;\n\t                            if (c.params.loop && s.params.controlBy === 'slide') {\n\t                                c.fixLoop();\n\t                            }\n\t                            c.onTransitionEnd();\n\t        \n\t                        });\n\t                    }\n\t                }\n\t                if (s.isArray(controlled)) {\n\t                    for (i = 0; i < controlled.length; i++) {\n\t                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n\t                            setControlledTransition(controlled[i]);\n\t                        }\n\t                    }\n\t                }\n\t                else if (controlled instanceof Swiper && byController !== controlled) {\n\t                    setControlledTransition(controlled);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Hash Navigation\n\t          ===========================*/\n\t        s.hashnav = {\n\t            init: function () {\n\t                if (!s.params.hashnav) return;\n\t                s.hashnav.initialized = true;\n\t                var hash = document.location.hash.replace('#', '');\n\t                if (!hash) return;\n\t                var speed = 0;\n\t                for (var i = 0, length = s.slides.length; i < length; i++) {\n\t                    var slide = s.slides.eq(i);\n\t                    var slideHash = slide.attr('data-hash');\n\t                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {\n\t                        var index = slide.index();\n\t                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);\n\t                    }\n\t                }\n\t            },\n\t            setHash: function () {\n\t                if (!s.hashnav.initialized || !s.params.hashnav) return;\n\t                document.location.hash = s.slides.eq(s.activeIndex).attr('data-hash') || '';\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Keyboard Control\n\t          ===========================*/\n\t        function handleKeyboard(e) {\n\t            if (e.originalEvent) e = e.originalEvent; //jquery fix\n\t            var kc = e.keyCode || e.charCode;\n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && (isH() && kc === 39 || !isH() && kc === 40)) {\n\t                return false;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && (isH() && kc === 37 || !isH() && kc === 38)) {\n\t                return false;\n\t            }\n\t            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n\t                return;\n\t            }\n\t            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n\t                return;\n\t            }\n\t            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n\t                var inView = false;\n\t                //Check that swiper should be inside of visible area of window\n\t                if (s.container.parents('.swiper-slide').length > 0 && s.container.parents('.swiper-slide-active').length === 0) {\n\t                    return;\n\t                }\n\t                var windowScroll = {\n\t                    left: window.pageXOffset,\n\t                    top: window.pageYOffset\n\t                };\n\t                var windowWidth = window.innerWidth;\n\t                var windowHeight = window.innerHeight;\n\t                var swiperOffset = s.container.offset();\n\t                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;\n\t                var swiperCoord = [\n\t                    [swiperOffset.left, swiperOffset.top],\n\t                    [swiperOffset.left + s.width, swiperOffset.top],\n\t                    [swiperOffset.left, swiperOffset.top + s.height],\n\t                    [swiperOffset.left + s.width, swiperOffset.top + s.height]\n\t                ];\n\t                for (var i = 0; i < swiperCoord.length; i++) {\n\t                    var point = swiperCoord[i];\n\t                    if (\n\t                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&\n\t                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight\n\t                    ) {\n\t                        inView = true;\n\t                    }\n\t        \n\t                }\n\t                if (!inView) return;\n\t            }\n\t            if (isH()) {\n\t                if (kc === 37 || kc === 39) {\n\t                    if (e.preventDefault) e.preventDefault();\n\t                    else e.returnValue = false;\n\t                }\n\t                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();\n\t                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();\n\t            }\n\t            else {\n\t                if (kc === 38 || kc === 40) {\n\t                    if (e.preventDefault) e.preventDefault();\n\t                    else e.returnValue = false;\n\t                }\n\t                if (kc === 40) s.slideNext();\n\t                if (kc === 38) s.slidePrev();\n\t            }\n\t        }\n\t        s.disableKeyboardControl = function () {\n\t            s.params.keyboardControl = false;\n\t            $(document).off('keydown', handleKeyboard);\n\t        };\n\t        s.enableKeyboardControl = function () {\n\t            s.params.keyboardControl = true;\n\t            $(document).on('keydown', handleKeyboard);\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Mousewheel Control\n\t          ===========================*/\n\t        s.mousewheel = {\n\t            event: false,\n\t            lastScrollTime: (new window.Date()).getTime()\n\t        };\n\t        if (s.params.mousewheelControl) {\n\t            try {\n\t                new window.WheelEvent('wheel');\n\t                s.mousewheel.event = 'wheel';\n\t            } catch (e) {}\n\t        \n\t            if (!s.mousewheel.event && document.onmousewheel !== undefined) {\n\t                s.mousewheel.event = 'mousewheel';\n\t            }\n\t            if (!s.mousewheel.event) {\n\t                s.mousewheel.event = 'DOMMouseScroll';\n\t            }\n\t        }\n\t        function handleMousewheel(e) {\n\t            if (e.originalEvent) e = e.originalEvent; //jquery fix\n\t            var we = s.mousewheel.event;\n\t            var delta = 0;\n\t            var rtlFactor = s.rtl ? -1 : 1;\n\t            //Opera & IE\n\t            if (e.detail) delta = -e.detail;\n\t            //WebKits\n\t            else if (we === 'mousewheel') {\n\t                if (s.params.mousewheelForceToAxis) {\n\t                    if (isH()) {\n\t                        if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY)) delta = e.wheelDeltaX * rtlFactor;\n\t                        else return;\n\t                    }\n\t                    else {\n\t                        if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX)) delta = e.wheelDeltaY;\n\t                        else return;\n\t                    }\n\t                }\n\t                else {\n\t                    delta = Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY) ? - e.wheelDeltaX * rtlFactor : - e.wheelDeltaY;\n\t                }\n\t            }\n\t            //Old FireFox\n\t            else if (we === 'DOMMouseScroll') delta = -e.detail;\n\t            //New FireFox\n\t            else if (we === 'wheel') {\n\t                if (s.params.mousewheelForceToAxis) {\n\t                    if (isH()) {\n\t                        if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) delta = -e.deltaX * rtlFactor;\n\t                        else return;\n\t                    }\n\t                    else {\n\t                        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) delta = -e.deltaY;\n\t                        else return;\n\t                    }\n\t                }\n\t                else {\n\t                    delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? - e.deltaX * rtlFactor : - e.deltaY;\n\t                }\n\t            }\n\t            if (delta === 0) return;\n\t        \n\t            if (s.params.mousewheelInvert) delta = -delta;\n\t        \n\t            if (!s.params.freeMode) {\n\t                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {\n\t                    if (delta < 0) {\n\t                        if ((!s.isEnd || s.params.loop) && !s.animating) s.slideNext();\n\t                        else if (s.params.mousewheelReleaseOnEdges) return true;\n\t                    }\n\t                    else {\n\t                        if ((!s.isBeginning || s.params.loop) && !s.animating) s.slidePrev();\n\t                        else if (s.params.mousewheelReleaseOnEdges) return true;\n\t                    }\n\t                }\n\t                s.mousewheel.lastScrollTime = (new window.Date()).getTime();\n\t        \n\t            }\n\t            else {\n\t                //Freemode or scrollContainer:\n\t                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;\n\t                var wasBeginning = s.isBeginning,\n\t                    wasEnd = s.isEnd;\n\t        \n\t                if (position >= s.minTranslate()) position = s.minTranslate();\n\t                if (position <= s.maxTranslate()) position = s.maxTranslate();\n\t        \n\t                s.setWrapperTransition(0);\n\t                s.setWrapperTranslate(position);\n\t                s.updateProgress();\n\t                s.updateActiveIndex();\n\t        \n\t                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {\n\t                    s.updateClasses();\n\t                }\n\t        \n\t                if (s.params.freeModeSticky) {\n\t                    clearTimeout(s.mousewheel.timeout);\n\t                    s.mousewheel.timeout = setTimeout(function () {\n\t                        s.slideReset();\n\t                    }, 300);\n\t                }\n\t        \n\t                // Return page scroll on edge positions\n\t                if (position === 0 || position === s.maxTranslate()) return;\n\t            }\n\t            if (s.params.autoplay) s.stopAutoplay();\n\t        \n\t            if (e.preventDefault) e.preventDefault();\n\t            else e.returnValue = false;\n\t            return false;\n\t        }\n\t        s.disableMousewheelControl = function () {\n\t            if (!s.mousewheel.event) return false;\n\t            s.container.off(s.mousewheel.event, handleMousewheel);\n\t            return true;\n\t        };\n\t        \n\t        s.enableMousewheelControl = function () {\n\t            if (!s.mousewheel.event) return false;\n\t            s.container.on(s.mousewheel.event, handleMousewheel);\n\t            return true;\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Parallax\n\t          ===========================*/\n\t        function setParallaxTransform(el, progress) {\n\t            el = $(el);\n\t            var p, pX, pY;\n\t            var rtlFactor = s.rtl ? -1 : 1;\n\t        \n\t            p = el.attr('data-swiper-parallax') || '0';\n\t            pX = el.attr('data-swiper-parallax-x');\n\t            pY = el.attr('data-swiper-parallax-y');\n\t            if (pX || pY) {\n\t                pX = pX || '0';\n\t                pY = pY || '0';\n\t            }\n\t            else {\n\t                if (isH()) {\n\t                    pX = p;\n\t                    pY = '0';\n\t                }\n\t                else {\n\t                    pY = p;\n\t                    pX = '0';\n\t                }\n\t            }\n\t        \n\t            if ((pX).indexOf('%') >= 0) {\n\t                pX = parseInt(pX, 10) * progress * rtlFactor + '%';\n\t            }\n\t            else {\n\t                pX = pX * progress * rtlFactor + 'px' ;\n\t            }\n\t            if ((pY).indexOf('%') >= 0) {\n\t                pY = parseInt(pY, 10) * progress + '%';\n\t            }\n\t            else {\n\t                pY = pY * progress + 'px' ;\n\t            }\n\t        \n\t            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');\n\t        }\n\t        s.parallax = {\n\t            setTranslate: function () {\n\t                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n\t                    setParallaxTransform(this, s.progress);\n\t        \n\t                });\n\t                s.slides.each(function () {\n\t                    var slide = $(this);\n\t                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {\n\t                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);\n\t                        setParallaxTransform(this, progress);\n\t                    });\n\t                });\n\t            },\n\t            setTransition: function (duration) {\n\t                if (typeof duration === 'undefined') duration = s.params.speed;\n\t                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n\t                    var el = $(this);\n\t                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;\n\t                    if (duration === 0) parallaxDuration = 0;\n\t                    el.transition(parallaxDuration);\n\t                });\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Plugins API. Collect all and init all plugins\n\t          ===========================*/\n\t        s._plugins = [];\n\t        for (var plugin in s.plugins) {\n\t            var p = s.plugins[plugin](s, s.params[plugin]);\n\t            if (p) s._plugins.push(p);\n\t        }\n\t        // Method to call all plugins event/method\n\t        s.callPlugins = function (eventName) {\n\t            for (var i = 0; i < s._plugins.length; i++) {\n\t                if (eventName in s._plugins[i]) {\n\t                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Events/Callbacks/Plugins Emitter\n\t          ===========================*/\n\t        function normalizeEventName (eventName) {\n\t            if (eventName.indexOf('on') !== 0) {\n\t                if (eventName[0] !== eventName[0].toUpperCase()) {\n\t                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);\n\t                }\n\t                else {\n\t                    eventName = 'on' + eventName;\n\t                }\n\t            }\n\t            return eventName;\n\t        }\n\t        s.emitterEventListeners = {\n\t        \n\t        };\n\t        s.emit = function (eventName) {\n\t            // Trigger callbacks\n\t            if (s.params[eventName]) {\n\t                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t            }\n\t            var i;\n\t            // Trigger events\n\t            if (s.emitterEventListeners[eventName]) {\n\t                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n\t                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t                }\n\t            }\n\t            // Trigger plugins\n\t            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t        };\n\t        s.on = function (eventName, handler) {\n\t            eventName = normalizeEventName(eventName);\n\t            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];\n\t            s.emitterEventListeners[eventName].push(handler);\n\t            return s;\n\t        };\n\t        s.off = function (eventName, handler) {\n\t            var i;\n\t            eventName = normalizeEventName(eventName);\n\t            if (typeof handler === 'undefined') {\n\t                // Remove all handlers for such event\n\t                s.emitterEventListeners[eventName] = [];\n\t                return s;\n\t            }\n\t            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;\n\t            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n\t                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);\n\t            }\n\t            return s;\n\t        };\n\t        s.once = function (eventName, handler) {\n\t            eventName = normalizeEventName(eventName);\n\t            var _handler = function () {\n\t                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n\t                s.off(eventName, _handler);\n\t            };\n\t            s.on(eventName, _handler);\n\t            return s;\n\t        };\n\t\n\t        // Accessibility tools\n\t        s.a11y = {\n\t            makeFocusable: function ($el) {\n\t                $el.attr('tabIndex', '0');\n\t                return $el;\n\t            },\n\t            addRole: function ($el, role) {\n\t                $el.attr('role', role);\n\t                return $el;\n\t            },\n\t        \n\t            addLabel: function ($el, label) {\n\t                $el.attr('aria-label', label);\n\t                return $el;\n\t            },\n\t        \n\t            disable: function ($el) {\n\t                $el.attr('aria-disabled', true);\n\t                return $el;\n\t            },\n\t        \n\t            enable: function ($el) {\n\t                $el.attr('aria-disabled', false);\n\t                return $el;\n\t            },\n\t        \n\t            onEnterKey: function (event) {\n\t                if (event.keyCode !== 13) return;\n\t                if ($(event.target).is(s.params.nextButton)) {\n\t                    s.onClickNext(event);\n\t                    if (s.isEnd) {\n\t                        s.a11y.notify(s.params.lastSlideMessage);\n\t                    }\n\t                    else {\n\t                        s.a11y.notify(s.params.nextSlideMessage);\n\t                    }\n\t                }\n\t                else if ($(event.target).is(s.params.prevButton)) {\n\t                    s.onClickPrev(event);\n\t                    if (s.isBeginning) {\n\t                        s.a11y.notify(s.params.firstSlideMessage);\n\t                    }\n\t                    else {\n\t                        s.a11y.notify(s.params.prevSlideMessage);\n\t                    }\n\t                }\n\t                if ($(event.target).is('.' + s.params.bulletClass)) {\n\t                    $(event.target)[0].click();\n\t                }\n\t            },\n\t        \n\t            liveRegion: $('<span class=\"swiper-notification\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n\t        \n\t            notify: function (message) {\n\t                var notification = s.a11y.liveRegion;\n\t                if (notification.length === 0) return;\n\t                notification.html('');\n\t                notification.html(message);\n\t            },\n\t            init: function () {\n\t                // Setup accessibility\n\t                if (s.params.nextButton) {\n\t                    var nextButton = $(s.params.nextButton);\n\t                    s.a11y.makeFocusable(nextButton);\n\t                    s.a11y.addRole(nextButton, 'button');\n\t                    s.a11y.addLabel(nextButton, s.params.nextSlideMessage);\n\t                }\n\t                if (s.params.prevButton) {\n\t                    var prevButton = $(s.params.prevButton);\n\t                    s.a11y.makeFocusable(prevButton);\n\t                    s.a11y.addRole(prevButton, 'button');\n\t                    s.a11y.addLabel(prevButton, s.params.prevSlideMessage);\n\t                }\n\t        \n\t                $(s.container).append(s.a11y.liveRegion);\n\t            },\n\t            initPagination: function () {\n\t                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {\n\t                    s.bullets.each(function () {\n\t                        var bullet = $(this);\n\t                        s.a11y.makeFocusable(bullet);\n\t                        s.a11y.addRole(bullet, 'button');\n\t                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));\n\t                    });\n\t                }\n\t            },\n\t            destroy: function () {\n\t                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Init/Destroy\n\t          ===========================*/\n\t        s.init = function () {\n\t            if (s.params.loop) s.createLoop();\n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            s.updatePagination();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t                if (s.params.scrollbarDraggable) {\n\t                    s.scrollbar.enableDraggable();\n\t                }\n\t            }\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                if (!s.params.loop) s.updateProgress();\n\t                s.effects[s.params.effect].setTranslate();\n\t            }\n\t            if (s.params.loop) {\n\t                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);\n\t            }\n\t            else {\n\t                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);\n\t                if (s.params.initialSlide === 0) {\n\t                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();\n\t                    if (s.lazy && s.params.lazyLoading) {\n\t                        s.lazy.load();\n\t                        s.lazy.initialImageLoaded = true;\n\t                    }\n\t                }\n\t            }\n\t            s.attachEvents();\n\t            if (s.params.observer && s.support.observer) {\n\t                s.initObservers();\n\t            }\n\t            if (s.params.preloadImages && !s.params.lazyLoading) {\n\t                s.preloadImages();\n\t            }\n\t            if (s.params.autoplay) {\n\t                s.startAutoplay();\n\t            }\n\t            if (s.params.keyboardControl) {\n\t                if (s.enableKeyboardControl) s.enableKeyboardControl();\n\t            }\n\t            if (s.params.mousewheelControl) {\n\t                if (s.enableMousewheelControl) s.enableMousewheelControl();\n\t            }\n\t            if (s.params.hashnav) {\n\t                if (s.hashnav) s.hashnav.init();\n\t            }\n\t            if (s.params.a11y && s.a11y) s.a11y.init();\n\t            s.emit('onInit', s);\n\t        };\n\t        \n\t        // Cleanup dynamic styles\n\t        s.cleanupStyles = function () {\n\t            // Container\n\t            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');\n\t        \n\t            // Wrapper\n\t            s.wrapper.removeAttr('style');\n\t        \n\t            // Slides\n\t            if (s.slides && s.slides.length) {\n\t                s.slides\n\t                    .removeClass([\n\t                      s.params.slideVisibleClass,\n\t                      s.params.slideActiveClass,\n\t                      s.params.slideNextClass,\n\t                      s.params.slidePrevClass\n\t                    ].join(' '))\n\t                    .removeAttr('style')\n\t                    .removeAttr('data-swiper-column')\n\t                    .removeAttr('data-swiper-row');\n\t            }\n\t        \n\t            // Pagination/Bullets\n\t            if (s.paginationContainer && s.paginationContainer.length) {\n\t                s.paginationContainer.removeClass(s.params.paginationHiddenClass);\n\t            }\n\t            if (s.bullets && s.bullets.length) {\n\t                s.bullets.removeClass(s.params.bulletActiveClass);\n\t            }\n\t        \n\t            // Buttons\n\t            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n\t            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n\t        \n\t            // Scrollbar\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');\n\t                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');\n\t            }\n\t        };\n\t        \n\t        // Destroy\n\t        s.destroy = function (deleteInstance, cleanupStyles) {\n\t            // Detach evebts\n\t            s.detachEvents();\n\t            // Stop autoplay\n\t            s.stopAutoplay();\n\t            // Disable draggable\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                if (s.params.scrollbarDraggable) {\n\t                    s.scrollbar.disableDraggable();\n\t                }\n\t            }\n\t            // Destroy loop\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            // Cleanup styles\n\t            if (cleanupStyles) {\n\t                s.cleanupStyles();\n\t            }\n\t            // Disconnect observer\n\t            s.disconnectObservers();\n\t            // Disable keyboard/mousewheel\n\t            if (s.params.keyboardControl) {\n\t                if (s.disableKeyboardControl) s.disableKeyboardControl();\n\t            }\n\t            if (s.params.mousewheelControl) {\n\t                if (s.disableMousewheelControl) s.disableMousewheelControl();\n\t            }\n\t            // Disable a11y\n\t            if (s.params.a11y && s.a11y) s.a11y.destroy();\n\t            // Destroy callback\n\t            s.emit('onDestroy');\n\t            // Delete instance\n\t            if (deleteInstance !== false) s = null;\n\t        };\n\t        \n\t        s.init();\n\t        \n\t\n\t    \n\t        // Return swiper instance\n\t        return s;\n\t    };\n\t    \n\t\n\t    /*==================================================\n\t        Prototype\n\t    ====================================================*/\n\t    Swiper.prototype = {\n\t        isSafari: (function () {\n\t            var ua = navigator.userAgent.toLowerCase();\n\t            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n\t        })(),\n\t        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),\n\t        isArray: function (arr) {\n\t            return Object.prototype.toString.apply(arr) === '[object Array]';\n\t        },\n\t        /*==================================================\n\t        Browser\n\t        ====================================================*/\n\t        browser: {\n\t            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n\t            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1)\n\t        },\n\t        /*==================================================\n\t        Devices\n\t        ====================================================*/\n\t        device: (function () {\n\t            var ua = navigator.userAgent;\n\t            var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n\t            var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n\t            var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n\t            var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\t            return {\n\t                ios: ipad || iphone || ipod,\n\t                android: android\n\t            };\n\t        })(),\n\t        /*==================================================\n\t        Feature Detection\n\t        ====================================================*/\n\t        support: {\n\t            touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n\t                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n\t            })(),\n\t    \n\t            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n\t                var div = document.createElement('div').style;\n\t                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n\t            })(),\n\t    \n\t            flexbox: (function () {\n\t                var div = document.createElement('div').style;\n\t                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n\t                for (var i = 0; i < styles.length; i++) {\n\t                    if (styles[i] in div) return true;\n\t                }\n\t            })(),\n\t    \n\t            observer: (function () {\n\t                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n\t            })()\n\t        },\n\t        /*==================================================\n\t        Plugins\n\t        ====================================================*/\n\t        plugins: {}\n\t    };\n\t    \n\t\n\t    /*===========================\n\t    Dom7 Library\n\t    ===========================*/\n\t    var Dom7 = (function () {\n\t        var Dom7 = function (arr) {\n\t            var _this = this, i = 0;\n\t            // Create array-like object\n\t            for (i = 0; i < arr.length; i++) {\n\t                _this[i] = arr[i];\n\t            }\n\t            _this.length = arr.length;\n\t            // Return collection with methods\n\t            return this;\n\t        };\n\t        var $ = function (selector, context) {\n\t            var arr = [], i = 0;\n\t            if (selector && !context) {\n\t                if (selector instanceof Dom7) {\n\t                    return selector;\n\t                }\n\t            }\n\t            if (selector) {\n\t                // String\n\t                if (typeof selector === 'string') {\n\t                    var els, tempParent, html = selector.trim();\n\t                    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n\t                        var toCreate = 'div';\n\t                        if (html.indexOf('<li') === 0) toCreate = 'ul';\n\t                        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n\t                        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n\t                        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n\t                        if (html.indexOf('<option') === 0) toCreate = 'select';\n\t                        tempParent = document.createElement(toCreate);\n\t                        tempParent.innerHTML = selector;\n\t                        for (i = 0; i < tempParent.childNodes.length; i++) {\n\t                            arr.push(tempParent.childNodes[i]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n\t                            // Pure ID selector\n\t                            els = [document.getElementById(selector.split('#')[1])];\n\t                        }\n\t                        else {\n\t                            // Other selectors\n\t                            els = (context || document).querySelectorAll(selector);\n\t                        }\n\t                        for (i = 0; i < els.length; i++) {\n\t                            if (els[i]) arr.push(els[i]);\n\t                        }\n\t                    }\n\t                }\n\t                // Node/element\n\t                else if (selector.nodeType || selector === window || selector === document) {\n\t                    arr.push(selector);\n\t                }\n\t                //Array of elements or instance of Dom\n\t                else if (selector.length > 0 && selector[0].nodeType) {\n\t                    for (i = 0; i < selector.length; i++) {\n\t                        arr.push(selector[i]);\n\t                    }\n\t                }\n\t            }\n\t            return new Dom7(arr);\n\t        };\n\t        Dom7.prototype = {\n\t            // Classes and attriutes\n\t            addClass: function (className) {\n\t                if (typeof className === 'undefined') {\n\t                    return this;\n\t                }\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.add(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            removeClass: function (className) {\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.remove(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            hasClass: function (className) {\n\t                if (!this[0]) return false;\n\t                else return this[0].classList.contains(className);\n\t            },\n\t            toggleClass: function (className) {\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.toggle(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            attr: function (attrs, value) {\n\t                if (arguments.length === 1 && typeof attrs === 'string') {\n\t                    // Get attr\n\t                    if (this[0]) return this[0].getAttribute(attrs);\n\t                    else return undefined;\n\t                }\n\t                else {\n\t                    // Set attrs\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        if (arguments.length === 2) {\n\t                            // String\n\t                            this[i].setAttribute(attrs, value);\n\t                        }\n\t                        else {\n\t                            // Object\n\t                            for (var attrName in attrs) {\n\t                                this[i][attrName] = attrs[attrName];\n\t                                this[i].setAttribute(attrName, attrs[attrName]);\n\t                            }\n\t                        }\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            removeAttr: function (attr) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    this[i].removeAttribute(attr);\n\t                }\n\t                return this;\n\t            },\n\t            data: function (key, value) {\n\t                if (typeof value === 'undefined') {\n\t                    // Get value\n\t                    if (this[0]) {\n\t                        var dataKey = this[0].getAttribute('data-' + key);\n\t                        if (dataKey) return dataKey;\n\t                        else if (this[0].dom7ElementDataStorage && (key in this[0].dom7ElementDataStorage)) return this[0].dom7ElementDataStorage[key];\n\t                        else return undefined;\n\t                    }\n\t                    else return undefined;\n\t                }\n\t                else {\n\t                    // Set value\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        var el = this[i];\n\t                        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n\t                        el.dom7ElementDataStorage[key] = value;\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            // Transforms\n\t            transform : function (transform) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n\t                }\n\t                return this;\n\t            },\n\t            transition: function (duration) {\n\t                if (typeof duration !== 'string') {\n\t                    duration = duration + 'ms';\n\t                }\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n\t                }\n\t                return this;\n\t            },\n\t            //Events\n\t            on: function (eventName, targetSelector, listener, capture) {\n\t                function handleLiveEvent(e) {\n\t                    var target = e.target;\n\t                    if ($(target).is(targetSelector)) listener.call(target, e);\n\t                    else {\n\t                        var parents = $(target).parents();\n\t                        for (var k = 0; k < parents.length; k++) {\n\t                            if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e);\n\t                        }\n\t                    }\n\t                }\n\t                var events = eventName.split(' ');\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof targetSelector === 'function' || targetSelector === false) {\n\t                        // Usual events\n\t                        if (typeof targetSelector === 'function') {\n\t                            listener = arguments[1];\n\t                            capture = arguments[2] || false;\n\t                        }\n\t                        for (j = 0; j < events.length; j++) {\n\t                            this[i].addEventListener(events[j], listener, capture);\n\t                        }\n\t                    }\n\t                    else {\n\t                        //Live events\n\t                        for (j = 0; j < events.length; j++) {\n\t                            if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];\n\t                            this[i].dom7LiveListeners.push({listener: listener, liveListener: handleLiveEvent});\n\t                            this[i].addEventListener(events[j], handleLiveEvent, capture);\n\t                        }\n\t                    }\n\t                }\n\t    \n\t                return this;\n\t            },\n\t            off: function (eventName, targetSelector, listener, capture) {\n\t                var events = eventName.split(' ');\n\t                for (var i = 0; i < events.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        if (typeof targetSelector === 'function' || targetSelector === false) {\n\t                            // Usual events\n\t                            if (typeof targetSelector === 'function') {\n\t                                listener = arguments[1];\n\t                                capture = arguments[2] || false;\n\t                            }\n\t                            this[j].removeEventListener(events[i], listener, capture);\n\t                        }\n\t                        else {\n\t                            // Live event\n\t                            if (this[j].dom7LiveListeners) {\n\t                                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {\n\t                                    if (this[j].dom7LiveListeners[k].listener === listener) {\n\t                                        this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            once: function (eventName, targetSelector, listener, capture) {\n\t                var dom = this;\n\t                if (typeof targetSelector === 'function') {\n\t                    targetSelector = false;\n\t                    listener = arguments[1];\n\t                    capture = arguments[2];\n\t                }\n\t                function proxy(e) {\n\t                    listener(e);\n\t                    dom.off(eventName, targetSelector, proxy, capture);\n\t                }\n\t                dom.on(eventName, targetSelector, proxy, capture);\n\t            },\n\t            trigger: function (eventName, eventData) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var evt;\n\t                    try {\n\t                        evt = new window.CustomEvent(eventName, {detail: eventData, bubbles: true, cancelable: true});\n\t                    }\n\t                    catch (e) {\n\t                        evt = document.createEvent('Event');\n\t                        evt.initEvent(eventName, true, true);\n\t                        evt.detail = eventData;\n\t                    }\n\t                    this[i].dispatchEvent(evt);\n\t                }\n\t                return this;\n\t            },\n\t            transitionEnd: function (callback) {\n\t                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n\t                    i, j, dom = this;\n\t                function fireCallBack(e) {\n\t                    /*jshint validthis:true */\n\t                    if (e.target !== this) return;\n\t                    callback.call(this, e);\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.off(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                if (callback) {\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.on(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            // Sizing/Styles\n\t            width: function () {\n\t                if (this[0] === window) {\n\t                    return window.innerWidth;\n\t                }\n\t                else {\n\t                    if (this.length > 0) {\n\t                        return parseFloat(this.css('width'));\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t            },\n\t            outerWidth: function (includeMargins) {\n\t                if (this.length > 0) {\n\t                    if (includeMargins)\n\t                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n\t                    else\n\t                        return this[0].offsetWidth;\n\t                }\n\t                else return null;\n\t            },\n\t            height: function () {\n\t                if (this[0] === window) {\n\t                    return window.innerHeight;\n\t                }\n\t                else {\n\t                    if (this.length > 0) {\n\t                        return parseFloat(this.css('height'));\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t            },\n\t            outerHeight: function (includeMargins) {\n\t                if (this.length > 0) {\n\t                    if (includeMargins)\n\t                        return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));\n\t                    else\n\t                        return this[0].offsetHeight;\n\t                }\n\t                else return null;\n\t            },\n\t            offset: function () {\n\t                if (this.length > 0) {\n\t                    var el = this[0];\n\t                    var box = el.getBoundingClientRect();\n\t                    var body = document.body;\n\t                    var clientTop  = el.clientTop  || body.clientTop  || 0;\n\t                    var clientLeft = el.clientLeft || body.clientLeft || 0;\n\t                    var scrollTop  = window.pageYOffset || el.scrollTop;\n\t                    var scrollLeft = window.pageXOffset || el.scrollLeft;\n\t                    return {\n\t                        top: box.top  + scrollTop  - clientTop,\n\t                        left: box.left + scrollLeft - clientLeft\n\t                    };\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            css: function (props, value) {\n\t                var i;\n\t                if (arguments.length === 1) {\n\t                    if (typeof props === 'string') {\n\t                        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n\t                    }\n\t                    else {\n\t                        for (i = 0; i < this.length; i++) {\n\t                            for (var prop in props) {\n\t                                this[i].style[prop] = props[prop];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    }\n\t                }\n\t                if (arguments.length === 2 && typeof props === 'string') {\n\t                    for (i = 0; i < this.length; i++) {\n\t                        this[i].style[props] = value;\n\t                    }\n\t                    return this;\n\t                }\n\t                return this;\n\t            },\n\t    \n\t            //Dom manipulation\n\t            each: function (callback) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    callback.call(this[i], i, this[i]);\n\t                }\n\t                return this;\n\t            },\n\t            html: function (html) {\n\t                if (typeof html === 'undefined') {\n\t                    return this[0] ? this[0].innerHTML : undefined;\n\t                }\n\t                else {\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        this[i].innerHTML = html;\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            is: function (selector) {\n\t                if (!this[0]) return false;\n\t                var compareWith, i;\n\t                if (typeof selector === 'string') {\n\t                    var el = this[0];\n\t                    if (el === document) return selector === document;\n\t                    if (el === window) return selector === window;\n\t    \n\t                    if (el.matches) return el.matches(selector);\n\t                    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n\t                    else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);\n\t                    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\t                    else {\n\t                        compareWith = $(selector);\n\t                        for (i = 0; i < compareWith.length; i++) {\n\t                            if (compareWith[i] === this[0]) return true;\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                else if (selector === document) return this[0] === document;\n\t                else if (selector === window) return this[0] === window;\n\t                else {\n\t                    if (selector.nodeType || selector instanceof Dom7) {\n\t                        compareWith = selector.nodeType ? [selector] : selector;\n\t                        for (i = 0; i < compareWith.length; i++) {\n\t                            if (compareWith[i] === this[0]) return true;\n\t                        }\n\t                        return false;\n\t                    }\n\t                    return false;\n\t                }\n\t    \n\t            },\n\t            index: function () {\n\t                if (this[0]) {\n\t                    var child = this[0];\n\t                    var i = 0;\n\t                    while ((child = child.previousSibling) !== null) {\n\t                        if (child.nodeType === 1) i++;\n\t                    }\n\t                    return i;\n\t                }\n\t                else return undefined;\n\t            },\n\t            eq: function (index) {\n\t                if (typeof index === 'undefined') return this;\n\t                var length = this.length;\n\t                var returnIndex;\n\t                if (index > length - 1) {\n\t                    return new Dom7([]);\n\t                }\n\t                if (index < 0) {\n\t                    returnIndex = length + index;\n\t                    if (returnIndex < 0) return new Dom7([]);\n\t                    else return new Dom7([this[returnIndex]]);\n\t                }\n\t                return new Dom7([this[index]]);\n\t            },\n\t            append: function (newChild) {\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof newChild === 'string') {\n\t                        var tempDiv = document.createElement('div');\n\t                        tempDiv.innerHTML = newChild;\n\t                        while (tempDiv.firstChild) {\n\t                            this[i].appendChild(tempDiv.firstChild);\n\t                        }\n\t                    }\n\t                    else if (newChild instanceof Dom7) {\n\t                        for (j = 0; j < newChild.length; j++) {\n\t                            this[i].appendChild(newChild[j]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this[i].appendChild(newChild);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            prepend: function (newChild) {\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof newChild === 'string') {\n\t                        var tempDiv = document.createElement('div');\n\t                        tempDiv.innerHTML = newChild;\n\t                        for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {\n\t                            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n\t                        }\n\t                        // this[i].insertAdjacentHTML('afterbegin', newChild);\n\t                    }\n\t                    else if (newChild instanceof Dom7) {\n\t                        for (j = 0; j < newChild.length; j++) {\n\t                            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this[i].insertBefore(newChild, this[i].childNodes[0]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            insertBefore: function (selector) {\n\t                var before = $(selector);\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (before.length === 1) {\n\t                        before[0].parentNode.insertBefore(this[i], before[0]);\n\t                    }\n\t                    else if (before.length > 1) {\n\t                        for (var j = 0; j < before.length; j++) {\n\t                            before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            insertAfter: function (selector) {\n\t                var after = $(selector);\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (after.length === 1) {\n\t                        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n\t                    }\n\t                    else if (after.length > 1) {\n\t                        for (var j = 0; j < after.length; j++) {\n\t                            after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            next: function (selector) {\n\t                if (this.length > 0) {\n\t                    if (selector) {\n\t                        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                    else {\n\t                        if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                }\n\t                else return new Dom7([]);\n\t            },\n\t            nextAll: function (selector) {\n\t                var nextEls = [];\n\t                var el = this[0];\n\t                if (!el) return new Dom7([]);\n\t                while (el.nextElementSibling) {\n\t                    var next = el.nextElementSibling;\n\t                    if (selector) {\n\t                        if($(next).is(selector)) nextEls.push(next);\n\t                    }\n\t                    else nextEls.push(next);\n\t                    el = next;\n\t                }\n\t                return new Dom7(nextEls);\n\t            },\n\t            prev: function (selector) {\n\t                if (this.length > 0) {\n\t                    if (selector) {\n\t                        if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                    else {\n\t                        if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                }\n\t                else return new Dom7([]);\n\t            },\n\t            prevAll: function (selector) {\n\t                var prevEls = [];\n\t                var el = this[0];\n\t                if (!el) return new Dom7([]);\n\t                while (el.previousElementSibling) {\n\t                    var prev = el.previousElementSibling;\n\t                    if (selector) {\n\t                        if($(prev).is(selector)) prevEls.push(prev);\n\t                    }\n\t                    else prevEls.push(prev);\n\t                    el = prev;\n\t                }\n\t                return new Dom7(prevEls);\n\t            },\n\t            parent: function (selector) {\n\t                var parents = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (selector) {\n\t                        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n\t                    }\n\t                    else {\n\t                        parents.push(this[i].parentNode);\n\t                    }\n\t                }\n\t                return $($.unique(parents));\n\t            },\n\t            parents: function (selector) {\n\t                var parents = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var parent = this[i].parentNode;\n\t                    while (parent) {\n\t                        if (selector) {\n\t                            if ($(parent).is(selector)) parents.push(parent);\n\t                        }\n\t                        else {\n\t                            parents.push(parent);\n\t                        }\n\t                        parent = parent.parentNode;\n\t                    }\n\t                }\n\t                return $($.unique(parents));\n\t            },\n\t            find : function (selector) {\n\t                var foundElements = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var found = this[i].querySelectorAll(selector);\n\t                    for (var j = 0; j < found.length; j++) {\n\t                        foundElements.push(found[j]);\n\t                    }\n\t                }\n\t                return new Dom7(foundElements);\n\t            },\n\t            children: function (selector) {\n\t                var children = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var childNodes = this[i].childNodes;\n\t    \n\t                    for (var j = 0; j < childNodes.length; j++) {\n\t                        if (!selector) {\n\t                            if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n\t                        }\n\t                        else {\n\t                            if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j]);\n\t                        }\n\t                    }\n\t                }\n\t                return new Dom7($.unique(children));\n\t            },\n\t            remove: function () {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n\t                }\n\t                return this;\n\t            },\n\t            add: function () {\n\t                var dom = this;\n\t                var i, j;\n\t                for (i = 0; i < arguments.length; i++) {\n\t                    var toAdd = $(arguments[i]);\n\t                    for (j = 0; j < toAdd.length; j++) {\n\t                        dom[dom.length] = toAdd[j];\n\t                        dom.length++;\n\t                    }\n\t                }\n\t                return dom;\n\t            }\n\t        };\n\t        $.fn = Dom7.prototype;\n\t        $.unique = function (arr) {\n\t            var unique = [];\n\t            for (var i = 0; i < arr.length; i++) {\n\t                if (unique.indexOf(arr[i]) === -1) unique.push(arr[i]);\n\t            }\n\t            return unique;\n\t        };\n\t    \n\t        return $;\n\t    })();\n\t    \n\t\n\t    /*===========================\n\t     Get Dom libraries\n\t     ===========================*/\n\t    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];\n\t    for (var i = 0; i < swiperDomPlugins.length; i++) {\n\t    \tif (window[swiperDomPlugins[i]]) {\n\t    \t\taddLibraryPlugin(window[swiperDomPlugins[i]]);\n\t    \t}\n\t    }\n\t    // Required DOM Plugins\n\t    var domLib;\n\t    if (typeof Dom7 === 'undefined') {\n\t    \tdomLib = window.Dom7 || window.Zepto || window.jQuery;\n\t    }\n\t    else {\n\t    \tdomLib = Dom7;\n\t    }\n\t\n\t    /*===========================\n\t    Add .swiper plugin from Dom libraries\n\t    ===========================*/\n\t    function addLibraryPlugin(lib) {\n\t        lib.fn.swiper = function (params) {\n\t            var firstInstance;\n\t            lib(this).each(function () {\n\t                var s = new Swiper(this, params);\n\t                if (!firstInstance) firstInstance = s;\n\t            });\n\t            return firstInstance;\n\t        };\n\t    }\n\t    \n\t    if (domLib) {\n\t        if (!('transitionEnd' in domLib.fn)) {\n\t            domLib.fn.transitionEnd = function (callback) {\n\t                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n\t                    i, j, dom = this;\n\t                function fireCallBack(e) {\n\t                    /*jshint validthis:true */\n\t                    if (e.target !== this) return;\n\t                    callback.call(this, e);\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.off(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                if (callback) {\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.on(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t        if (!('transform' in domLib.fn)) {\n\t            domLib.fn.transform = function (transform) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t        if (!('transition' in domLib.fn)) {\n\t            domLib.fn.transition = function (duration) {\n\t                if (typeof duration !== 'string') {\n\t                    duration = duration + 'ms';\n\t                }\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t    }\n\t\n\t    window.Swiper = Swiper;\n\t})();\n\t/*===========================\n\tSwiper AMD Export\n\t===========================*/\n\tif (true)\n\t{\n\t    module.exports = window.Swiper;\n\t}\n\telse if (typeof define === 'function' && define.amd) {\n\t    define([], function () {\n\t        'use strict';\n\t        return window.Swiper;\n\t    });\n\t}\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** setting.js\n **/","var Vue = require('vue');\r\nvar $ = require('jquery');\r\nvar Swiper = require('Swiper');\r\nvar oldAuth = '';\r\nvar setting = new Vue({\r\n  el: '#setting',\r\n  data: {\r\n    settingList: [],\r\n    pageList: [],\r\n    keyword: '',\r\n    pageNo: 1,\r\n    pageCount: 1,\r\n    detailConfig: {\r\n      active: false,\r\n      right: '-500px',\r\n      opacity: 0,\r\n      addCon:false,\r\n    },\r\n    userInfo:{},\r\n    thisAuth:[],\r\n    allowAuth:[],\r\n    oldAuth:[],\r\n  },\r\n  methods: {\r\n    removeAuthFn:function(e){\r\n      var _this = e.currentTarget;\r\n      var menu_id = $(_this).data('menu_id');\r\n      var index = $(_this).data('index');\r\n      var item = setting.thisAuth[index];\r\n      setting.thisAuth.$remove(item);\r\n      setting.allowAuth.push(item);\r\n    },\r\n    addAuthFn:function(e){\r\n      if(setting.detailConfig.addCon){\r\n        setting.detailConfig.addCon = false;\r\n      }else{\r\n        setting.detailConfig.addCon = true;\r\n      }\r\n      if(setting.detailConfig.addCon){\r\n        $('.allAuth').slideDown(200);\r\n      }else{\r\n        $('.allAuth').slideUp(200);\r\n      }\r\n    },\r\n    addThisAuth:function(e){\r\n      var _this = e.currentTarget;\r\n      var menu_id = $(_this).data('menu_id');\r\n      var index = $(_this).data('index');\r\n      var item = setting.allowAuth[index];\r\n      setting.thisAuth.push(item);\r\n      setting.allowAuth.$remove(item);\r\n      setting.detailConfig.addCon = false;\r\n      $('.allAuth').hide();\r\n      \r\n      var thisAuth = JSON.stringify(setting.thisAuth);\r\n      console.log(thisAuth==oldAuth);\r\n    },\r\n    detailAction: function (e) {\r\n      var _this = e.currentTarget;\r\n      var user_id = $(_this).data('id');\r\n      var role_id = $(_this).data('role');\r\n      setting.$set('userInfo',{});\r\n      $.post('/admin/detail', { 'user_id': user_id ,'role_id':role_id}, function (data, textStatus, xhr) {\r\n        setting.userInfo = data.user_info;\r\n        setting.thisAuth = data.this_auth;\r\n        oldAuth = JSON.stringify(data.this_auth);\r\n        setting.allowAuth = data.allow_auth;\r\n        setting.detailConfig.active = true;\r\n        setting.detailConfig.right = '0px';\r\n        setting.detailConfig.opacity = 1;\r\n      });\r\n    },\r\n    closeDetail: function () {\r\n      setting.detailConfig.active = false;\r\n      setting.detailConfig.right = '-500px';\r\n      setting.detailConfig.opacity = 0;\r\n      $('.allAuth').hide();\r\n    },\r\n    searchSub: function () {\r\n      if (setting.keyword != '') {\r\n        pageFn({\r\n          'page': 1,\r\n          'username': setting.keyword\r\n        });\r\n      } else {\r\n        alert('请输入手机号码查询用户');\r\n      }\r\n\r\n    },\r\n    pageFn: function (e) {\r\n      var page = parseInt($(e.currentTarget).text());\r\n      if (!$(e.currentTarget).hasClass('active')) {\r\n        if (setting.keyword == '') {\r\n          pageFn({\r\n            'page': page\r\n          });\r\n        } else {\r\n          pageFn({\r\n            'page': page,\r\n            'username': setting.keyword\r\n          });\r\n        }\r\n      }\r\n    },\r\n    closeSearch: function () {\r\n      setting.keyword = '';\r\n      pageFn({ 'page': 1 });\r\n    },\r\n    prev: function () {\r\n      if (setting.pageNo == 1 || setting.pageCount == 0) {\r\n        return false;\r\n      } else {\r\n        var page = setting.pageNo - 1;\r\n        if (setting.keyword == '') {\r\n          pageFn({\r\n            'page': page\r\n          });\r\n        } else {\r\n          pageFn({\r\n            'page': page,\r\n            'username': setting.keyword\r\n          });\r\n        }\r\n      }\r\n    },\r\n    next: function () {\r\n      if (setting.pageNo == setting.pageCount || setting.pageCount == 0) {\r\n        return false;\r\n      } else {\r\n        var page = setting.pageNo + 1;\r\n        if (setting.keyword == '') {\r\n          pageFn({\r\n            'page': page\r\n          });\r\n        } else {\r\n          pageFn({\r\n            'page': page,\r\n            'username': setting.keyword\r\n          });\r\n        }\r\n      }\r\n    },\r\n    savaAuth:function(){\r\n      var userInfo = JSON.stringify(setting.userInfo);\r\n      var thisAuth = JSON.stringify(setting.thisAuth);\r\n      console.log(thisAuth==oldAuth);\r\n      $.post('/admin/sava',{\r\n        'userInfo':userInfo,\r\n        'thisAuth':thisAuth,\r\n        'oldAuth':oldAuth\r\n      },function(res){\r\n        if(res.code==200){\r\n          alert('保存成功');\r\n          setting.detailConfig.active = false;\r\n          setting.detailConfig.right = '-500px';\r\n          setting.detailConfig.opacity = 0;\r\n          $('.allAuth').hide();\r\n        }\r\n      })\r\n    }\r\n  },\r\n  ready: function () {\r\n    var arr = [];\r\n    $.post('/admin/user', { page: 1 }, function (res) {\r\n      for (var i = 0; i < res.totalPages; i++) {\r\n        arr.push(i + 1);\r\n      }\r\n      setting.$set('pageList', arr);\r\n      setting.$set('pageCount', res.totalPages);\r\n      setting.$set('pageNo', res.currentPage);\r\n      setting.$set('settingList', res.data);\r\n\r\n    })\r\n    var swiper = new Swiper('.swiper-container', {\r\n      scrollbar: '.swiper-scrollbar',\r\n      direction: 'vertical',\r\n      slidesPerView: 'auto',\r\n      mousewheelControl: true,\r\n      freeMode: true,\r\n      observer: true\r\n    });\r\n  },\r\n  watch: {\r\n    'pageNo': function (n, o) {\r\n      $('.pageNum').eq(n - 1).addClass('active').siblings('.pageNum').removeClass('active');\r\n      if (n == 1) {\r\n        $('.Previous').addClass('disabled');\r\n      } else if (n == setting.pageCount) {\r\n        $('.Next').addClass('disabled');\r\n      } else {\r\n        $('.Previous').removeClass('disabled');\r\n        $('.Next').removeClass('disabled');\r\n      }\r\n    },\r\n    'pageList': function (n, o) {\r\n      $('.pageNum').eq(0).addClass('active');\r\n    }\r\n  }\r\n})\r\n\r\nfunction pageFn(data) {\r\n  $.post('/admin/user', data, function (res) {\r\n    var arr = [];\r\n    for (var i = 0; i < res.totalPages; i++) {\r\n      arr.push(i + 1);\r\n    }\r\n    setting.$set('pageList', arr);\r\n    setting.$set('pageCount', res.totalPages);\r\n    setting.$set('pageNo', res.currentPage);\r\n    setting.$set('settingList', res.data);\r\n    $('.pageNum').eq(res.currentPage - 1).addClass('active').siblings('.pageNum').removeClass('active');\r\n    if (res.totalPages == 1 || res.count == 0) {\r\n      $('.Next').addClass('disabled');\r\n    } else {\r\n      $('.Next').removeClass('disabled');\r\n    }\r\n    if (res.currentPage == 1) {\r\n      $('.Previous').addClass('disabled');\r\n    } else {\r\n      $('.Previous').removeClass('disabled');\r\n    }\r\n  })\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./www/static/src/js/setting.js\n **/","/*!\n * Vue.js v1.0.21\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n  if (camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (!this.prevKeys) return;\n\n    var i = this.prevKeys.length;\n    while (i--) {\n      var key = this.prevKeys[i];\n      if (!key) continue;\n\n      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n      for (var j = 0, l = keys.length; j < l; j++) {\n        toggleClasses(this.el, keys[j], removeClass);\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (!obj[key]) continue;\n    toggleClasses(el, key, addClass);\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction toggleClasses(el, key, fn) {\n  key = key.trim();\n\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.21';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 1\n ** module chunks = 1 2 3 4\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 2\n ** module chunks = 1 2 3 4\n **/","/**\n * Swiper 3.2.7\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * \n * http://www.idangero.us/swiper/\n * \n * Copyright 2015, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n * \n * Licensed under MIT\n * \n * Released on: December 7, 2015\n */\n(function () {\n    'use strict';\n    var $;\n    /*===========================\n    Swiper\n    ===========================*/\n    var Swiper = function (container, params) {\n        if (!(this instanceof Swiper)) return new Swiper(container, params);\n\n        var defaults = {\n            direction: 'horizontal',\n            touchEventsTarget: 'container',\n            initialSlide: 0,\n            speed: 300,\n            // autoplay\n            autoplay: false,\n            autoplayDisableOnInteraction: true,\n            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n            iOSEdgeSwipeDetection: false,\n            iOSEdgeSwipeThreshold: 20,\n            // Free mode\n            freeMode: false,\n            freeModeMomentum: true,\n            freeModeMomentumRatio: 1,\n            freeModeMomentumBounce: true,\n            freeModeMomentumBounceRatio: 1,\n            freeModeSticky: false,\n            freeModeMinimumVelocity: 0.02,\n            // Autoheight\n            autoHeight: false,\n            // Set wrapper width\n            setWrapperSize: false,\n            // Virtual Translate\n            virtualTranslate: false,\n            // Effects\n            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow'\n            coverflow: {\n                rotate: 50,\n                stretch: 0,\n                depth: 100,\n                modifier: 1,\n                slideShadows : true\n            },\n            cube: {\n                slideShadows: true,\n                shadow: true,\n                shadowOffset: 20,\n                shadowScale: 0.94\n            },\n            fade: {\n                crossFade: false\n            },\n            // Parallax\n            parallax: false,\n            // Scrollbar\n            scrollbar: null,\n            scrollbarHide: true,\n            scrollbarDraggable: false,\n            scrollbarSnapOnRelease: false,\n            // Keyboard Mousewheel\n            keyboardControl: false,\n            mousewheelControl: false,\n            mousewheelReleaseOnEdges: false,\n            mousewheelInvert: false,\n            mousewheelForceToAxis: false,\n            mousewheelSensitivity: 1,\n            // Hash Navigation\n            hashnav: false,\n            // Breakpoints\n            breakpoints: undefined,\n            // Slides grid\n            spaceBetween: 0,\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerColumnFill: 'column',\n            slidesPerGroup: 1,\n            centeredSlides: false,\n            slidesOffsetBefore: 0, // in px\n            slidesOffsetAfter: 0, // in px\n            // Round length\n            roundLengths: false,\n            // Touches\n            touchRatio: 1,\n            touchAngle: 45,\n            simulateTouch: true,\n            shortSwipes: true,\n            longSwipes: true,\n            longSwipesRatio: 0.5,\n            longSwipesMs: 300,\n            followFinger: true,\n            onlyExternal: false,\n            threshold: 0,\n            touchMoveStopPropagation: true,\n            // Pagination\n            pagination: null,\n            paginationElement: 'span',\n            paginationClickable: false,\n            paginationHide: false,\n            paginationBulletRender: null,\n            // Resistance\n            resistance: true,\n            resistanceRatio: 0.85,\n            // Next/prev buttons\n            nextButton: null,\n            prevButton: null,\n            // Progress\n            watchSlidesProgress: false,\n            watchSlidesVisibility: false,\n            // Cursor\n            grabCursor: false,\n            // Clicks\n            preventClicks: true,\n            preventClicksPropagation: true,\n            slideToClickedSlide: false,\n            // Lazy Loading\n            lazyLoading: false,\n            lazyLoadingInPrevNext: false,\n            lazyLoadingOnTransitionStart: false,\n            // Images\n            preloadImages: true,\n            updateOnImagesReady: true,\n            // loop\n            loop: false,\n            loopAdditionalSlides: 0,\n            loopedSlides: null,\n            // Control\n            control: undefined,\n            controlInverse: false,\n            controlBy: 'slide', //or 'container'\n            // Swiping/no swiping\n            allowSwipeToPrev: true,\n            allowSwipeToNext: true,\n            swipeHandler: null, //'.swipe-handler',\n            noSwiping: true,\n            noSwipingClass: 'swiper-no-swiping',\n            // NS\n            slideClass: 'swiper-slide',\n            slideActiveClass: 'swiper-slide-active',\n            slideVisibleClass: 'swiper-slide-visible',\n            slideDuplicateClass: 'swiper-slide-duplicate',\n            slideNextClass: 'swiper-slide-next',\n            slidePrevClass: 'swiper-slide-prev',\n            wrapperClass: 'swiper-wrapper',\n            bulletClass: 'swiper-pagination-bullet',\n            bulletActiveClass: 'swiper-pagination-bullet-active',\n            buttonDisabledClass: 'swiper-button-disabled',\n            paginationHiddenClass: 'swiper-pagination-hidden',\n            // Observer\n            observer: false,\n            observeParents: false,\n            // Accessibility\n            a11y: false,\n            prevSlideMessage: 'Previous slide',\n            nextSlideMessage: 'Next slide',\n            firstSlideMessage: 'This is the first slide',\n            lastSlideMessage: 'This is the last slide',\n            paginationBulletMessage: 'Go to slide {{index}}',\n            // Callbacks\n            runCallbacksOnInit: true\n            /*\n            Callbacks:\n            onInit: function (swiper)\n            onDestroy: function (swiper)\n            onClick: function (swiper, e)\n            onTap: function (swiper, e)\n            onDoubleTap: function (swiper, e)\n            onSliderMove: function (swiper, e)\n            onSlideChangeStart: function (swiper)\n            onSlideChangeEnd: function (swiper)\n            onTransitionStart: function (swiper)\n            onTransitionEnd: function (swiper)\n            onImagesReady: function (swiper)\n            onProgress: function (swiper, progress)\n            onTouchStart: function (swiper, e)\n            onTouchMove: function (swiper, e)\n            onTouchMoveOpposite: function (swiper, e)\n            onTouchEnd: function (swiper, e)\n            onReachBeginning: function (swiper)\n            onReachEnd: function (swiper)\n            onSetTransition: function (swiper, duration)\n            onSetTranslate: function (swiper, translate)\n            onAutoplayStart: function (swiper)\n            onAutoplayStop: function (swiper),\n            onLazyImageLoad: function (swiper, slide, image)\n            onLazyImageReady: function (swiper, slide, image)\n            */\n        \n        };\n        var initialVirtualTranslate = params && params.virtualTranslate;\n        \n        params = params || {};\n        var originalParams = {};\n        for (var param in params) {\n            if (typeof params[param] === 'object' && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {\n                originalParams[param] = {};\n                for (var deepParam in params[param]) {\n                    originalParams[param][deepParam] = params[param][deepParam];\n                }\n            }\n            else {\n                originalParams[param] = params[param];\n            }\n        }\n        for (var def in defaults) {\n            if (typeof params[def] === 'undefined') {\n                params[def] = defaults[def];\n            }\n            else if (typeof params[def] === 'object') {\n                for (var deepDef in defaults[def]) {\n                    if (typeof params[def][deepDef] === 'undefined') {\n                        params[def][deepDef] = defaults[def][deepDef];\n                    }\n                }\n            }\n        }\n        \n        // Swiper\n        var s = this;\n        \n        // Params\n        s.params = params;\n        s.originalParams = originalParams;\n        \n        // Classname\n        s.classNames = [];\n        /*=========================\n          Dom Library and plugins\n          ===========================*/\n        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){\n            $ = Dom7;\n        }\n        if (typeof $ === 'undefined') {\n            if (typeof Dom7 === 'undefined') {\n                $ = window.Dom7 || window.Zepto || window.jQuery;\n            }\n            else {\n                $ = Dom7;\n            }\n            if (!$) return;\n        }\n        // Export it to Swiper instance\n        s.$ = $;\n        \n        /*=========================\n          Breakpoints\n          ===========================*/\n        s.currentBreakpoint = undefined;\n        s.getActiveBreakpoint = function () {\n            //Get breakpoint for window width\n            if (!s.params.breakpoints) return false;\n            var breakpoint = false;\n            var points = [], point;\n            for ( point in s.params.breakpoints ) {\n                if (s.params.breakpoints.hasOwnProperty(point)) {\n                    points.push(point);\n                }\n            }\n            points.sort(function (a, b) {\n                return parseInt(a, 10) > parseInt(b, 10);\n            });\n            for (var i = 0; i < points.length; i++) {\n                point = points[i];\n                if (point >= window.innerWidth && !breakpoint) {\n                    breakpoint = point;\n                }\n            }\n            return breakpoint || 'max';\n        };\n        s.setBreakpoint = function () {\n            //Set breakpoint for window width and update parameters\n            var breakpoint = s.getActiveBreakpoint();\n            if (breakpoint && s.currentBreakpoint !== breakpoint) {\n                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;\n                for ( var param in breakPointsParams ) {\n                    s.params[param] = breakPointsParams[param];\n                }\n                s.currentBreakpoint = breakpoint;\n            }\n        };\n        // Set breakpoint on load\n        if (s.params.breakpoints) {\n            s.setBreakpoint();\n        }\n        \n        /*=========================\n          Preparation - Define Container, Wrapper and Pagination\n          ===========================*/\n        s.container = $(container);\n        if (s.container.length === 0) return;\n        if (s.container.length > 1) {\n            s.container.each(function () {\n                new Swiper(this, params);\n            });\n            return;\n        }\n        \n        // Save instance in container HTML Element and in data\n        s.container[0].swiper = s;\n        s.container.data('swiper', s);\n        \n        s.classNames.push('swiper-container-' + s.params.direction);\n        \n        if (s.params.freeMode) {\n            s.classNames.push('swiper-container-free-mode');\n        }\n        if (!s.support.flexbox) {\n            s.classNames.push('swiper-container-no-flexbox');\n            s.params.slidesPerColumn = 1;\n        }\n        if (s.params.autoHeight) {\n            s.classNames.push('swiper-container-autoheight');\n        }\n        // Enable slides progress when required\n        if (s.params.parallax || s.params.watchSlidesVisibility) {\n            s.params.watchSlidesProgress = true;\n        }\n        // Coverflow / 3D\n        if (['cube', 'coverflow'].indexOf(s.params.effect) >= 0) {\n            if (s.support.transforms3d) {\n                s.params.watchSlidesProgress = true;\n                s.classNames.push('swiper-container-3d');\n            }\n            else {\n                s.params.effect = 'slide';\n            }\n        }\n        if (s.params.effect !== 'slide') {\n            s.classNames.push('swiper-container-' + s.params.effect);\n        }\n        if (s.params.effect === 'cube') {\n            s.params.resistanceRatio = 0;\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.centeredSlides = false;\n            s.params.spaceBetween = 0;\n            s.params.virtualTranslate = true;\n            s.params.setWrapperSize = false;\n        }\n        if (s.params.effect === 'fade') {\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.watchSlidesProgress = true;\n            s.params.spaceBetween = 0;\n            if (typeof initialVirtualTranslate === 'undefined') {\n                s.params.virtualTranslate = true;\n            }\n        }\n        \n        // Grab Cursor\n        if (s.params.grabCursor && s.support.touch) {\n            s.params.grabCursor = false;\n        }\n        \n        // Wrapper\n        s.wrapper = s.container.children('.' + s.params.wrapperClass);\n        \n        // Pagination\n        if (s.params.pagination) {\n            s.paginationContainer = $(s.params.pagination);\n            if (s.params.paginationClickable) {\n                s.paginationContainer.addClass('swiper-pagination-clickable');\n            }\n        }\n        \n        // Is Horizontal\n        function isH() {\n            return s.params.direction === 'horizontal';\n        }\n        \n        // RTL\n        s.rtl = isH() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');\n        if (s.rtl) {\n            s.classNames.push('swiper-container-rtl');\n        }\n        \n        // Wrong RTL support\n        if (s.rtl) {\n            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';\n        }\n        \n        // Columns\n        if (s.params.slidesPerColumn > 1) {\n            s.classNames.push('swiper-container-multirow');\n        }\n        \n        // Check for Android\n        if (s.device.android) {\n            s.classNames.push('swiper-container-android');\n        }\n        \n        // Add classes\n        s.container.addClass(s.classNames.join(' '));\n        \n        // Translate\n        s.translate = 0;\n        \n        // Progress\n        s.progress = 0;\n        \n        // Velocity\n        s.velocity = 0;\n        \n        /*=========================\n          Locks, unlocks\n          ===========================*/\n        s.lockSwipeToNext = function () {\n            s.params.allowSwipeToNext = false;\n        };\n        s.lockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = false;\n        };\n        s.lockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;\n        };\n        s.unlockSwipeToNext = function () {\n            s.params.allowSwipeToNext = true;\n        };\n        s.unlockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = true;\n        };\n        s.unlockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;\n        };\n        \n        /*=========================\n          Round helper\n          ===========================*/\n        function round(a) {\n            return Math.floor(a);\n        }\n        /*=========================\n          Set grab cursor\n          ===========================*/\n        if (s.params.grabCursor) {\n            s.container[0].style.cursor = 'move';\n            s.container[0].style.cursor = '-webkit-grab';\n            s.container[0].style.cursor = '-moz-grab';\n            s.container[0].style.cursor = 'grab';\n        }\n        /*=========================\n          Update on Images Ready\n          ===========================*/\n        s.imagesToLoad = [];\n        s.imagesLoaded = 0;\n        \n        s.loadImage = function (imgElement, src, srcset, checkForComplete, callback) {\n            var image;\n            function onReady () {\n                if (callback) callback();\n            }\n            if (!imgElement.complete || !checkForComplete) {\n                if (src) {\n                    image = new window.Image();\n                    image.onload = onReady;\n                    image.onerror = onReady;\n                    if (srcset) {\n                        image.srcset = srcset;\n                    }\n                    if (src) {\n                        image.src = src;\n                    }\n                } else {\n                    onReady();\n                }\n        \n            } else {//image already loaded...\n                onReady();\n            }\n        };\n        s.preloadImages = function () {\n            s.imagesToLoad = s.container.find('img');\n            function _onReady() {\n                if (typeof s === 'undefined' || s === null) return;\n                if (s.imagesLoaded !== undefined) s.imagesLoaded++;\n                if (s.imagesLoaded === s.imagesToLoad.length) {\n                    if (s.params.updateOnImagesReady) s.update();\n                    s.emit('onImagesReady', s);\n                }\n            }\n            for (var i = 0; i < s.imagesToLoad.length; i++) {\n                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), true, _onReady);\n            }\n        };\n        \n        /*=========================\n          Autoplay\n          ===========================*/\n        s.autoplayTimeoutId = undefined;\n        s.autoplaying = false;\n        s.autoplayPaused = false;\n        function autoplay() {\n            s.autoplayTimeoutId = setTimeout(function () {\n                if (s.params.loop) {\n                    s.fixLoop();\n                    s._slideNext();\n                }\n                else {\n                    if (!s.isEnd) {\n                        s._slideNext();\n                    }\n                    else {\n                        if (!params.autoplayStopOnLast) {\n                            s._slideTo(0);\n                        }\n                        else {\n                            s.stopAutoplay();\n                        }\n                    }\n                }\n            }, s.params.autoplay);\n        }\n        s.startAutoplay = function () {\n            if (typeof s.autoplayTimeoutId !== 'undefined') return false;\n            if (!s.params.autoplay) return false;\n            if (s.autoplaying) return false;\n            s.autoplaying = true;\n            s.emit('onAutoplayStart', s);\n            autoplay();\n        };\n        s.stopAutoplay = function (internal) {\n            if (!s.autoplayTimeoutId) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplaying = false;\n            s.autoplayTimeoutId = undefined;\n            s.emit('onAutoplayStop', s);\n        };\n        s.pauseAutoplay = function (speed) {\n            if (s.autoplayPaused) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplayPaused = true;\n            if (speed === 0) {\n                s.autoplayPaused = false;\n                autoplay();\n            }\n            else {\n                s.wrapper.transitionEnd(function () {\n                    if (!s) return;\n                    s.autoplayPaused = false;\n                    if (!s.autoplaying) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        autoplay();\n                    }\n                });\n            }\n        };\n        /*=========================\n          Min/Max Translate\n          ===========================*/\n        s.minTranslate = function () {\n            return (-s.snapGrid[0]);\n        };\n        s.maxTranslate = function () {\n            return (-s.snapGrid[s.snapGrid.length - 1]);\n        };\n        /*=========================\n          Slider/slides sizes\n          ===========================*/\n        s.updateAutoHeight = function () {\n            // Update Height\n            var newHeight = s.slides.eq(s.activeIndex)[0].offsetHeight;\n            if (newHeight) s.wrapper.css('height', s.slides.eq(s.activeIndex)[0].offsetHeight + 'px');\n        };\n        s.updateContainerSize = function () {\n            var width, height;\n            if (typeof s.params.width !== 'undefined') {\n                width = s.params.width;\n            }\n            else {\n                width = s.container[0].clientWidth;\n            }\n            if (typeof s.params.height !== 'undefined') {\n                height = s.params.height;\n            }\n            else {\n                height = s.container[0].clientHeight;\n            }\n            if (width === 0 && isH() || height === 0 && !isH()) {\n                return;\n            }\n        \n            //Subtract paddings\n            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);\n            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);\n        \n            // Store values\n            s.width = width;\n            s.height = height;\n            s.size = isH() ? s.width : s.height;\n        };\n        \n        s.updateSlidesSize = function () {\n            s.slides = s.wrapper.children('.' + s.params.slideClass);\n            s.snapGrid = [];\n            s.slidesGrid = [];\n            s.slidesSizesGrid = [];\n        \n            var spaceBetween = s.params.spaceBetween,\n                slidePosition = -s.params.slidesOffsetBefore,\n                i,\n                prevSlideSize = 0,\n                index = 0;\n            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;\n            }\n        \n            s.virtualSize = -spaceBetween;\n            // reset margins\n            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});\n            else s.slides.css({marginRight: '', marginBottom: ''});\n        \n            var slidesNumberEvenToRows;\n            if (s.params.slidesPerColumn > 1) {\n                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {\n                    slidesNumberEvenToRows = s.slides.length;\n                }\n                else {\n                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;\n                }\n                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {\n                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);\n                }\n            }\n        \n            // Calc slides\n            var slideSize;\n            var slidesPerColumn = s.params.slidesPerColumn;\n            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);\n            for (i = 0; i < s.slides.length; i++) {\n                slideSize = 0;\n                var slide = s.slides.eq(i);\n                if (s.params.slidesPerColumn > 1) {\n                    // Set slides order\n                    var newSlideOrderIndex;\n                    var column, row;\n                    if (s.params.slidesPerColumnFill === 'column') {\n                        column = Math.floor(i / slidesPerColumn);\n                        row = i - column * slidesPerColumn;\n                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {\n                            if (++row >= slidesPerColumn) {\n                                row = 0;\n                                column++;\n                            }\n                        }\n                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n                        slide\n                            .css({\n                                '-webkit-box-ordinal-group': newSlideOrderIndex,\n                                '-moz-box-ordinal-group': newSlideOrderIndex,\n                                '-ms-flex-order': newSlideOrderIndex,\n                                '-webkit-order': newSlideOrderIndex,\n                                'order': newSlideOrderIndex\n                            });\n                    }\n                    else {\n                        row = Math.floor(i / slidesPerRow);\n                        column = i - row * slidesPerRow;\n                    }\n                    slide\n                        .css({\n                            'margin-top': (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')\n                        })\n                        .attr('data-swiper-column', column)\n                        .attr('data-swiper-row', row);\n        \n                }\n                if (slide.css('display') === 'none') continue;\n                if (s.params.slidesPerView === 'auto') {\n                    slideSize = isH() ? slide.outerWidth(true) : slide.outerHeight(true);\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n                }\n                else {\n                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n        \n                    if (isH()) {\n                        s.slides[i].style.width = slideSize + 'px';\n                    }\n                    else {\n                        s.slides[i].style.height = slideSize + 'px';\n                    }\n                }\n                s.slides[i].swiperSlideSize = slideSize;\n                s.slidesSizesGrid.push(slideSize);\n        \n        \n                if (s.params.centeredSlides) {\n                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;\n                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                }\n                else {\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                    slidePosition = slidePosition + slideSize + spaceBetween;\n                }\n        \n                s.virtualSize += slideSize + spaceBetween;\n        \n                prevSlideSize = slideSize;\n        \n                index ++;\n            }\n            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;\n            var newSlidesGrid;\n        \n            if (\n                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {\n                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n            if (!s.support.flexbox || s.params.setWrapperSize) {\n                if (isH()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n        \n            if (s.params.slidesPerColumn > 1) {\n                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;\n                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;\n                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                if (s.params.centeredSlides) {\n                    newSlidesGrid = [];\n                    for (i = 0; i < s.snapGrid.length; i++) {\n                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                    s.snapGrid = newSlidesGrid;\n                }\n            }\n        \n            // Remove last grid elements depending on width\n            if (!s.params.centeredSlides) {\n                newSlidesGrid = [];\n                for (i = 0; i < s.snapGrid.length; i++) {\n                    if (s.snapGrid[i] <= s.virtualSize - s.size) {\n                        newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                }\n                s.snapGrid = newSlidesGrid;\n                if (Math.floor(s.virtualSize - s.size) > Math.floor(s.snapGrid[s.snapGrid.length - 1])) {\n                    s.snapGrid.push(s.virtualSize - s.size);\n                }\n            }\n            if (s.snapGrid.length === 0) s.snapGrid = [0];\n        \n            if (s.params.spaceBetween !== 0) {\n                if (isH()) {\n                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});\n                    else s.slides.css({marginRight: spaceBetween + 'px'});\n                }\n                else s.slides.css({marginBottom: spaceBetween + 'px'});\n            }\n            if (s.params.watchSlidesProgress) {\n                s.updateSlidesOffset();\n            }\n        };\n        s.updateSlidesOffset = function () {\n            for (var i = 0; i < s.slides.length; i++) {\n                s.slides[i].swiperSlideOffset = isH() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;\n            }\n        };\n        \n        /*=========================\n          Slider/slides progress\n          ===========================*/\n        s.updateSlidesProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            if (s.slides.length === 0) return;\n            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();\n        \n            var offsetCenter = -translate;\n            if (s.rtl) offsetCenter = translate;\n        \n            // Visible Slides\n            s.slides.removeClass(s.params.slideVisibleClass);\n            for (var i = 0; i < s.slides.length; i++) {\n                var slide = s.slides[i];\n                var slideProgress = (offsetCenter - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);\n                if (s.params.watchSlidesVisibility) {\n                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n                    var slideAfter = slideBefore + s.slidesSizesGrid[i];\n                    var isVisible =\n                        (slideBefore >= 0 && slideBefore < s.size) ||\n                        (slideAfter > 0 && slideAfter <= s.size) ||\n                        (slideBefore <= 0 && slideAfter >= s.size);\n                    if (isVisible) {\n                        s.slides.eq(i).addClass(s.params.slideVisibleClass);\n                    }\n                }\n                slide.progress = s.rtl ? -slideProgress : slideProgress;\n            }\n        };\n        s.updateProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            var wasBeginning = s.isBeginning;\n            var wasEnd = s.isEnd;\n            if (translatesDiff === 0) {\n                s.progress = 0;\n                s.isBeginning = s.isEnd = true;\n            }\n            else {\n                s.progress = (translate - s.minTranslate()) / (translatesDiff);\n                s.isBeginning = s.progress <= 0;\n                s.isEnd = s.progress >= 1;\n            }\n            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);\n            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);\n        \n            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);\n            s.emit('onProgress', s, s.progress);\n        };\n        s.updateActiveIndex = function () {\n            var translate = s.rtl ? s.translate : -s.translate;\n            var newActiveIndex, i, snapIndex;\n            for (i = 0; i < s.slidesGrid.length; i ++) {\n                if (typeof s.slidesGrid[i + 1] !== 'undefined') {\n                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {\n                        newActiveIndex = i;\n                    }\n                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {\n                        newActiveIndex = i + 1;\n                    }\n                }\n                else {\n                    if (translate >= s.slidesGrid[i]) {\n                        newActiveIndex = i;\n                    }\n                }\n            }\n            // Normalize slideIndex\n            if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;\n            // for (i = 0; i < s.slidesGrid.length; i++) {\n                // if (- translate >= s.slidesGrid[i]) {\n                    // newActiveIndex = i;\n                // }\n            // }\n            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);\n            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;\n        \n            if (newActiveIndex === s.activeIndex) {\n                return;\n            }\n            s.snapIndex = snapIndex;\n            s.previousIndex = s.activeIndex;\n            s.activeIndex = newActiveIndex;\n            s.updateClasses();\n        };\n        \n        /*=========================\n          Classes\n          ===========================*/\n        s.updateClasses = function () {\n            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);\n            var activeSlide = s.slides.eq(s.activeIndex);\n            // Active classes\n            activeSlide.addClass(s.params.slideActiveClass);\n            activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);\n            activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);\n        \n            // Pagination\n            if (s.bullets && s.bullets.length > 0) {\n                s.bullets.removeClass(s.params.bulletActiveClass);\n                var bulletIndex;\n                if (s.params.loop) {\n                    bulletIndex = Math.ceil(s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup;\n                    if (bulletIndex > s.slides.length - 1 - s.loopedSlides * 2) {\n                        bulletIndex = bulletIndex - (s.slides.length - s.loopedSlides * 2);\n                    }\n                    if (bulletIndex > s.bullets.length - 1) bulletIndex = bulletIndex - s.bullets.length;\n                }\n                else {\n                    if (typeof s.snapIndex !== 'undefined') {\n                        bulletIndex = s.snapIndex;\n                    }\n                    else {\n                        bulletIndex = s.activeIndex || 0;\n                    }\n                }\n                if (s.paginationContainer.length > 1) {\n                    s.bullets.each(function () {\n                        if ($(this).index() === bulletIndex) $(this).addClass(s.params.bulletActiveClass);\n                    });\n                }\n                else {\n                    s.bullets.eq(bulletIndex).addClass(s.params.bulletActiveClass);\n                }\n            }\n        \n            // Next/active buttons\n            if (!s.params.loop) {\n                if (s.params.prevButton) {\n                    if (s.isBeginning) {\n                        $(s.params.prevButton).addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.prevButton));\n                    }\n                    else {\n                        $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.prevButton));\n                    }\n                }\n                if (s.params.nextButton) {\n                    if (s.isEnd) {\n                        $(s.params.nextButton).addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.nextButton));\n                    }\n                    else {\n                        $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.nextButton));\n                    }\n                }\n            }\n        };\n        \n        /*=========================\n          Pagination\n          ===========================*/\n        s.updatePagination = function () {\n            if (!s.params.pagination) return;\n            if (s.paginationContainer && s.paginationContainer.length > 0) {\n                var bulletsHTML = '';\n                var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n                for (var i = 0; i < numberOfBullets; i++) {\n                    if (s.params.paginationBulletRender) {\n                        bulletsHTML += s.params.paginationBulletRender(i, s.params.bulletClass);\n                    }\n                    else {\n                        bulletsHTML += '<' + s.params.paginationElement+' class=\"' + s.params.bulletClass + '\"></' + s.params.paginationElement + '>';\n                    }\n                }\n                s.paginationContainer.html(bulletsHTML);\n                s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);\n                if (s.params.paginationClickable && s.params.a11y && s.a11y) {\n                    s.a11y.initPagination();\n                }\n            }\n        };\n        /*=========================\n          Common update method\n          ===========================*/\n        s.update = function (updateTranslate) {\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updateProgress();\n            s.updatePagination();\n            s.updateClasses();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            function forceSetTranslate() {\n                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n            }\n            if (updateTranslate) {\n                var translated, newTranslate;\n                if (s.controller && s.controller.spline) {\n                    s.controller.spline = undefined;\n                }\n                if (s.params.freeMode) {\n                    forceSetTranslate();\n                    if (s.params.autoHeight) {\n                        s.updateAutoHeight();\n                    }\n                }\n                else {\n                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                        translated = s.slideTo(s.slides.length - 1, 0, false, true);\n                    }\n                    else {\n                        translated = s.slideTo(s.activeIndex, 0, false, true);\n                    }\n                    if (!translated) {\n                        forceSetTranslate();\n                    }\n                }\n            }\n            else if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n        };\n        \n        /*=========================\n          Resize Handler\n          ===========================*/\n        s.onResize = function (forceUpdatePagination) {\n            //Breakpoints\n            if (s.params.breakpoints) {\n                s.setBreakpoint();\n            }\n        \n            // Disable locks on resize\n            var allowSwipeToPrev = s.params.allowSwipeToPrev;\n            var allowSwipeToNext = s.params.allowSwipeToNext;\n            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;\n        \n            s.updateContainerSize();\n            s.updateSlidesSize();\n            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            if (s.controller && s.controller.spline) {\n                s.controller.spline = undefined;\n            }\n            if (s.params.freeMode) {\n                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n        \n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n            }\n            else {\n                s.updateClasses();\n                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                    s.slideTo(s.slides.length - 1, 0, false, true);\n                }\n                else {\n                    s.slideTo(s.activeIndex, 0, false, true);\n                }\n            }\n            // Return locks after resize\n            s.params.allowSwipeToPrev = allowSwipeToPrev;\n            s.params.allowSwipeToNext = allowSwipeToNext;\n        };\n        \n        /*=========================\n          Events\n          ===========================*/\n        \n        //Define Touch Events\n        var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];\n        if (window.navigator.pointerEnabled) desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];\n        else if (window.navigator.msPointerEnabled) desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        s.touchEvents = {\n            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : desktopEvents[0],\n            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : desktopEvents[1],\n            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : desktopEvents[2]\n        };\n        \n        \n        // WP8 Touch Events Fix\n        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {\n            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);\n        }\n        \n        // Attach/detach events\n        s.initEvents = function (detach) {\n            var actionDom = detach ? 'off' : 'on';\n            var action = detach ? 'removeEventListener' : 'addEventListener';\n            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];\n            var target = s.support.touch ? touchEventsTarget : document;\n        \n            var moveCapture = s.params.nested ? true : false;\n        \n            //Touch Events\n            if (s.browser.ie) {\n                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                target[action](s.touchEvents.end, s.onTouchEnd, false);\n            }\n            else {\n                if (s.support.touch) {\n                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, false);\n                }\n                if (params.simulateTouch && !s.device.ios && !s.device.android) {\n                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);\n                    document[action]('mousemove', s.onTouchMove, moveCapture);\n                    document[action]('mouseup', s.onTouchEnd, false);\n                }\n            }\n            window[action]('resize', s.onResize);\n        \n            // Next, Prev, Index\n            if (s.params.nextButton) {\n                $(s.params.nextButton)[actionDom]('click', s.onClickNext);\n                if (s.params.a11y && s.a11y) $(s.params.nextButton)[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.prevButton) {\n                $(s.params.prevButton)[actionDom]('click', s.onClickPrev);\n                if (s.params.a11y && s.a11y) $(s.params.prevButton)[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.pagination && s.params.paginationClickable) {\n                $(s.paginationContainer)[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);\n                if (s.params.a11y && s.a11y) $(s.paginationContainer)[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);\n            }\n        \n            // Prevent Links Clicks\n            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);\n        };\n        s.attachEvents = function (detach) {\n            s.initEvents();\n        };\n        s.detachEvents = function () {\n            s.initEvents(true);\n        };\n        \n        /*=========================\n          Handle Clicks\n          ===========================*/\n        // Prevent Clicks\n        s.allowClick = true;\n        s.preventClicks = function (e) {\n            if (!s.allowClick) {\n                if (s.params.preventClicks) e.preventDefault();\n                if (s.params.preventClicksPropagation && s.animating) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                }\n            }\n        };\n        // Clicks\n        s.onClickNext = function (e) {\n            e.preventDefault();\n            if (s.isEnd && !s.params.loop) return;\n            s.slideNext();\n        };\n        s.onClickPrev = function (e) {\n            e.preventDefault();\n            if (s.isBeginning && !s.params.loop) return;\n            s.slidePrev();\n        };\n        s.onClickIndex = function (e) {\n            e.preventDefault();\n            var index = $(this).index() * s.params.slidesPerGroup;\n            if (s.params.loop) index = index + s.loopedSlides;\n            s.slideTo(index);\n        };\n        \n        /*=========================\n          Handle Touches\n          ===========================*/\n        function findElementInEvent(e, selector) {\n            var el = $(e.target);\n            if (!el.is(selector)) {\n                if (typeof selector === 'string') {\n                    el = el.parents(selector);\n                }\n                else if (selector.nodeType) {\n                    var found;\n                    el.parents().each(function (index, _el) {\n                        if (_el === selector) found = selector;\n                    });\n                    if (!found) return undefined;\n                    else return selector;\n                }\n            }\n            if (el.length === 0) {\n                return undefined;\n            }\n            return el[0];\n        }\n        s.updateClickedSlide = function (e) {\n            var slide = findElementInEvent(e, '.' + s.params.slideClass);\n            var slideFound = false;\n            if (slide) {\n                for (var i = 0; i < s.slides.length; i++) {\n                    if (s.slides[i] === slide) slideFound = true;\n                }\n            }\n        \n            if (slide && slideFound) {\n                s.clickedSlide = slide;\n                s.clickedIndex = $(slide).index();\n            }\n            else {\n                s.clickedSlide = undefined;\n                s.clickedIndex = undefined;\n                return;\n            }\n            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {\n                var slideToIndex = s.clickedIndex,\n                    realIndex,\n                    duplicatedSlides;\n                if (s.params.loop) {\n                    if (s.animating) return;\n                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');\n                    if (s.params.centeredSlides) {\n                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                    else {\n                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                }\n                else {\n                    s.slideTo(slideToIndex);\n                }\n            }\n        };\n        \n        var isTouched,\n            isMoved,\n            allowTouchCallbacks,\n            touchStartTime,\n            isScrolling,\n            currentTranslate,\n            startTranslate,\n            allowThresholdMove,\n            // Form elements to match\n            formElements = 'input, select, textarea, button',\n            // Last click time\n            lastClickTime = Date.now(), clickTimeout,\n            //Velocities\n            velocities = [],\n            allowMomentumBounce;\n        \n        // Animating Flag\n        s.animating = false;\n        \n        // Touches information\n        s.touches = {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n        };\n        \n        // Touch handlers\n        var isTouchEvent, startMoving;\n        s.onTouchStart = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            isTouchEvent = e.type === 'touchstart';\n            if (!isTouchEvent && 'which' in e && e.which === 3) return;\n            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {\n                s.allowClick = true;\n                return;\n            }\n            if (s.params.swipeHandler) {\n                if (!findElementInEvent(e, s.params.swipeHandler)) return;\n            }\n        \n            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n        \n            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {\n                return;\n            }\n        \n            isTouched = true;\n            isMoved = false;\n            allowTouchCallbacks = true;\n            isScrolling = undefined;\n            startMoving = undefined;\n            s.touches.startX = startX;\n            s.touches.startY = startY;\n            touchStartTime = Date.now();\n            s.allowClick = true;\n            s.updateContainerSize();\n            s.swipeDirection = undefined;\n            if (s.params.threshold > 0) allowThresholdMove = false;\n            if (e.type !== 'touchstart') {\n                var preventDefault = true;\n                if ($(e.target).is(formElements)) preventDefault = false;\n                if (document.activeElement && $(document.activeElement).is(formElements)) {\n                    document.activeElement.blur();\n                }\n                if (preventDefault) {\n                    e.preventDefault();\n                }\n            }\n            s.emit('onTouchStart', s, e);\n        };\n        \n        s.onTouchMove = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (isTouchEvent && e.type === 'mousemove') return;\n            if (e.preventedByNestedSwiper) return;\n            if (s.params.onlyExternal) {\n                // isMoved = true;\n                s.allowClick = false;\n                if (isTouched) {\n                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n                    touchStartTime = Date.now();\n                }\n                return;\n            }\n            if (isTouchEvent && document.activeElement) {\n                if (e.target === document.activeElement && $(e.target).is(formElements)) {\n                    isMoved = true;\n                    s.allowClick = false;\n                    return;\n                }\n            }\n            if (allowTouchCallbacks) {\n                s.emit('onTouchMove', s, e);\n            }\n            if (e.targetTouches && e.targetTouches.length > 1) return;\n        \n            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        \n            if (typeof isScrolling === 'undefined') {\n                var touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;\n                isScrolling = isH() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);\n            }\n            if (isScrolling) {\n                s.emit('onTouchMoveOpposite', s, e);\n            }\n            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {\n                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {\n                    startMoving = true;\n                }\n            }\n            if (!isTouched) return;\n            if (isScrolling)  {\n                isTouched = false;\n                return;\n            }\n            if (!startMoving && s.browser.ieTouch) {\n                return;\n            }\n            s.allowClick = false;\n            s.emit('onSliderMove', s, e);\n            e.preventDefault();\n            if (s.params.touchMoveStopPropagation && !s.params.nested) {\n                e.stopPropagation();\n            }\n        \n            if (!isMoved) {\n                if (params.loop) {\n                    s.fixLoop();\n                }\n                startTranslate = s.getWrapperTranslate();\n                s.setWrapperTransition(0);\n                if (s.animating) {\n                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');\n                }\n                if (s.params.autoplay && s.autoplaying) {\n                    if (s.params.autoplayDisableOnInteraction) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        s.pauseAutoplay();\n                    }\n                }\n                allowMomentumBounce = false;\n                //Grab Cursor\n                if (s.params.grabCursor) {\n                    s.container[0].style.cursor = 'move';\n                    s.container[0].style.cursor = '-webkit-grabbing';\n                    s.container[0].style.cursor = '-moz-grabbin';\n                    s.container[0].style.cursor = 'grabbing';\n                }\n            }\n            isMoved = true;\n        \n            var diff = s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n        \n            diff = diff * s.params.touchRatio;\n            if (s.rtl) diff = -diff;\n        \n            s.swipeDirection = diff > 0 ? 'prev' : 'next';\n            currentTranslate = diff + startTranslate;\n        \n            var disableParentSwiper = true;\n            if ((diff > 0 && currentTranslate > s.minTranslate())) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);\n            }\n            else if (diff < 0 && currentTranslate < s.maxTranslate()) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);\n            }\n        \n            if (disableParentSwiper) {\n                e.preventedByNestedSwiper = true;\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {\n                currentTranslate = startTranslate;\n            }\n            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {\n                currentTranslate = startTranslate;\n            }\n        \n            if (!s.params.followFinger) return;\n        \n            // Threshold\n            if (s.params.threshold > 0) {\n                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {\n                    if (!allowThresholdMove) {\n                        allowThresholdMove = true;\n                        s.touches.startX = s.touches.currentX;\n                        s.touches.startY = s.touches.currentY;\n                        currentTranslate = startTranslate;\n                        s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n                        return;\n                    }\n                }\n                else {\n                    currentTranslate = startTranslate;\n                    return;\n                }\n            }\n            // Update active index in free mode\n            if (s.params.freeMode || s.params.watchSlidesProgress) {\n                s.updateActiveIndex();\n            }\n            if (s.params.freeMode) {\n                //Velocity\n                if (velocities.length === 0) {\n                    velocities.push({\n                        position: s.touches[isH() ? 'startX' : 'startY'],\n                        time: touchStartTime\n                    });\n                }\n                velocities.push({\n                    position: s.touches[isH() ? 'currentX' : 'currentY'],\n                    time: (new window.Date()).getTime()\n                });\n            }\n            // Update progress\n            s.updateProgress(currentTranslate);\n            // Update translate\n            s.setWrapperTranslate(currentTranslate);\n        };\n        s.onTouchEnd = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (allowTouchCallbacks) {\n                s.emit('onTouchEnd', s, e);\n            }\n            allowTouchCallbacks = false;\n            if (!isTouched) return;\n            //Return Grab Cursor\n            if (s.params.grabCursor && isMoved && isTouched) {\n                s.container[0].style.cursor = 'move';\n                s.container[0].style.cursor = '-webkit-grab';\n                s.container[0].style.cursor = '-moz-grab';\n                s.container[0].style.cursor = 'grab';\n            }\n        \n            // Time diff\n            var touchEndTime = Date.now();\n            var timeDiff = touchEndTime - touchStartTime;\n        \n            // Tap, doubleTap, Click\n            if (s.allowClick) {\n                s.updateClickedSlide(e);\n                s.emit('onTap', s, e);\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    clickTimeout = setTimeout(function () {\n                        if (!s) return;\n                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {\n                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);\n                        }\n                        s.emit('onClick', s, e);\n                    }, 300);\n        \n                }\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    s.emit('onDoubleTap', s, e);\n                }\n            }\n        \n            lastClickTime = Date.now();\n            setTimeout(function () {\n                if (s) s.allowClick = true;\n            }, 0);\n        \n            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {\n                isTouched = isMoved = false;\n                return;\n            }\n            isTouched = isMoved = false;\n        \n            var currentPos;\n            if (s.params.followFinger) {\n                currentPos = s.rtl ? s.translate : -s.translate;\n            }\n            else {\n                currentPos = -currentTranslate;\n            }\n            if (s.params.freeMode) {\n                if (currentPos < -s.minTranslate()) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                else if (currentPos > -s.maxTranslate()) {\n                    if (s.slides.length < s.snapGrid.length) {\n                        s.slideTo(s.snapGrid.length - 1);\n                    }\n                    else {\n                        s.slideTo(s.slides.length - 1);\n                    }\n                    return;\n                }\n        \n                if (s.params.freeModeMomentum) {\n                    if (velocities.length > 1) {\n                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();\n        \n                        var distance = lastMoveEvent.position - velocityEvent.position;\n                        var time = lastMoveEvent.time - velocityEvent.time;\n                        s.velocity = distance / time;\n                        s.velocity = s.velocity / 2;\n                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {\n                            s.velocity = 0;\n                        }\n                        // this implies that the user stopped moving a finger then released.\n                        // There would be no events with distance zero, so the last event is stale.\n                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {\n                            s.velocity = 0;\n                        }\n                    } else {\n                        s.velocity = 0;\n                    }\n        \n                    velocities.length = 0;\n                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;\n                    var momentumDistance = s.velocity * momentumDuration;\n        \n                    var newPosition = s.translate + momentumDistance;\n                    if (s.rtl) newPosition = - newPosition;\n                    var doBounce = false;\n                    var afterBouncePosition;\n                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;\n                    if (newPosition < s.maxTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition + s.maxTranslate() < -bounceAmount) {\n                                newPosition = s.maxTranslate() - bounceAmount;\n                            }\n                            afterBouncePosition = s.maxTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.maxTranslate();\n                        }\n                    }\n                    else if (newPosition > s.minTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition - s.minTranslate() > bounceAmount) {\n                                newPosition = s.minTranslate() + bounceAmount;\n                            }\n                            afterBouncePosition = s.minTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.minTranslate();\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        var j = 0,\n                            nextSlide;\n                        for (j = 0; j < s.snapGrid.length; j += 1) {\n                            if (s.snapGrid[j] > -newPosition) {\n                                nextSlide = j;\n                                break;\n                            }\n        \n                        }\n                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {\n                            newPosition = s.snapGrid[nextSlide];\n                        } else {\n                            newPosition = s.snapGrid[nextSlide - 1];\n                        }\n                        if (!s.rtl) newPosition = - newPosition;\n                    }\n                    //Fix duration\n                    if (s.velocity !== 0) {\n                        if (s.rtl) {\n                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);\n                        }\n                        else {\n                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        s.slideReset();\n                        return;\n                    }\n        \n                    if (s.params.freeModeMomentumBounce && doBounce) {\n                        s.updateProgress(afterBouncePosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        s.animating = true;\n                        s.wrapper.transitionEnd(function () {\n                            if (!s || !allowMomentumBounce) return;\n                            s.emit('onMomentumBounce', s);\n        \n                            s.setWrapperTransition(s.params.speed);\n                            s.setWrapperTranslate(afterBouncePosition);\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        });\n                    } else if (s.velocity) {\n                        s.updateProgress(newPosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        if (!s.animating) {\n                            s.animating = true;\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        }\n        \n                    } else {\n                        s.updateProgress(newPosition);\n                    }\n        \n                    s.updateActiveIndex();\n                }\n                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {\n                    s.updateProgress();\n                    s.updateActiveIndex();\n                }\n                return;\n            }\n        \n            // Find current slide\n            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];\n            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {\n                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {\n                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];\n                    }\n                }\n                else {\n                    if (currentPos >= s.slidesGrid[i]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];\n                    }\n                }\n            }\n        \n            // Find current slide size\n            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;\n        \n            if (timeDiff > s.params.longSwipesMs) {\n                // Long touches\n                if (!s.params.longSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n                }\n            }\n            else {\n                // Short swipes\n                if (!s.params.shortSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    s.slideTo(stopIndex + s.params.slidesPerGroup);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    s.slideTo(stopIndex);\n                }\n            }\n        };\n        /*=========================\n          Transitions\n          ===========================*/\n        s._slideTo = function (slideIndex, speed) {\n            return s.slideTo(slideIndex, speed, true, true);\n        };\n        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (typeof slideIndex === 'undefined') slideIndex = 0;\n            if (slideIndex < 0) slideIndex = 0;\n            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);\n            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;\n        \n            var translate = - s.snapGrid[s.snapIndex];\n            // Stop autoplay\n            if (s.params.autoplay && s.autoplaying) {\n                if (internal || !s.params.autoplayDisableOnInteraction) {\n                    s.pauseAutoplay(speed);\n                }\n                else {\n                    s.stopAutoplay();\n                }\n            }\n            // Update progress\n            s.updateProgress(translate);\n        \n            // Normalize slideIndex\n            for (var i = 0; i < s.slidesGrid.length; i++) {\n                if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {\n                    slideIndex = i;\n                }\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {\n                if ((s.activeIndex || 0) !== slideIndex ) return false;\n            }\n        \n            // Update Index\n            if (typeof speed === 'undefined') speed = s.params.speed;\n            s.previousIndex = s.activeIndex || 0;\n            s.activeIndex = slideIndex;\n        \n            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {\n                // Update Height\n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n                s.updateClasses();\n                if (s.params.effect !== 'slide') {\n                    s.setWrapperTranslate(translate);\n                }\n                return false;\n            }\n            s.updateClasses();\n            s.onTransitionStart(runCallbacks);\n        \n            if (speed === 0) {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(0);\n                s.onTransitionEnd(runCallbacks);\n            }\n            else {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(speed);\n                if (!s.animating) {\n                    s.animating = true;\n                    s.wrapper.transitionEnd(function () {\n                        if (!s) return;\n                        s.onTransitionEnd(runCallbacks);\n                    });\n                }\n        \n            }\n        \n            return true;\n        };\n        \n        s.onTransitionStart = function (runCallbacks) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n            if (s.lazy) s.lazy.onTransitionStart();\n            if (runCallbacks) {\n                s.emit('onTransitionStart', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeStart', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextStart', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevStart', s);\n                    }\n                }\n        \n            }\n        };\n        s.onTransitionEnd = function (runCallbacks) {\n            s.animating = false;\n            s.setWrapperTransition(0);\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.lazy) s.lazy.onTransitionEnd();\n            if (runCallbacks) {\n                s.emit('onTransitionEnd', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeEnd', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextEnd', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevEnd', s);\n                    }\n                }\n            }\n            if (s.params.hashnav && s.hashnav) {\n                s.hashnav.setHash();\n            }\n        \n        };\n        s.slideNext = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n        };\n        s._slideNext = function (speed) {\n            return s.slideNext(true, speed, true);\n        };\n        s.slidePrev = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n        };\n        s._slidePrev = function (speed) {\n            return s.slidePrev(true, speed, true);\n        };\n        s.slideReset = function (runCallbacks, speed, internal) {\n            return s.slideTo(s.activeIndex, speed, runCallbacks);\n        };\n        \n        /*=========================\n          Translate/transition helpers\n          ===========================*/\n        s.setWrapperTransition = function (duration, byController) {\n            s.wrapper.transition(duration);\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTransition(duration);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTransition(duration);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTransition(duration);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTransition(duration, byController);\n            }\n            s.emit('onSetTransition', s, duration);\n        };\n        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {\n            var x = 0, y = 0, z = 0;\n            if (isH()) {\n                x = s.rtl ? -translate : translate;\n            }\n            else {\n                y = translate;\n            }\n        \n            if (s.params.roundLengths) {\n                x = round(x);\n                y = round(y);\n            }\n        \n            if (!s.params.virtualTranslate) {\n                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');\n                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');\n            }\n        \n            s.translate = isH() ? x : y;\n        \n            // Check if we need to update progress\n            var progress;\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            if (translatesDiff === 0) {\n                progress = 0;\n            }\n            else {\n                progress = (translate - s.minTranslate()) / (translatesDiff);\n            }\n            if (progress !== s.progress) {\n                s.updateProgress(translate);\n            }\n        \n            if (updateActiveIndex) s.updateActiveIndex();\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTranslate(s.translate);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTranslate(s.translate);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTranslate(s.translate);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTranslate(s.translate, byController);\n            }\n            s.emit('onSetTranslate', s, s.translate);\n        };\n        \n        s.getTranslate = function (el, axis) {\n            var matrix, curTransform, curStyle, transformMatrix;\n        \n            // automatic axis detection\n            if (typeof axis === 'undefined') {\n                axis = 'x';\n            }\n        \n            if (s.params.virtualTranslate) {\n                return s.rtl ? -s.translate : s.translate;\n            }\n        \n            curStyle = window.getComputedStyle(el, null);\n            if (window.WebKitCSSMatrix) {\n                curTransform = curStyle.transform || curStyle.webkitTransform;\n                if (curTransform.split(',').length > 6) {\n                    curTransform = curTransform.split(', ').map(function(a){\n                        return a.replace(',','.');\n                    }).join(', ');\n                }\n                // Some old versions of Webkit choke when 'none' is passed; pass\n                // empty string instead in this case\n                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n            }\n            else {\n                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n                matrix = transformMatrix.toString().split(',');\n            }\n        \n            if (axis === 'x') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m41;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[12]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[4]);\n            }\n            if (axis === 'y') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m42;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[13]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[5]);\n            }\n            if (s.rtl && curTransform) curTransform = -curTransform;\n            return curTransform || 0;\n        };\n        s.getWrapperTranslate = function (axis) {\n            if (typeof axis === 'undefined') {\n                axis = isH() ? 'x' : 'y';\n            }\n            return s.getTranslate(s.wrapper[0], axis);\n        };\n        \n        /*=========================\n          Observer\n          ===========================*/\n        s.observers = [];\n        function initObserver(target, options) {\n            options = options || {};\n            // create an observer instance\n            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n            var observer = new ObserverFunc(function (mutations) {\n                mutations.forEach(function (mutation) {\n                    s.onResize(true);\n                    s.emit('onObserverUpdate', s, mutation);\n                });\n            });\n        \n            observer.observe(target, {\n                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n                childList: typeof options.childList === 'undefined' ? true : options.childList,\n                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n            });\n        \n            s.observers.push(observer);\n        }\n        s.initObservers = function () {\n            if (s.params.observeParents) {\n                var containerParents = s.container.parents();\n                for (var i = 0; i < containerParents.length; i++) {\n                    initObserver(containerParents[i]);\n                }\n            }\n        \n            // Observe container\n            initObserver(s.container[0], {childList: false});\n        \n            // Observe wrapper\n            initObserver(s.wrapper[0], {attributes: false});\n        };\n        s.disconnectObservers = function () {\n            for (var i = 0; i < s.observers.length; i++) {\n                s.observers[i].disconnect();\n            }\n            s.observers = [];\n        };\n        /*=========================\n          Loop\n          ===========================*/\n        // Create looped slides\n        s.createLoop = function () {\n            // Remove duplicated slides\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n        \n            var slides = s.wrapper.children('.' + s.params.slideClass);\n        \n            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;\n        \n            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);\n            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;\n            if (s.loopedSlides > slides.length) {\n                s.loopedSlides = slides.length;\n            }\n        \n            var prependSlides = [], appendSlides = [], i;\n            slides.each(function (index, el) {\n                var slide = $(this);\n                if (index < s.loopedSlides) appendSlides.push(el);\n                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);\n                slide.attr('data-swiper-slide-index', index);\n            });\n            for (i = 0; i < appendSlides.length; i++) {\n                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n            for (i = prependSlides.length - 1; i >= 0; i--) {\n                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n        };\n        s.destroyLoop = function () {\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n            s.slides.removeAttr('data-swiper-slide-index');\n        };\n        s.fixLoop = function () {\n            var newIndex;\n            //Fix For Negative Oversliding\n            if (s.activeIndex < s.loopedSlides) {\n                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n            //Fix For Positive Oversliding\n            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {\n                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n        };\n        /*=========================\n          Append/Prepend/Remove Slides\n          ===========================*/\n        s.appendSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.append(slides[i]);\n                }\n            }\n            else {\n                s.wrapper.append(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n        };\n        s.prependSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            var newActiveIndex = s.activeIndex + 1;\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.prepend(slides[i]);\n                }\n                newActiveIndex = s.activeIndex + slides.length;\n            }\n            else {\n                s.wrapper.prepend(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            s.slideTo(newActiveIndex, 0, false);\n        };\n        s.removeSlide = function (slidesIndexes) {\n            if (s.params.loop) {\n                s.destroyLoop();\n                s.slides = s.wrapper.children('.' + s.params.slideClass);\n            }\n            var newActiveIndex = s.activeIndex,\n                indexToRemove;\n            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {\n                for (var i = 0; i < slidesIndexes.length; i++) {\n                    indexToRemove = slidesIndexes[i];\n                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                    if (indexToRemove < newActiveIndex) newActiveIndex--;\n                }\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n            else {\n                indexToRemove = slidesIndexes;\n                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                if (indexToRemove < newActiveIndex) newActiveIndex--;\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n        \n            if (s.params.loop) {\n                s.createLoop();\n            }\n        \n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            if (s.params.loop) {\n                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);\n            }\n            else {\n                s.slideTo(newActiveIndex, 0, false);\n            }\n        \n        };\n        s.removeAllSlides = function () {\n            var slidesIndexes = [];\n            for (var i = 0; i < s.slides.length; i++) {\n                slidesIndexes.push(i);\n            }\n            s.removeSlide(slidesIndexes);\n        };\n        \n\n        /*=========================\n          Effects\n          ===========================*/\n        s.effects = {\n            fade: {\n                setTranslate: function () {\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var offset = slide[0].swiperSlideOffset;\n                        var tx = -offset;\n                        if (!s.params.virtualTranslate) tx = tx - s.translate;\n                        var ty = 0;\n                        if (!isH()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n                        var slideOpacity = s.params.fade.crossFade ?\n                                Math.max(1 - Math.abs(slide[0].progress), 0) :\n                                1 + Math.min(Math.max(slide[0].progress, -1), 0);\n                        slide\n                            .css({\n                                opacity: slideOpacity\n                            })\n                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');\n        \n                    }\n        \n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration);\n                    if (s.params.virtualTranslate && duration !== 0) {\n                        var eventTriggered = false;\n                        s.slides.transitionEnd(function () {\n                            if (eventTriggered) return;\n                            if (!s) return;\n                            eventTriggered = true;\n                            s.animating = false;\n                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n                            for (var i = 0; i < triggerEvents.length; i++) {\n                                s.wrapper.trigger(triggerEvents[i]);\n                            }\n                        });\n                    }\n                }\n            },\n            cube: {\n                setTranslate: function () {\n                    var wrapperRotate = 0, cubeShadow;\n                    if (s.params.cube.shadow) {\n                        if (isH()) {\n                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.wrapper.append(cubeShadow);\n                            }\n                            cubeShadow.css({height: s.width + 'px'});\n                        }\n                        else {\n                            cubeShadow = s.container.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.container.append(cubeShadow);\n                            }\n                        }\n                    }\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideAngle = i * 90;\n                        var round = Math.floor(slideAngle / 360);\n                        if (s.rtl) {\n                            slideAngle = -slideAngle;\n                            round = Math.floor(-slideAngle / 360);\n                        }\n                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);\n                        var tx = 0, ty = 0, tz = 0;\n                        if (i % 4 === 0) {\n                            tx = - round * 4 * s.size;\n                            tz = 0;\n                        }\n                        else if ((i - 1) % 4 === 0) {\n                            tx = 0;\n                            tz = - round * 4 * s.size;\n                        }\n                        else if ((i - 2) % 4 === 0) {\n                            tx = s.size + round * 4 * s.size;\n                            tz = s.size;\n                        }\n                        else if ((i - 3) % 4 === 0) {\n                            tx = - s.size;\n                            tz = 3 * s.size + s.size * 4 * round;\n                        }\n                        if (s.rtl) {\n                            tx = -tx;\n                        }\n        \n                        if (!isH()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n        \n                        var transform = 'rotateX(' + (isH() ? 0 : -slideAngle) + 'deg) rotateY(' + (isH() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';\n                        if (progress <= 1 && progress > -1) {\n                            wrapperRotate = i * 90 + progress * 90;\n                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;\n                        }\n                        slide.transform(transform);\n                        if (s.params.cube.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            var shadowOpacity = slide[0].progress;\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = -slide[0].progress;\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = slide[0].progress;\n                        }\n                    }\n                    s.wrapper.css({\n                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'\n                    });\n        \n                    if (s.params.cube.shadow) {\n                        if (isH()) {\n                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');\n                        }\n                        else {\n                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                            var scale1 = s.params.cube.shadowScale,\n                                scale2 = s.params.cube.shadowScale / multiplier,\n                                offset = s.params.cube.shadowOffset;\n                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');\n                        }\n                    }\n                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;\n                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (isH() ? 0 : wrapperRotate) + 'deg) rotateY(' + (isH() ? -wrapperRotate : 0) + 'deg)');\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                    if (s.params.cube.shadow && !isH()) {\n                        s.container.find('.swiper-cube-shadow').transition(duration);\n                    }\n                }\n            },\n            coverflow: {\n                setTranslate: function () {\n                    var transform = s.translate;\n                    var center = isH() ? -transform + s.width / 2 : -transform + s.height / 2;\n                    var rotate = isH() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;\n                    var translate = s.params.coverflow.depth;\n                    //Each slide offset from center\n                    for (var i = 0, length = s.slides.length; i < length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideSize = s.slidesSizesGrid[i];\n                        var slideOffset = slide[0].swiperSlideOffset;\n                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;\n        \n                        var rotateY = isH() ? rotate * offsetMultiplier : 0;\n                        var rotateX = isH() ? 0 : rotate * offsetMultiplier;\n                        // var rotateZ = 0\n                        var translateZ = -translate * Math.abs(offsetMultiplier);\n        \n                        var translateY = isH() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);\n                        var translateX = isH() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;\n        \n                        //Fix for ultra small values\n                        if (Math.abs(translateX) < 0.001) translateX = 0;\n                        if (Math.abs(translateY) < 0.001) translateY = 0;\n                        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n                        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n                        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        \n                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';\n        \n                        slide.transform(slideTransform);\n                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n                        if (s.params.coverflow.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n                        }\n                    }\n        \n                    //Set correct perspective for IE10\n                    if (s.browser.ie) {\n                        var ws = s.wrapper[0].style;\n                        ws.perspectiveOrigin = center + 'px 50%';\n                    }\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                }\n            }\n        };\n\n        /*=========================\n          Images Lazy Loading\n          ===========================*/\n        s.lazy = {\n            initialImageLoaded: false,\n            loadImageInSlide: function (index, loadInDuplicate) {\n                if (typeof index === 'undefined') return;\n                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;\n                if (s.slides.length === 0) return;\n        \n                var slide = s.slides.eq(index);\n                var img = slide.find('.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');\n                if (slide.hasClass('swiper-lazy') && !slide.hasClass('swiper-lazy-loaded') && !slide.hasClass('swiper-lazy-loading')) {\n                    img = img.add(slide[0]);\n                }\n                if (img.length === 0) return;\n        \n                img.each(function () {\n                    var _img = $(this);\n                    _img.addClass('swiper-lazy-loading');\n                    var background = _img.attr('data-background');\n                    var src = _img.attr('data-src'),\n                        srcset = _img.attr('data-srcset');\n                    s.loadImage(_img[0], (src || background), srcset, false, function () {\n                        if (background) {\n                            _img.css('background-image', 'url(' + background + ')');\n                            _img.removeAttr('data-background');\n                        }\n                        else {\n                            if (srcset) {\n                                _img.attr('srcset', srcset);\n                                _img.removeAttr('data-srcset');\n                            }\n                            if (src) {\n                                _img.attr('src', src);\n                                _img.removeAttr('data-src');\n                            }\n        \n                        }\n        \n                        _img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');\n                        slide.find('.swiper-lazy-preloader, .preloader').remove();\n                        if (s.params.loop && loadInDuplicate) {\n                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');\n                            if (slide.hasClass(s.params.slideDuplicateClass)) {\n                                var originalSlide = s.wrapper.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')');\n                                s.lazy.loadImageInSlide(originalSlide.index(), false);\n                            }\n                            else {\n                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);\n                            }\n                        }\n                        s.emit('onLazyImageReady', s, slide[0], _img[0]);\n                    });\n        \n                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);\n                });\n        \n            },\n            load: function () {\n                var i;\n                if (s.params.watchSlidesVisibility) {\n                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {\n                        s.lazy.loadImageInSlide($(this).index());\n                    });\n                }\n                else {\n                    if (s.params.slidesPerView > 1) {\n                        for (i = s.activeIndex; i < s.activeIndex + s.params.slidesPerView ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        s.lazy.loadImageInSlide(s.activeIndex);\n                    }\n                }\n                if (s.params.lazyLoadingInPrevNext) {\n                    if (s.params.slidesPerView > 1) {\n                        // Next Slides\n                        for (i = s.activeIndex + s.params.slidesPerView; i < s.activeIndex + s.params.slidesPerView + s.params.slidesPerView; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                        // Prev Slides\n                        for (i = s.activeIndex - s.params.slidesPerView; i < s.activeIndex ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);\n                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());\n        \n                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);\n                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());\n                    }\n                }\n            },\n            onTransitionStart: function () {\n                if (s.params.lazyLoading) {\n                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {\n                        s.lazy.load();\n                    }\n                }\n            },\n            onTransitionEnd: function () {\n                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {\n                    s.lazy.load();\n                }\n            }\n        };\n        \n\n        /*=========================\n          Scrollbar\n          ===========================*/\n        s.scrollbar = {\n            isTouched: false,\n            setDragPosition: function (e) {\n                var sb = s.scrollbar;\n                var x = 0, y = 0;\n                var translate;\n                var pointerPosition = isH() ?\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;\n                var position = (pointerPosition) - sb.track.offset()[isH() ? 'left' : 'top'] - sb.dragSize / 2;\n                var positionMin = -s.minTranslate() * sb.moveDivider;\n                var positionMax = -s.maxTranslate() * sb.moveDivider;\n                if (position < positionMin) {\n                    position = positionMin;\n                }\n                else if (position > positionMax) {\n                    position = positionMax;\n                }\n                position = -position / sb.moveDivider;\n                s.updateProgress(position);\n                s.setWrapperTranslate(position, true);\n            },\n            dragStart: function (e) {\n                var sb = s.scrollbar;\n                sb.isTouched = true;\n                e.preventDefault();\n                e.stopPropagation();\n        \n                sb.setDragPosition(e);\n                clearTimeout(sb.dragTimeout);\n        \n                sb.track.transition(0);\n                if (s.params.scrollbarHide) {\n                    sb.track.css('opacity', 1);\n                }\n                s.wrapper.transition(100);\n                sb.drag.transition(100);\n                s.emit('onScrollbarDragStart', s);\n            },\n            dragMove: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n                sb.setDragPosition(e);\n                s.wrapper.transition(0);\n                sb.track.transition(0);\n                sb.drag.transition(0);\n                s.emit('onScrollbarDragMove', s);\n            },\n            dragEnd: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                sb.isTouched = false;\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.dragTimeout);\n                    sb.dragTimeout = setTimeout(function () {\n                        sb.track.css('opacity', 0);\n                        sb.track.transition(400);\n                    }, 1000);\n        \n                }\n                s.emit('onScrollbarDragEnd', s);\n                if (s.params.scrollbarSnapOnRelease) {\n                    s.slideReset();\n                }\n            },\n            enableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).on(s.touchEvents.start, sb.dragStart);\n                $(target).on(s.touchEvents.move, sb.dragMove);\n                $(target).on(s.touchEvents.end, sb.dragEnd);\n            },\n            disableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).off(s.touchEvents.start, sb.dragStart);\n                $(target).off(s.touchEvents.move, sb.dragMove);\n                $(target).off(s.touchEvents.end, sb.dragEnd);\n            },\n            set: function () {\n                if (!s.params.scrollbar) return;\n                var sb = s.scrollbar;\n                sb.track = $(s.params.scrollbar);\n                sb.drag = sb.track.find('.swiper-scrollbar-drag');\n                if (sb.drag.length === 0) {\n                    sb.drag = $('<div class=\"swiper-scrollbar-drag\"></div>');\n                    sb.track.append(sb.drag);\n                }\n                sb.drag[0].style.width = '';\n                sb.drag[0].style.height = '';\n                sb.trackSize = isH() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;\n        \n                sb.divider = s.size / s.virtualSize;\n                sb.moveDivider = sb.divider * (sb.trackSize / s.size);\n                sb.dragSize = sb.trackSize * sb.divider;\n        \n                if (isH()) {\n                    sb.drag[0].style.width = sb.dragSize + 'px';\n                }\n                else {\n                    sb.drag[0].style.height = sb.dragSize + 'px';\n                }\n        \n                if (sb.divider >= 1) {\n                    sb.track[0].style.display = 'none';\n                }\n                else {\n                    sb.track[0].style.display = '';\n                }\n                if (s.params.scrollbarHide) {\n                    sb.track[0].style.opacity = 0;\n                }\n            },\n            setTranslate: function () {\n                if (!s.params.scrollbar) return;\n                var diff;\n                var sb = s.scrollbar;\n                var translate = s.translate || 0;\n                var newPos;\n        \n                var newSize = sb.dragSize;\n                newPos = (sb.trackSize - sb.dragSize) * s.progress;\n                if (s.rtl && isH()) {\n                    newPos = -newPos;\n                    if (newPos > 0) {\n                        newSize = sb.dragSize - newPos;\n                        newPos = 0;\n                    }\n                    else if (-newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize + newPos;\n                    }\n                }\n                else {\n                    if (newPos < 0) {\n                        newSize = sb.dragSize + newPos;\n                        newPos = 0;\n                    }\n                    else if (newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize - newPos;\n                    }\n                }\n                if (isH()) {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateX(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.width = newSize + 'px';\n                }\n                else {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateY(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.height = newSize + 'px';\n                }\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.timeout);\n                    sb.track[0].style.opacity = 1;\n                    sb.timeout = setTimeout(function () {\n                        sb.track[0].style.opacity = 0;\n                        sb.track.transition(400);\n                    }, 1000);\n                }\n            },\n            setTransition: function (duration) {\n                if (!s.params.scrollbar) return;\n                s.scrollbar.drag.transition(duration);\n            }\n        };\n\n        /*=========================\n          Controller\n          ===========================*/\n        s.controller = {\n            LinearSpline: function (x, y) {\n                this.x = x;\n                this.y = y;\n                this.lastIndex = x.length - 1;\n                // Given an x value (x2), return the expected y2 value:\n                // (x1,y1) is the known point before given value,\n                // (x3,y3) is the known point after given value.\n                var i1, i3;\n                var l = this.x.length;\n        \n                this.interpolate = function (x2) {\n                    if (!x2) return 0;\n        \n                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n                    i3 = binarySearch(this.x, x2);\n                    i1 = i3 - 1;\n        \n                    // We have our indexes i1 & i3, so we can calculate already:\n                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];\n                };\n        \n                var binarySearch = (function() {\n                    var maxIndex, minIndex, guess;\n                    return function(array, val) {\n                        minIndex = -1;\n                        maxIndex = array.length;\n                        while (maxIndex - minIndex > 1)\n                            if (array[guess = maxIndex + minIndex >> 1] <= val) {\n                                minIndex = guess;\n                            } else {\n                                maxIndex = guess;\n                            }\n                        return maxIndex;\n                    };\n                })();\n            },\n            //xxx: for now i will just save one spline function to to\n            getInterpolateFunction: function(c){\n                if(!s.controller.spline) s.controller.spline = s.params.loop ?\n                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :\n                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);\n            },\n            setTranslate: function (translate, byController) {\n               var controlled = s.params.control;\n               var multiplier, controlledTranslate;\n               function setControlledTranslate(c) {\n                    // this will create an Interpolate function based on the snapGrids\n                    // x is the Grid of the scrolled scroller and y will be the controlled scroller\n                    // it makes sense to create this only once and recall it for the interpolation\n                    // the function does a lot of value caching for performance\n                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;\n                    if (s.params.controlBy === 'slide') {\n                        s.controller.getInterpolateFunction(c);\n                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n                        // but it did not work out\n                        controlledTranslate = -s.controller.spline.interpolate(-translate);\n                    }\n        \n                    if(!controlledTranslate || s.params.controlBy === 'container'){\n                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());\n                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();\n                    }\n        \n                    if (s.params.controlInverse) {\n                        controlledTranslate = c.maxTranslate() - controlledTranslate;\n                    }\n                    c.updateProgress(controlledTranslate);\n                    c.setWrapperTranslate(controlledTranslate, false, s);\n                    c.updateActiveIndex();\n               }\n               if (s.isArray(controlled)) {\n                   for (var i = 0; i < controlled.length; i++) {\n                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                           setControlledTranslate(controlled[i]);\n                       }\n                   }\n               }\n               else if (controlled instanceof Swiper && byController !== controlled) {\n        \n                   setControlledTranslate(controlled);\n               }\n            },\n            setTransition: function (duration, byController) {\n                var controlled = s.params.control;\n                var i;\n                function setControlledTransition(c) {\n                    c.setWrapperTransition(duration, s);\n                    if (duration !== 0) {\n                        c.onTransitionStart();\n                        c.wrapper.transitionEnd(function(){\n                            if (!controlled) return;\n                            if (c.params.loop && s.params.controlBy === 'slide') {\n                                c.fixLoop();\n                            }\n                            c.onTransitionEnd();\n        \n                        });\n                    }\n                }\n                if (s.isArray(controlled)) {\n                    for (i = 0; i < controlled.length; i++) {\n                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                            setControlledTransition(controlled[i]);\n                        }\n                    }\n                }\n                else if (controlled instanceof Swiper && byController !== controlled) {\n                    setControlledTransition(controlled);\n                }\n            }\n        };\n\n        /*=========================\n          Hash Navigation\n          ===========================*/\n        s.hashnav = {\n            init: function () {\n                if (!s.params.hashnav) return;\n                s.hashnav.initialized = true;\n                var hash = document.location.hash.replace('#', '');\n                if (!hash) return;\n                var speed = 0;\n                for (var i = 0, length = s.slides.length; i < length; i++) {\n                    var slide = s.slides.eq(i);\n                    var slideHash = slide.attr('data-hash');\n                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {\n                        var index = slide.index();\n                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);\n                    }\n                }\n            },\n            setHash: function () {\n                if (!s.hashnav.initialized || !s.params.hashnav) return;\n                document.location.hash = s.slides.eq(s.activeIndex).attr('data-hash') || '';\n            }\n        };\n\n        /*=========================\n          Keyboard Control\n          ===========================*/\n        function handleKeyboard(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var kc = e.keyCode || e.charCode;\n            // Directions locks\n            if (!s.params.allowSwipeToNext && (isH() && kc === 39 || !isH() && kc === 40)) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && (isH() && kc === 37 || !isH() && kc === 38)) {\n                return false;\n            }\n            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n                return;\n            }\n            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n                return;\n            }\n            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n                var inView = false;\n                //Check that swiper should be inside of visible area of window\n                if (s.container.parents('.swiper-slide').length > 0 && s.container.parents('.swiper-slide-active').length === 0) {\n                    return;\n                }\n                var windowScroll = {\n                    left: window.pageXOffset,\n                    top: window.pageYOffset\n                };\n                var windowWidth = window.innerWidth;\n                var windowHeight = window.innerHeight;\n                var swiperOffset = s.container.offset();\n                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;\n                var swiperCoord = [\n                    [swiperOffset.left, swiperOffset.top],\n                    [swiperOffset.left + s.width, swiperOffset.top],\n                    [swiperOffset.left, swiperOffset.top + s.height],\n                    [swiperOffset.left + s.width, swiperOffset.top + s.height]\n                ];\n                for (var i = 0; i < swiperCoord.length; i++) {\n                    var point = swiperCoord[i];\n                    if (\n                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&\n                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight\n                    ) {\n                        inView = true;\n                    }\n        \n                }\n                if (!inView) return;\n            }\n            if (isH()) {\n                if (kc === 37 || kc === 39) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();\n                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();\n            }\n            else {\n                if (kc === 38 || kc === 40) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if (kc === 40) s.slideNext();\n                if (kc === 38) s.slidePrev();\n            }\n        }\n        s.disableKeyboardControl = function () {\n            s.params.keyboardControl = false;\n            $(document).off('keydown', handleKeyboard);\n        };\n        s.enableKeyboardControl = function () {\n            s.params.keyboardControl = true;\n            $(document).on('keydown', handleKeyboard);\n        };\n        \n\n        /*=========================\n          Mousewheel Control\n          ===========================*/\n        s.mousewheel = {\n            event: false,\n            lastScrollTime: (new window.Date()).getTime()\n        };\n        if (s.params.mousewheelControl) {\n            try {\n                new window.WheelEvent('wheel');\n                s.mousewheel.event = 'wheel';\n            } catch (e) {}\n        \n            if (!s.mousewheel.event && document.onmousewheel !== undefined) {\n                s.mousewheel.event = 'mousewheel';\n            }\n            if (!s.mousewheel.event) {\n                s.mousewheel.event = 'DOMMouseScroll';\n            }\n        }\n        function handleMousewheel(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var we = s.mousewheel.event;\n            var delta = 0;\n            var rtlFactor = s.rtl ? -1 : 1;\n            //Opera & IE\n            if (e.detail) delta = -e.detail;\n            //WebKits\n            else if (we === 'mousewheel') {\n                if (s.params.mousewheelForceToAxis) {\n                    if (isH()) {\n                        if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY)) delta = e.wheelDeltaX * rtlFactor;\n                        else return;\n                    }\n                    else {\n                        if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX)) delta = e.wheelDeltaY;\n                        else return;\n                    }\n                }\n                else {\n                    delta = Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY) ? - e.wheelDeltaX * rtlFactor : - e.wheelDeltaY;\n                }\n            }\n            //Old FireFox\n            else if (we === 'DOMMouseScroll') delta = -e.detail;\n            //New FireFox\n            else if (we === 'wheel') {\n                if (s.params.mousewheelForceToAxis) {\n                    if (isH()) {\n                        if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) delta = -e.deltaX * rtlFactor;\n                        else return;\n                    }\n                    else {\n                        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) delta = -e.deltaY;\n                        else return;\n                    }\n                }\n                else {\n                    delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? - e.deltaX * rtlFactor : - e.deltaY;\n                }\n            }\n            if (delta === 0) return;\n        \n            if (s.params.mousewheelInvert) delta = -delta;\n        \n            if (!s.params.freeMode) {\n                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {\n                    if (delta < 0) {\n                        if ((!s.isEnd || s.params.loop) && !s.animating) s.slideNext();\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                    else {\n                        if ((!s.isBeginning || s.params.loop) && !s.animating) s.slidePrev();\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                }\n                s.mousewheel.lastScrollTime = (new window.Date()).getTime();\n        \n            }\n            else {\n                //Freemode or scrollContainer:\n                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;\n                var wasBeginning = s.isBeginning,\n                    wasEnd = s.isEnd;\n        \n                if (position >= s.minTranslate()) position = s.minTranslate();\n                if (position <= s.maxTranslate()) position = s.maxTranslate();\n        \n                s.setWrapperTransition(0);\n                s.setWrapperTranslate(position);\n                s.updateProgress();\n                s.updateActiveIndex();\n        \n                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {\n                    s.updateClasses();\n                }\n        \n                if (s.params.freeModeSticky) {\n                    clearTimeout(s.mousewheel.timeout);\n                    s.mousewheel.timeout = setTimeout(function () {\n                        s.slideReset();\n                    }, 300);\n                }\n        \n                // Return page scroll on edge positions\n                if (position === 0 || position === s.maxTranslate()) return;\n            }\n            if (s.params.autoplay) s.stopAutoplay();\n        \n            if (e.preventDefault) e.preventDefault();\n            else e.returnValue = false;\n            return false;\n        }\n        s.disableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            s.container.off(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n        s.enableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            s.container.on(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n\n        /*=========================\n          Parallax\n          ===========================*/\n        function setParallaxTransform(el, progress) {\n            el = $(el);\n            var p, pX, pY;\n            var rtlFactor = s.rtl ? -1 : 1;\n        \n            p = el.attr('data-swiper-parallax') || '0';\n            pX = el.attr('data-swiper-parallax-x');\n            pY = el.attr('data-swiper-parallax-y');\n            if (pX || pY) {\n                pX = pX || '0';\n                pY = pY || '0';\n            }\n            else {\n                if (isH()) {\n                    pX = p;\n                    pY = '0';\n                }\n                else {\n                    pY = p;\n                    pX = '0';\n                }\n            }\n        \n            if ((pX).indexOf('%') >= 0) {\n                pX = parseInt(pX, 10) * progress * rtlFactor + '%';\n            }\n            else {\n                pX = pX * progress * rtlFactor + 'px' ;\n            }\n            if ((pY).indexOf('%') >= 0) {\n                pY = parseInt(pY, 10) * progress + '%';\n            }\n            else {\n                pY = pY * progress + 'px' ;\n            }\n        \n            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');\n        }\n        s.parallax = {\n            setTranslate: function () {\n                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    setParallaxTransform(this, s.progress);\n        \n                });\n                s.slides.each(function () {\n                    var slide = $(this);\n                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {\n                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);\n                        setParallaxTransform(this, progress);\n                    });\n                });\n            },\n            setTransition: function (duration) {\n                if (typeof duration === 'undefined') duration = s.params.speed;\n                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    var el = $(this);\n                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;\n                    if (duration === 0) parallaxDuration = 0;\n                    el.transition(parallaxDuration);\n                });\n            }\n        };\n        \n\n        /*=========================\n          Plugins API. Collect all and init all plugins\n          ===========================*/\n        s._plugins = [];\n        for (var plugin in s.plugins) {\n            var p = s.plugins[plugin](s, s.params[plugin]);\n            if (p) s._plugins.push(p);\n        }\n        // Method to call all plugins event/method\n        s.callPlugins = function (eventName) {\n            for (var i = 0; i < s._plugins.length; i++) {\n                if (eventName in s._plugins[i]) {\n                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n        };\n\n        /*=========================\n          Events/Callbacks/Plugins Emitter\n          ===========================*/\n        function normalizeEventName (eventName) {\n            if (eventName.indexOf('on') !== 0) {\n                if (eventName[0] !== eventName[0].toUpperCase()) {\n                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);\n                }\n                else {\n                    eventName = 'on' + eventName;\n                }\n            }\n            return eventName;\n        }\n        s.emitterEventListeners = {\n        \n        };\n        s.emit = function (eventName) {\n            // Trigger callbacks\n            if (s.params[eventName]) {\n                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n            }\n            var i;\n            // Trigger events\n            if (s.emitterEventListeners[eventName]) {\n                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n            // Trigger plugins\n            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        };\n        s.on = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];\n            s.emitterEventListeners[eventName].push(handler);\n            return s;\n        };\n        s.off = function (eventName, handler) {\n            var i;\n            eventName = normalizeEventName(eventName);\n            if (typeof handler === 'undefined') {\n                // Remove all handlers for such event\n                s.emitterEventListeners[eventName] = [];\n                return s;\n            }\n            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;\n            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);\n            }\n            return s;\n        };\n        s.once = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            var _handler = function () {\n                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n                s.off(eventName, _handler);\n            };\n            s.on(eventName, _handler);\n            return s;\n        };\n\n        // Accessibility tools\n        s.a11y = {\n            makeFocusable: function ($el) {\n                $el.attr('tabIndex', '0');\n                return $el;\n            },\n            addRole: function ($el, role) {\n                $el.attr('role', role);\n                return $el;\n            },\n        \n            addLabel: function ($el, label) {\n                $el.attr('aria-label', label);\n                return $el;\n            },\n        \n            disable: function ($el) {\n                $el.attr('aria-disabled', true);\n                return $el;\n            },\n        \n            enable: function ($el) {\n                $el.attr('aria-disabled', false);\n                return $el;\n            },\n        \n            onEnterKey: function (event) {\n                if (event.keyCode !== 13) return;\n                if ($(event.target).is(s.params.nextButton)) {\n                    s.onClickNext(event);\n                    if (s.isEnd) {\n                        s.a11y.notify(s.params.lastSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.nextSlideMessage);\n                    }\n                }\n                else if ($(event.target).is(s.params.prevButton)) {\n                    s.onClickPrev(event);\n                    if (s.isBeginning) {\n                        s.a11y.notify(s.params.firstSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.prevSlideMessage);\n                    }\n                }\n                if ($(event.target).is('.' + s.params.bulletClass)) {\n                    $(event.target)[0].click();\n                }\n            },\n        \n            liveRegion: $('<span class=\"swiper-notification\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n        \n            notify: function (message) {\n                var notification = s.a11y.liveRegion;\n                if (notification.length === 0) return;\n                notification.html('');\n                notification.html(message);\n            },\n            init: function () {\n                // Setup accessibility\n                if (s.params.nextButton) {\n                    var nextButton = $(s.params.nextButton);\n                    s.a11y.makeFocusable(nextButton);\n                    s.a11y.addRole(nextButton, 'button');\n                    s.a11y.addLabel(nextButton, s.params.nextSlideMessage);\n                }\n                if (s.params.prevButton) {\n                    var prevButton = $(s.params.prevButton);\n                    s.a11y.makeFocusable(prevButton);\n                    s.a11y.addRole(prevButton, 'button');\n                    s.a11y.addLabel(prevButton, s.params.prevSlideMessage);\n                }\n        \n                $(s.container).append(s.a11y.liveRegion);\n            },\n            initPagination: function () {\n                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {\n                    s.bullets.each(function () {\n                        var bullet = $(this);\n                        s.a11y.makeFocusable(bullet);\n                        s.a11y.addRole(bullet, 'button');\n                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));\n                    });\n                }\n            },\n            destroy: function () {\n                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();\n            }\n        };\n        \n\n        /*=========================\n          Init/Destroy\n          ===========================*/\n        s.init = function () {\n            if (s.params.loop) s.createLoop();\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.enableDraggable();\n                }\n            }\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                if (!s.params.loop) s.updateProgress();\n                s.effects[s.params.effect].setTranslate();\n            }\n            if (s.params.loop) {\n                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);\n            }\n            else {\n                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);\n                if (s.params.initialSlide === 0) {\n                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();\n                    if (s.lazy && s.params.lazyLoading) {\n                        s.lazy.load();\n                        s.lazy.initialImageLoaded = true;\n                    }\n                }\n            }\n            s.attachEvents();\n            if (s.params.observer && s.support.observer) {\n                s.initObservers();\n            }\n            if (s.params.preloadImages && !s.params.lazyLoading) {\n                s.preloadImages();\n            }\n            if (s.params.autoplay) {\n                s.startAutoplay();\n            }\n            if (s.params.keyboardControl) {\n                if (s.enableKeyboardControl) s.enableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.enableMousewheelControl) s.enableMousewheelControl();\n            }\n            if (s.params.hashnav) {\n                if (s.hashnav) s.hashnav.init();\n            }\n            if (s.params.a11y && s.a11y) s.a11y.init();\n            s.emit('onInit', s);\n        };\n        \n        // Cleanup dynamic styles\n        s.cleanupStyles = function () {\n            // Container\n            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');\n        \n            // Wrapper\n            s.wrapper.removeAttr('style');\n        \n            // Slides\n            if (s.slides && s.slides.length) {\n                s.slides\n                    .removeClass([\n                      s.params.slideVisibleClass,\n                      s.params.slideActiveClass,\n                      s.params.slideNextClass,\n                      s.params.slidePrevClass\n                    ].join(' '))\n                    .removeAttr('style')\n                    .removeAttr('data-swiper-column')\n                    .removeAttr('data-swiper-row');\n            }\n        \n            // Pagination/Bullets\n            if (s.paginationContainer && s.paginationContainer.length) {\n                s.paginationContainer.removeClass(s.params.paginationHiddenClass);\n            }\n            if (s.bullets && s.bullets.length) {\n                s.bullets.removeClass(s.params.bulletActiveClass);\n            }\n        \n            // Buttons\n            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n        \n            // Scrollbar\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');\n                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');\n            }\n        };\n        \n        // Destroy\n        s.destroy = function (deleteInstance, cleanupStyles) {\n            // Detach evebts\n            s.detachEvents();\n            // Stop autoplay\n            s.stopAutoplay();\n            // Disable draggable\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.disableDraggable();\n                }\n            }\n            // Destroy loop\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            // Cleanup styles\n            if (cleanupStyles) {\n                s.cleanupStyles();\n            }\n            // Disconnect observer\n            s.disconnectObservers();\n            // Disable keyboard/mousewheel\n            if (s.params.keyboardControl) {\n                if (s.disableKeyboardControl) s.disableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.disableMousewheelControl) s.disableMousewheelControl();\n            }\n            // Disable a11y\n            if (s.params.a11y && s.a11y) s.a11y.destroy();\n            // Destroy callback\n            s.emit('onDestroy');\n            // Delete instance\n            if (deleteInstance !== false) s = null;\n        };\n        \n        s.init();\n        \n\n    \n        // Return swiper instance\n        return s;\n    };\n    \n\n    /*==================================================\n        Prototype\n    ====================================================*/\n    Swiper.prototype = {\n        isSafari: (function () {\n            var ua = navigator.userAgent.toLowerCase();\n            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n        })(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),\n        isArray: function (arr) {\n            return Object.prototype.toString.apply(arr) === '[object Array]';\n        },\n        /*==================================================\n        Browser\n        ====================================================*/\n        browser: {\n            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1)\n        },\n        /*==================================================\n        Devices\n        ====================================================*/\n        device: (function () {\n            var ua = navigator.userAgent;\n            var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n            var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n            var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n            var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n            return {\n                ios: ipad || iphone || ipod,\n                android: android\n            };\n        })(),\n        /*==================================================\n        Feature Detection\n        ====================================================*/\n        support: {\n            touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n            })(),\n    \n            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n                var div = document.createElement('div').style;\n                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n            })(),\n    \n            flexbox: (function () {\n                var div = document.createElement('div').style;\n                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n                for (var i = 0; i < styles.length; i++) {\n                    if (styles[i] in div) return true;\n                }\n            })(),\n    \n            observer: (function () {\n                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n            })()\n        },\n        /*==================================================\n        Plugins\n        ====================================================*/\n        plugins: {}\n    };\n    \n\n    /*===========================\n    Dom7 Library\n    ===========================*/\n    var Dom7 = (function () {\n        var Dom7 = function (arr) {\n            var _this = this, i = 0;\n            // Create array-like object\n            for (i = 0; i < arr.length; i++) {\n                _this[i] = arr[i];\n            }\n            _this.length = arr.length;\n            // Return collection with methods\n            return this;\n        };\n        var $ = function (selector, context) {\n            var arr = [], i = 0;\n            if (selector && !context) {\n                if (selector instanceof Dom7) {\n                    return selector;\n                }\n            }\n            if (selector) {\n                // String\n                if (typeof selector === 'string') {\n                    var els, tempParent, html = selector.trim();\n                    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n                        var toCreate = 'div';\n                        if (html.indexOf('<li') === 0) toCreate = 'ul';\n                        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n                        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n                        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n                        if (html.indexOf('<option') === 0) toCreate = 'select';\n                        tempParent = document.createElement(toCreate);\n                        tempParent.innerHTML = selector;\n                        for (i = 0; i < tempParent.childNodes.length; i++) {\n                            arr.push(tempParent.childNodes[i]);\n                        }\n                    }\n                    else {\n                        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n                            // Pure ID selector\n                            els = [document.getElementById(selector.split('#')[1])];\n                        }\n                        else {\n                            // Other selectors\n                            els = (context || document).querySelectorAll(selector);\n                        }\n                        for (i = 0; i < els.length; i++) {\n                            if (els[i]) arr.push(els[i]);\n                        }\n                    }\n                }\n                // Node/element\n                else if (selector.nodeType || selector === window || selector === document) {\n                    arr.push(selector);\n                }\n                //Array of elements or instance of Dom\n                else if (selector.length > 0 && selector[0].nodeType) {\n                    for (i = 0; i < selector.length; i++) {\n                        arr.push(selector[i]);\n                    }\n                }\n            }\n            return new Dom7(arr);\n        };\n        Dom7.prototype = {\n            // Classes and attriutes\n            addClass: function (className) {\n                if (typeof className === 'undefined') {\n                    return this;\n                }\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.add(classes[i]);\n                    }\n                }\n                return this;\n            },\n            removeClass: function (className) {\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.remove(classes[i]);\n                    }\n                }\n                return this;\n            },\n            hasClass: function (className) {\n                if (!this[0]) return false;\n                else return this[0].classList.contains(className);\n            },\n            toggleClass: function (className) {\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.toggle(classes[i]);\n                    }\n                }\n                return this;\n            },\n            attr: function (attrs, value) {\n                if (arguments.length === 1 && typeof attrs === 'string') {\n                    // Get attr\n                    if (this[0]) return this[0].getAttribute(attrs);\n                    else return undefined;\n                }\n                else {\n                    // Set attrs\n                    for (var i = 0; i < this.length; i++) {\n                        if (arguments.length === 2) {\n                            // String\n                            this[i].setAttribute(attrs, value);\n                        }\n                        else {\n                            // Object\n                            for (var attrName in attrs) {\n                                this[i][attrName] = attrs[attrName];\n                                this[i].setAttribute(attrName, attrs[attrName]);\n                            }\n                        }\n                    }\n                    return this;\n                }\n            },\n            removeAttr: function (attr) {\n                for (var i = 0; i < this.length; i++) {\n                    this[i].removeAttribute(attr);\n                }\n                return this;\n            },\n            data: function (key, value) {\n                if (typeof value === 'undefined') {\n                    // Get value\n                    if (this[0]) {\n                        var dataKey = this[0].getAttribute('data-' + key);\n                        if (dataKey) return dataKey;\n                        else if (this[0].dom7ElementDataStorage && (key in this[0].dom7ElementDataStorage)) return this[0].dom7ElementDataStorage[key];\n                        else return undefined;\n                    }\n                    else return undefined;\n                }\n                else {\n                    // Set value\n                    for (var i = 0; i < this.length; i++) {\n                        var el = this[i];\n                        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n                        el.dom7ElementDataStorage[key] = value;\n                    }\n                    return this;\n                }\n            },\n            // Transforms\n            transform : function (transform) {\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n                }\n                return this;\n            },\n            transition: function (duration) {\n                if (typeof duration !== 'string') {\n                    duration = duration + 'ms';\n                }\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n                }\n                return this;\n            },\n            //Events\n            on: function (eventName, targetSelector, listener, capture) {\n                function handleLiveEvent(e) {\n                    var target = e.target;\n                    if ($(target).is(targetSelector)) listener.call(target, e);\n                    else {\n                        var parents = $(target).parents();\n                        for (var k = 0; k < parents.length; k++) {\n                            if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e);\n                        }\n                    }\n                }\n                var events = eventName.split(' ');\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof targetSelector === 'function' || targetSelector === false) {\n                        // Usual events\n                        if (typeof targetSelector === 'function') {\n                            listener = arguments[1];\n                            capture = arguments[2] || false;\n                        }\n                        for (j = 0; j < events.length; j++) {\n                            this[i].addEventListener(events[j], listener, capture);\n                        }\n                    }\n                    else {\n                        //Live events\n                        for (j = 0; j < events.length; j++) {\n                            if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];\n                            this[i].dom7LiveListeners.push({listener: listener, liveListener: handleLiveEvent});\n                            this[i].addEventListener(events[j], handleLiveEvent, capture);\n                        }\n                    }\n                }\n    \n                return this;\n            },\n            off: function (eventName, targetSelector, listener, capture) {\n                var events = eventName.split(' ');\n                for (var i = 0; i < events.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        if (typeof targetSelector === 'function' || targetSelector === false) {\n                            // Usual events\n                            if (typeof targetSelector === 'function') {\n                                listener = arguments[1];\n                                capture = arguments[2] || false;\n                            }\n                            this[j].removeEventListener(events[i], listener, capture);\n                        }\n                        else {\n                            // Live event\n                            if (this[j].dom7LiveListeners) {\n                                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {\n                                    if (this[j].dom7LiveListeners[k].listener === listener) {\n                                        this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                return this;\n            },\n            once: function (eventName, targetSelector, listener, capture) {\n                var dom = this;\n                if (typeof targetSelector === 'function') {\n                    targetSelector = false;\n                    listener = arguments[1];\n                    capture = arguments[2];\n                }\n                function proxy(e) {\n                    listener(e);\n                    dom.off(eventName, targetSelector, proxy, capture);\n                }\n                dom.on(eventName, targetSelector, proxy, capture);\n            },\n            trigger: function (eventName, eventData) {\n                for (var i = 0; i < this.length; i++) {\n                    var evt;\n                    try {\n                        evt = new window.CustomEvent(eventName, {detail: eventData, bubbles: true, cancelable: true});\n                    }\n                    catch (e) {\n                        evt = document.createEvent('Event');\n                        evt.initEvent(eventName, true, true);\n                        evt.detail = eventData;\n                    }\n                    this[i].dispatchEvent(evt);\n                }\n                return this;\n            },\n            transitionEnd: function (callback) {\n                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n                    i, j, dom = this;\n                function fireCallBack(e) {\n                    /*jshint validthis:true */\n                    if (e.target !== this) return;\n                    callback.call(this, e);\n                    for (i = 0; i < events.length; i++) {\n                        dom.off(events[i], fireCallBack);\n                    }\n                }\n                if (callback) {\n                    for (i = 0; i < events.length; i++) {\n                        dom.on(events[i], fireCallBack);\n                    }\n                }\n                return this;\n            },\n            // Sizing/Styles\n            width: function () {\n                if (this[0] === window) {\n                    return window.innerWidth;\n                }\n                else {\n                    if (this.length > 0) {\n                        return parseFloat(this.css('width'));\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            outerWidth: function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n                    else\n                        return this[0].offsetWidth;\n                }\n                else return null;\n            },\n            height: function () {\n                if (this[0] === window) {\n                    return window.innerHeight;\n                }\n                else {\n                    if (this.length > 0) {\n                        return parseFloat(this.css('height'));\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            outerHeight: function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));\n                    else\n                        return this[0].offsetHeight;\n                }\n                else return null;\n            },\n            offset: function () {\n                if (this.length > 0) {\n                    var el = this[0];\n                    var box = el.getBoundingClientRect();\n                    var body = document.body;\n                    var clientTop  = el.clientTop  || body.clientTop  || 0;\n                    var clientLeft = el.clientLeft || body.clientLeft || 0;\n                    var scrollTop  = window.pageYOffset || el.scrollTop;\n                    var scrollLeft = window.pageXOffset || el.scrollLeft;\n                    return {\n                        top: box.top  + scrollTop  - clientTop,\n                        left: box.left + scrollLeft - clientLeft\n                    };\n                }\n                else {\n                    return null;\n                }\n            },\n            css: function (props, value) {\n                var i;\n                if (arguments.length === 1) {\n                    if (typeof props === 'string') {\n                        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n                    }\n                    else {\n                        for (i = 0; i < this.length; i++) {\n                            for (var prop in props) {\n                                this[i].style[prop] = props[prop];\n                            }\n                        }\n                        return this;\n                    }\n                }\n                if (arguments.length === 2 && typeof props === 'string') {\n                    for (i = 0; i < this.length; i++) {\n                        this[i].style[props] = value;\n                    }\n                    return this;\n                }\n                return this;\n            },\n    \n            //Dom manipulation\n            each: function (callback) {\n                for (var i = 0; i < this.length; i++) {\n                    callback.call(this[i], i, this[i]);\n                }\n                return this;\n            },\n            html: function (html) {\n                if (typeof html === 'undefined') {\n                    return this[0] ? this[0].innerHTML : undefined;\n                }\n                else {\n                    for (var i = 0; i < this.length; i++) {\n                        this[i].innerHTML = html;\n                    }\n                    return this;\n                }\n            },\n            is: function (selector) {\n                if (!this[0]) return false;\n                var compareWith, i;\n                if (typeof selector === 'string') {\n                    var el = this[0];\n                    if (el === document) return selector === document;\n                    if (el === window) return selector === window;\n    \n                    if (el.matches) return el.matches(selector);\n                    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n                    else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);\n                    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n                    else {\n                        compareWith = $(selector);\n                        for (i = 0; i < compareWith.length; i++) {\n                            if (compareWith[i] === this[0]) return true;\n                        }\n                        return false;\n                    }\n                }\n                else if (selector === document) return this[0] === document;\n                else if (selector === window) return this[0] === window;\n                else {\n                    if (selector.nodeType || selector instanceof Dom7) {\n                        compareWith = selector.nodeType ? [selector] : selector;\n                        for (i = 0; i < compareWith.length; i++) {\n                            if (compareWith[i] === this[0]) return true;\n                        }\n                        return false;\n                    }\n                    return false;\n                }\n    \n            },\n            index: function () {\n                if (this[0]) {\n                    var child = this[0];\n                    var i = 0;\n                    while ((child = child.previousSibling) !== null) {\n                        if (child.nodeType === 1) i++;\n                    }\n                    return i;\n                }\n                else return undefined;\n            },\n            eq: function (index) {\n                if (typeof index === 'undefined') return this;\n                var length = this.length;\n                var returnIndex;\n                if (index > length - 1) {\n                    return new Dom7([]);\n                }\n                if (index < 0) {\n                    returnIndex = length + index;\n                    if (returnIndex < 0) return new Dom7([]);\n                    else return new Dom7([this[returnIndex]]);\n                }\n                return new Dom7([this[index]]);\n            },\n            append: function (newChild) {\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof newChild === 'string') {\n                        var tempDiv = document.createElement('div');\n                        tempDiv.innerHTML = newChild;\n                        while (tempDiv.firstChild) {\n                            this[i].appendChild(tempDiv.firstChild);\n                        }\n                    }\n                    else if (newChild instanceof Dom7) {\n                        for (j = 0; j < newChild.length; j++) {\n                            this[i].appendChild(newChild[j]);\n                        }\n                    }\n                    else {\n                        this[i].appendChild(newChild);\n                    }\n                }\n                return this;\n            },\n            prepend: function (newChild) {\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof newChild === 'string') {\n                        var tempDiv = document.createElement('div');\n                        tempDiv.innerHTML = newChild;\n                        for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {\n                            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n                        }\n                        // this[i].insertAdjacentHTML('afterbegin', newChild);\n                    }\n                    else if (newChild instanceof Dom7) {\n                        for (j = 0; j < newChild.length; j++) {\n                            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n                        }\n                    }\n                    else {\n                        this[i].insertBefore(newChild, this[i].childNodes[0]);\n                    }\n                }\n                return this;\n            },\n            insertBefore: function (selector) {\n                var before = $(selector);\n                for (var i = 0; i < this.length; i++) {\n                    if (before.length === 1) {\n                        before[0].parentNode.insertBefore(this[i], before[0]);\n                    }\n                    else if (before.length > 1) {\n                        for (var j = 0; j < before.length; j++) {\n                            before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n                        }\n                    }\n                }\n            },\n            insertAfter: function (selector) {\n                var after = $(selector);\n                for (var i = 0; i < this.length; i++) {\n                    if (after.length === 1) {\n                        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n                    }\n                    else if (after.length > 1) {\n                        for (var j = 0; j < after.length; j++) {\n                            after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n                        }\n                    }\n                }\n            },\n            next: function (selector) {\n                if (this.length > 0) {\n                    if (selector) {\n                        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);\n                        else return new Dom7([]);\n                    }\n                    else {\n                        if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n                        else return new Dom7([]);\n                    }\n                }\n                else return new Dom7([]);\n            },\n            nextAll: function (selector) {\n                var nextEls = [];\n                var el = this[0];\n                if (!el) return new Dom7([]);\n                while (el.nextElementSibling) {\n                    var next = el.nextElementSibling;\n                    if (selector) {\n                        if($(next).is(selector)) nextEls.push(next);\n                    }\n                    else nextEls.push(next);\n                    el = next;\n                }\n                return new Dom7(nextEls);\n            },\n            prev: function (selector) {\n                if (this.length > 0) {\n                    if (selector) {\n                        if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);\n                        else return new Dom7([]);\n                    }\n                    else {\n                        if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);\n                        else return new Dom7([]);\n                    }\n                }\n                else return new Dom7([]);\n            },\n            prevAll: function (selector) {\n                var prevEls = [];\n                var el = this[0];\n                if (!el) return new Dom7([]);\n                while (el.previousElementSibling) {\n                    var prev = el.previousElementSibling;\n                    if (selector) {\n                        if($(prev).is(selector)) prevEls.push(prev);\n                    }\n                    else prevEls.push(prev);\n                    el = prev;\n                }\n                return new Dom7(prevEls);\n            },\n            parent: function (selector) {\n                var parents = [];\n                for (var i = 0; i < this.length; i++) {\n                    if (selector) {\n                        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n                    }\n                    else {\n                        parents.push(this[i].parentNode);\n                    }\n                }\n                return $($.unique(parents));\n            },\n            parents: function (selector) {\n                var parents = [];\n                for (var i = 0; i < this.length; i++) {\n                    var parent = this[i].parentNode;\n                    while (parent) {\n                        if (selector) {\n                            if ($(parent).is(selector)) parents.push(parent);\n                        }\n                        else {\n                            parents.push(parent);\n                        }\n                        parent = parent.parentNode;\n                    }\n                }\n                return $($.unique(parents));\n            },\n            find : function (selector) {\n                var foundElements = [];\n                for (var i = 0; i < this.length; i++) {\n                    var found = this[i].querySelectorAll(selector);\n                    for (var j = 0; j < found.length; j++) {\n                        foundElements.push(found[j]);\n                    }\n                }\n                return new Dom7(foundElements);\n            },\n            children: function (selector) {\n                var children = [];\n                for (var i = 0; i < this.length; i++) {\n                    var childNodes = this[i].childNodes;\n    \n                    for (var j = 0; j < childNodes.length; j++) {\n                        if (!selector) {\n                            if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n                        }\n                        else {\n                            if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j]);\n                        }\n                    }\n                }\n                return new Dom7($.unique(children));\n            },\n            remove: function () {\n                for (var i = 0; i < this.length; i++) {\n                    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n                }\n                return this;\n            },\n            add: function () {\n                var dom = this;\n                var i, j;\n                for (i = 0; i < arguments.length; i++) {\n                    var toAdd = $(arguments[i]);\n                    for (j = 0; j < toAdd.length; j++) {\n                        dom[dom.length] = toAdd[j];\n                        dom.length++;\n                    }\n                }\n                return dom;\n            }\n        };\n        $.fn = Dom7.prototype;\n        $.unique = function (arr) {\n            var unique = [];\n            for (var i = 0; i < arr.length; i++) {\n                if (unique.indexOf(arr[i]) === -1) unique.push(arr[i]);\n            }\n            return unique;\n        };\n    \n        return $;\n    })();\n    \n\n    /*===========================\n     Get Dom libraries\n     ===========================*/\n    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];\n    for (var i = 0; i < swiperDomPlugins.length; i++) {\n    \tif (window[swiperDomPlugins[i]]) {\n    \t\taddLibraryPlugin(window[swiperDomPlugins[i]]);\n    \t}\n    }\n    // Required DOM Plugins\n    var domLib;\n    if (typeof Dom7 === 'undefined') {\n    \tdomLib = window.Dom7 || window.Zepto || window.jQuery;\n    }\n    else {\n    \tdomLib = Dom7;\n    }\n\n    /*===========================\n    Add .swiper plugin from Dom libraries\n    ===========================*/\n    function addLibraryPlugin(lib) {\n        lib.fn.swiper = function (params) {\n            var firstInstance;\n            lib(this).each(function () {\n                var s = new Swiper(this, params);\n                if (!firstInstance) firstInstance = s;\n            });\n            return firstInstance;\n        };\n    }\n    \n    if (domLib) {\n        if (!('transitionEnd' in domLib.fn)) {\n            domLib.fn.transitionEnd = function (callback) {\n                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n                    i, j, dom = this;\n                function fireCallBack(e) {\n                    /*jshint validthis:true */\n                    if (e.target !== this) return;\n                    callback.call(this, e);\n                    for (i = 0; i < events.length; i++) {\n                        dom.off(events[i], fireCallBack);\n                    }\n                }\n                if (callback) {\n                    for (i = 0; i < events.length; i++) {\n                        dom.on(events[i], fireCallBack);\n                    }\n                }\n                return this;\n            };\n        }\n        if (!('transform' in domLib.fn)) {\n            domLib.fn.transform = function (transform) {\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n                }\n                return this;\n            };\n        }\n        if (!('transition' in domLib.fn)) {\n            domLib.fn.transition = function (duration) {\n                if (typeof duration !== 'string') {\n                    duration = duration + 'ms';\n                }\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n                }\n                return this;\n            };\n        }\n    }\n\n    window.Swiper = Swiper;\n})();\n/*===========================\nSwiper AMD Export\n===========================*/\nif (typeof(module) !== 'undefined')\n{\n    module.exports = window.Swiper;\n}\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n        'use strict';\n        return window.Swiper;\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Swiper/dist/js/swiper.js\n ** module id = 3\n ** module chunks = 1 2 3\n **/"],"sourceRoot":""}