{"version":3,"sources":["webpack:///account.js","webpack:///./www/static/src/js/account.js","webpack:///./~/vue/dist/vue.common.js?e881*","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?6f0e*","webpack:///./~/Swiper/dist/js/swiper.js?520d*"],"names":["webpackJsonp","module","exports","__webpack_require__","_pageFn","data","$","post","res","arr","i","totalPages","push","account","$set","currentPage","eq","addClass","siblings","removeClass","count","Vue","Swiper","el","accountList","pageList","userDetail","keyword","pageNo","pageCount","detailConfig","active","right","opacity","methods","detailAction","e","_this","currentTarget","user_id","username","textStatus","xhr","closeDetail","searchSub","page","alert","pageFn","parseInt","text","hasClass","closeSearch","prev","next","ready","scrollbar","direction","slidesPerView","mousewheelControl","freeMode","observer","watch","n","o","global","process","set","obj","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","call","isLiteral","exp","literalValueRE","test","isReserved","str","c","charCodeAt","_toString","value","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","start","ret","Array","extend","to","from","keys","Object","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","this","indexOf","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","selector","document","querySelector","env","NODE_ENV","warn","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","classList","add","cur","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","guardArrayAssets","guardComponents","components","ids","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","_maxUpdateCount","pushWatcher","user","splice","q","nextTick","Watcher","expOrFn","isFn","uid$2","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","Math","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","kebab","setObjectClasses","toggleClasses","stringToObject","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","forEach","m","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","$broadcast","source","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","textNode","characterData","setImmediate","p","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","msg","error","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","Error","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","cleanUpNextTick","draining","currentQueue","drainQueue","len","clearTimeout","Item","fun","array","title","browser","argv","versions","addListener","once","removeListener","removeAllListeners","binding","cwd","chdir","umask","addLibraryPlugin","lib","swiper","firstInstance","each","isH","round","autoplay","autoplayTimeoutId","loop","fixLoop","_slideNext","isEnd","autoplayStopOnLast","stopAutoplay","_slideTo","findElementInEvent","parents","found","_el","initObserver","ObserverFunc","WebkitMutationObserver","mutations","mutation","onResize","childList","observers","handleKeyboard","originalEvent","kc","allowSwipeToNext","allowSwipeToPrev","shiftKey","altKey","ctrlKey","metaKey","activeElement","nodeName","inView","windowScroll","pageXOffset","top","pageYOffset","windowWidth","innerWidth","windowHeight","innerHeight","swiperOffset","rtl","scrollLeft","swiperCoord","point","returnValue","slideNext","slidePrev","handleMousewheel","we","mousewheel","delta","rtlFactor","detail","mousewheelForceToAxis","wheelDeltaX","wheelDeltaY","deltaX","deltaY","mousewheelInvert","position","getWrapperTranslate","mousewheelSensitivity","wasBeginning","isBeginning","wasEnd","minTranslate","maxTranslate","setWrapperTransition","setWrapperTranslate","updateProgress","updateActiveIndex","updateClasses","freeModeSticky","slideReset","getTime","lastScrollTime","animating","mousewheelReleaseOnEdges","setParallaxTransform","progress","pX","pY","r","transform","normalizeEventName","eventName","substring","defaults","touchEventsTarget","initialSlide","speed","autoplayDisableOnInteraction","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMinimumVelocity","autoHeight","setWrapperSize","virtualTranslate","effect","coverflow","rotate","stretch","modifier","slideShadows","cube","shadow","shadowOffset","shadowScale","fade","crossFade","parallax","scrollbarHide","scrollbarDraggable","scrollbarSnapOnRelease","keyboardControl","hashnav","breakpoints","spaceBetween","slidesPerColumn","slidesPerColumnFill","slidesPerGroup","centeredSlides","slidesOffsetBefore","slidesOffsetAfter","roundLengths","touchRatio","touchAngle","simulateTouch","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","onlyExternal","threshold","touchMoveStopPropagation","pagination","paginationElement","paginationClickable","paginationHide","paginationBulletRender","resistance","resistanceRatio","nextButton","prevButton","watchSlidesProgress","watchSlidesVisibility","grabCursor","preventClicks","preventClicksPropagation","slideToClickedSlide","lazyLoading","lazyLoadingInPrevNext","lazyLoadingOnTransitionStart","preloadImages","updateOnImagesReady","loopAdditionalSlides","loopedSlides","control","controlInverse","controlBy","swipeHandler","noSwiping","noSwipingClass","slideClass","slideActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slidePrevClass","wrapperClass","bulletClass","bulletActiveClass","buttonDisabledClass","paginationHiddenClass","observeParents","a11y","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","runCallbacksOnInit","initialVirtualTranslate","originalParams","param","Dom7","deepParam","deepDef","classNames","Zepto","currentBreakpoint","getActiveBreakpoint","breakpoint","points","setBreakpoint","breakPointsParams","support","flexbox","transforms3d","touch","wrapper","paginationContainer","wrongRTL","device","android","translate","velocity","lockSwipeToNext","lockSwipeToPrev","lockSwipes","unlockSwipeToNext","unlockSwipeToPrev","unlockSwipes","cursor","imagesToLoad","imagesLoaded","loadImage","imgElement","srcset","checkForComplete","callback","onReady","complete","Image","onload","onerror","_onReady","find","currentSrc","autoplaying","autoplayPaused","startAutoplay","internal","pauseAutoplay","transitionEnd","snapGrid","updateAutoHeight","newHeight","slides","activeIndex","updateContainerSize","clientWidth","clientHeight","updateSlidesSize","slidesGrid","slidesSizesGrid","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","ceil","max","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","margin-top","outerWidth","outerHeight","swiperSlideSize","newSlidesGrid","updateSlidesOffset","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","slideProgress","slideBefore","slideAfter","isVisible","translatesDiff","newActiveIndex","snapIndex","previousIndex","activeSlide","bullets","bulletIndex","disable","enable","updatePagination","bulletsHTML","numberOfBullets","initPagination","updateTranslate","forceSetTranslate","newTranslate","min","translated","controller","spline","slideTo","forceUpdatePagination","desktopEvents","pointerEnabled","msPointerEnabled","touchEvents","initEvents","actionDom","moveCapture","nested","ie","onTouchStart","onTouchMove","onTouchEnd","ios","onClickNext","onEnterKey","onClickPrev","onClickIndex","attachEvents","detachEvents","allowClick","stopImmediatePropagation","updateClickedSlide","slideFound","clickedSlide","clickedIndex","realIndex","slideToIndex","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","clickTimeout","allowMomentumBounce","formElements","lastClickTime","velocities","touches","startX","startY","currentX","currentY","isTouchEvent","startMoving","which","targetTouches","pageX","pageY","swipeDirection","blur","preventedByNestedSwiper","atan2","PI","ieTouch","trigger","disableParentSwiper","pow","time","touchEndTime","timeDiff","toggleClass","currentPos","lastMoveEvent","pop","velocityEvent","distance","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","nextSlide","onTransitionStart","onTransitionEnd","stopIndex","groupSize","ratio","slideIndex","runCallbacks","setHash","clientLeft","_slidePrev","duration","byController","effects","setTransition","x","y","z","setTranslate","getTranslate","axis","matrix","curTransform","curStyle","transformMatrix","WebKitCSSMatrix","webkitTransform","MozTransform","OTransform","MsTransform","msTransform","getPropertyValue","m41","m42","initObservers","containerParents","disconnectObservers","disconnect","createLoop","prependSlides","appendSlides","destroyLoop","removeAttr","newIndex","appendSlide","prependSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","tx","ty","slideOpacity","eventTriggered","triggerEvents","cubeShadow","wrapperRotate","slideAngle","tz","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowAngle","multiplier","sin","cos","scale1","scale2","zFactor","isSafari","isUiWebView","center","slideOffset","offsetMultiplier","rotateY","rotateX","translateZ","translateY","translateX","slideTransform","zIndex","perspectiveOrigin","initialImageLoaded","loadImageInSlide","loadInDuplicate","img","_img","background","slideOriginalIndex","originalSlide","duplicatedSlide","load","prevSlide","setDragPosition","sb","pointerPosition","clientX","clientY","track","dragSize","positionMin","moveDivider","positionMax","dragStart","dragTimeout","drag","dragMove","dragEnd","enableDraggable","disableDraggable","trackSize","divider","newPos","newSize","LinearSpline","i1","i3","interpolate","x2","binarySearch","maxIndex","minIndex","guess","getInterpolateFunction","setControlledTranslate","controlledTranslate","controlled","setControlledTransition","initialized","location","slideHash","disableKeyboardControl","enableKeyboardControl","WheelEvent","onmousewheel","disableMousewheelControl","enableMousewheelControl","parallaxDuration","_plugins","plugins","callPlugins","emitterEventListeners","_handler","makeFocusable","addRole","role","addLabel","label","click","liveRegion","message","notification","bullet","cleanupStyles","deleteInstance","ua","msMaxTouchPoints","maxTouchPoints","ipad","ipod","iphone","Modernizr","DocumentTouch","csstransforms3d","div","styles","els","tempParent","toCreate","classes","attrName","dom7ElementDataStorage","dataKey","elStyle","webkitTransitionDuration","MsTransitionDuration","msTransitionDuration","MozTransitionDuration","OTransitionDuration","transitionDuration","targetSelector","handleLiveEvent","dom7LiveListeners","liveListener","proxy","dom","eventData","evt","CustomEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","fireCallBack","includeMargins","box","clientTop","scrollTop","compareWith","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","returnIndex","newChild","tempDiv","insertAfter","nextAll","nextEls","prevAll","prevEls","unique","foundElements","toAdd","swiperDomPlugins","domLib"],"mappings":"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","file":"account.js","sourcesContent":["webpackJsonp([3],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Vue = __webpack_require__(1);\n\tvar $ = __webpack_require__(4);\n\tvar Swiper = __webpack_require__(3);\n\t\n\tvar account = new Vue({\n\t  el: '#account',\n\t  data: {\n\t    accountList: [],\n\t    pageList: [],\n\t    userDetail: {},\n\t    keyword: '',\n\t    pageNo: 1,\n\t    pageCount: 1,\n\t    detailConfig: {\n\t      active: false,\n\t      right: '-500px',\n\t      opacity: 0\n\t    }\n\t  },\n\t  methods: {\n\t    detailAction: function detailAction(e) {\n\t      var _this = e.currentTarget;\n\t      var user_id = $(_this).data('id');\n\t      var username = $(_this).data('username');\n\t      $.post('/accountapi/detail', { 'user_id': user_id }, function (data, textStatus, xhr) {\n\t        data.username = username;\n\t        account.userDetail = data;\n\t        account.detailConfig.active = true;\n\t        account.detailConfig.right = '0px';\n\t        account.detailConfig.opacity = 1;\n\t      });\n\t    },\n\t    closeDetail: function closeDetail() {\n\t      account.detailConfig.active = false;\n\t      account.detailConfig.right = '-500px';\n\t      account.detailConfig.opacity = 0;\n\t    },\n\t    searchSub: function searchSub() {\n\t      if (account.keyword != '') {\n\t        _pageFn({\n\t          'page': 1,\n\t          'username': account.keyword\n\t        });\n\t      } else {\n\t        alert('请输入手机号码查询用户');\n\t      }\n\t    },\n\t    pageFn: function pageFn(e) {\n\t      var page = parseInt($(e.currentTarget).text());\n\t      if (!$(e.currentTarget).hasClass('active')) {\n\t        if (account.keyword == '') {\n\t          _pageFn({\n\t            'page': page\n\t          });\n\t        } else {\n\t          _pageFn({\n\t            'page': page,\n\t            'username': account.keyword\n\t          });\n\t        }\n\t      }\n\t    },\n\t    closeSearch: function closeSearch() {\n\t      account.keyword = '';\n\t      _pageFn({ 'page': 1 });\n\t    },\n\t    prev: function prev() {\n\t      if (account.pageNo == 1 || account.pageCount == 0) {\n\t        return false;\n\t      } else {\n\t        var page = account.pageNo - 1;\n\t        if (account.keyword == '') {\n\t          _pageFn({\n\t            'page': page\n\t          });\n\t        } else {\n\t          _pageFn({\n\t            'page': page,\n\t            'username': account.keyword\n\t          });\n\t        }\n\t      }\n\t    },\n\t    next: function next() {\n\t      if (account.pageNo == account.pageCount || account.pageCount == 0) {\n\t        return false;\n\t      } else {\n\t        var page = account.pageNo + 1;\n\t        if (account.keyword == '') {\n\t          _pageFn({\n\t            'page': page\n\t          });\n\t        } else {\n\t          _pageFn({\n\t            'page': page,\n\t            'username': account.keyword\n\t          });\n\t        }\n\t      }\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var arr = [];\n\t    $.post('/accountapi/account', { page: 1 }, function (res) {\n\t      for (var i = 0; i < res.totalPages; i++) {\n\t        arr.push(i + 1);\n\t      }\n\t      account.$set('pageList', arr);\n\t      account.$set('pageCount', res.totalPages);\n\t      account.$set('pageNo', res.currentPage);\n\t      account.$set('accountList', res.data);\n\t    });\n\t    var swiper = new Swiper('.swiper-container', {\n\t      scrollbar: '.swiper-scrollbar',\n\t      direction: 'vertical',\n\t      slidesPerView: 'auto',\n\t      mousewheelControl: true,\n\t      freeMode: true,\n\t      observer: true\n\t    });\n\t  },\n\t  watch: {\n\t    'pageNo': function pageNo(n, o) {\n\t      $('.pageNum').eq(n - 1).addClass('active').siblings('.pageNum').removeClass('active');\n\t      if (n == 1) {\n\t        $('.Previous').addClass('disabled');\n\t      } else if (n == account.pageCount) {\n\t        $('.Next').addClass('disabled');\n\t      } else {\n\t        $('.Previous').removeClass('disabled');\n\t        $('.Next').removeClass('disabled');\n\t      }\n\t    },\n\t    'pageList': function pageList(n, o) {\n\t      $('.pageNum').eq(0).addClass('active');\n\t    }\n\t  }\n\t});\n\t\n\tfunction _pageFn(data) {\n\t  $.post('/accountapi/account', data, function (res) {\n\t    var arr = [];\n\t    for (var i = 0; i < res.totalPages; i++) {\n\t      arr.push(i + 1);\n\t    }\n\t    account.$set('pageList', arr);\n\t    account.$set('pageCount', res.totalPages);\n\t    account.$set('pageNo', res.currentPage);\n\t    account.$set('accountList', res.data);\n\t    $('.pageNum').eq(res.currentPage - 1).addClass('active').siblings('.pageNum').removeClass('active');\n\t    if (res.totalPages == 1 || res.count == 0) {\n\t      $('.Next').addClass('disabled');\n\t    } else {\n\t      $('.Next').removeClass('disabled');\n\t    }\n\t    if (res.currentPage == 1) {\n\t      $('.Previous').addClass('disabled');\n\t    } else {\n\t      $('.Previous').removeClass('disabled');\n\t    }\n\t  });\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t * Vue.js v1.0.21\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: process.env.NODE_ENV !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (process.env.NODE_ENV !== 'production' && config.debug) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    this.prevKeys = Object.keys(value);\n\t    setObjectClasses(this.el, value);\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val && isPlainObject(val)) {\n\t        setObjectClasses(this.el, val);\n\t      } else if (val && typeof val === 'string') {\n\t        addClass(this.el, val);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (!this.prevKeys) return;\n\t\n\t    var i = this.prevKeys.length;\n\t    while (i--) {\n\t      var key = this.prevKeys[i];\n\t      if (!key) continue;\n\t\n\t      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n\t      for (var j = 0, l = keys.length; j < l; j++) {\n\t        toggleClasses(this.el, keys[j], removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setObjectClasses(el, obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    if (!obj[key]) continue;\n\t    toggleClasses(el, key, addClass);\n\t  }\n\t}\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction toggleClasses(el, key, fn) {\n\t  key = key.trim();\n\t\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (process.env.NODE_ENV !== 'production') {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV === 'production') {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (process.env.NODE_ENV !== 'production' && !destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    modifiers = parseModifiers(attr.name);\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (process.env.NODE_ENV !== 'production') {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (process.env.NODE_ENV !== 'production' && this.el) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (process.env.NODE_ENV !== 'production') {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (process.env.NODE_ENV !== 'production' && this.el) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.21';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Swiper 3.2.7\n\t * Most modern mobile touch slider and framework with hardware accelerated transitions\n\t * \n\t * http://www.idangero.us/swiper/\n\t * \n\t * Copyright 2015, Vladimir Kharlampidi\n\t * The iDangero.us\n\t * http://www.idangero.us/\n\t * \n\t * Licensed under MIT\n\t * \n\t * Released on: December 7, 2015\n\t */\n\t(function () {\n\t    'use strict';\n\t    var $;\n\t    /*===========================\n\t    Swiper\n\t    ===========================*/\n\t    var Swiper = function (container, params) {\n\t        if (!(this instanceof Swiper)) return new Swiper(container, params);\n\t\n\t        var defaults = {\n\t            direction: 'horizontal',\n\t            touchEventsTarget: 'container',\n\t            initialSlide: 0,\n\t            speed: 300,\n\t            // autoplay\n\t            autoplay: false,\n\t            autoplayDisableOnInteraction: true,\n\t            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n\t            iOSEdgeSwipeDetection: false,\n\t            iOSEdgeSwipeThreshold: 20,\n\t            // Free mode\n\t            freeMode: false,\n\t            freeModeMomentum: true,\n\t            freeModeMomentumRatio: 1,\n\t            freeModeMomentumBounce: true,\n\t            freeModeMomentumBounceRatio: 1,\n\t            freeModeSticky: false,\n\t            freeModeMinimumVelocity: 0.02,\n\t            // Autoheight\n\t            autoHeight: false,\n\t            // Set wrapper width\n\t            setWrapperSize: false,\n\t            // Virtual Translate\n\t            virtualTranslate: false,\n\t            // Effects\n\t            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow'\n\t            coverflow: {\n\t                rotate: 50,\n\t                stretch: 0,\n\t                depth: 100,\n\t                modifier: 1,\n\t                slideShadows : true\n\t            },\n\t            cube: {\n\t                slideShadows: true,\n\t                shadow: true,\n\t                shadowOffset: 20,\n\t                shadowScale: 0.94\n\t            },\n\t            fade: {\n\t                crossFade: false\n\t            },\n\t            // Parallax\n\t            parallax: false,\n\t            // Scrollbar\n\t            scrollbar: null,\n\t            scrollbarHide: true,\n\t            scrollbarDraggable: false,\n\t            scrollbarSnapOnRelease: false,\n\t            // Keyboard Mousewheel\n\t            keyboardControl: false,\n\t            mousewheelControl: false,\n\t            mousewheelReleaseOnEdges: false,\n\t            mousewheelInvert: false,\n\t            mousewheelForceToAxis: false,\n\t            mousewheelSensitivity: 1,\n\t            // Hash Navigation\n\t            hashnav: false,\n\t            // Breakpoints\n\t            breakpoints: undefined,\n\t            // Slides grid\n\t            spaceBetween: 0,\n\t            slidesPerView: 1,\n\t            slidesPerColumn: 1,\n\t            slidesPerColumnFill: 'column',\n\t            slidesPerGroup: 1,\n\t            centeredSlides: false,\n\t            slidesOffsetBefore: 0, // in px\n\t            slidesOffsetAfter: 0, // in px\n\t            // Round length\n\t            roundLengths: false,\n\t            // Touches\n\t            touchRatio: 1,\n\t            touchAngle: 45,\n\t            simulateTouch: true,\n\t            shortSwipes: true,\n\t            longSwipes: true,\n\t            longSwipesRatio: 0.5,\n\t            longSwipesMs: 300,\n\t            followFinger: true,\n\t            onlyExternal: false,\n\t            threshold: 0,\n\t            touchMoveStopPropagation: true,\n\t            // Pagination\n\t            pagination: null,\n\t            paginationElement: 'span',\n\t            paginationClickable: false,\n\t            paginationHide: false,\n\t            paginationBulletRender: null,\n\t            // Resistance\n\t            resistance: true,\n\t            resistanceRatio: 0.85,\n\t            // Next/prev buttons\n\t            nextButton: null,\n\t            prevButton: null,\n\t            // Progress\n\t            watchSlidesProgress: false,\n\t            watchSlidesVisibility: false,\n\t            // Cursor\n\t            grabCursor: false,\n\t            // Clicks\n\t            preventClicks: true,\n\t            preventClicksPropagation: true,\n\t            slideToClickedSlide: false,\n\t            // Lazy Loading\n\t            lazyLoading: false,\n\t            lazyLoadingInPrevNext: false,\n\t            lazyLoadingOnTransitionStart: false,\n\t            // Images\n\t            preloadImages: true,\n\t            updateOnImagesReady: true,\n\t            // loop\n\t            loop: false,\n\t            loopAdditionalSlides: 0,\n\t            loopedSlides: null,\n\t            // Control\n\t            control: undefined,\n\t            controlInverse: false,\n\t            controlBy: 'slide', //or 'container'\n\t            // Swiping/no swiping\n\t            allowSwipeToPrev: true,\n\t            allowSwipeToNext: true,\n\t            swipeHandler: null, //'.swipe-handler',\n\t            noSwiping: true,\n\t            noSwipingClass: 'swiper-no-swiping',\n\t            // NS\n\t            slideClass: 'swiper-slide',\n\t            slideActiveClass: 'swiper-slide-active',\n\t            slideVisibleClass: 'swiper-slide-visible',\n\t            slideDuplicateClass: 'swiper-slide-duplicate',\n\t            slideNextClass: 'swiper-slide-next',\n\t            slidePrevClass: 'swiper-slide-prev',\n\t            wrapperClass: 'swiper-wrapper',\n\t            bulletClass: 'swiper-pagination-bullet',\n\t            bulletActiveClass: 'swiper-pagination-bullet-active',\n\t            buttonDisabledClass: 'swiper-button-disabled',\n\t            paginationHiddenClass: 'swiper-pagination-hidden',\n\t            // Observer\n\t            observer: false,\n\t            observeParents: false,\n\t            // Accessibility\n\t            a11y: false,\n\t            prevSlideMessage: 'Previous slide',\n\t            nextSlideMessage: 'Next slide',\n\t            firstSlideMessage: 'This is the first slide',\n\t            lastSlideMessage: 'This is the last slide',\n\t            paginationBulletMessage: 'Go to slide {{index}}',\n\t            // Callbacks\n\t            runCallbacksOnInit: true\n\t            /*\n\t            Callbacks:\n\t            onInit: function (swiper)\n\t            onDestroy: function (swiper)\n\t            onClick: function (swiper, e)\n\t            onTap: function (swiper, e)\n\t            onDoubleTap: function (swiper, e)\n\t            onSliderMove: function (swiper, e)\n\t            onSlideChangeStart: function (swiper)\n\t            onSlideChangeEnd: function (swiper)\n\t            onTransitionStart: function (swiper)\n\t            onTransitionEnd: function (swiper)\n\t            onImagesReady: function (swiper)\n\t            onProgress: function (swiper, progress)\n\t            onTouchStart: function (swiper, e)\n\t            onTouchMove: function (swiper, e)\n\t            onTouchMoveOpposite: function (swiper, e)\n\t            onTouchEnd: function (swiper, e)\n\t            onReachBeginning: function (swiper)\n\t            onReachEnd: function (swiper)\n\t            onSetTransition: function (swiper, duration)\n\t            onSetTranslate: function (swiper, translate)\n\t            onAutoplayStart: function (swiper)\n\t            onAutoplayStop: function (swiper),\n\t            onLazyImageLoad: function (swiper, slide, image)\n\t            onLazyImageReady: function (swiper, slide, image)\n\t            */\n\t        \n\t        };\n\t        var initialVirtualTranslate = params && params.virtualTranslate;\n\t        \n\t        params = params || {};\n\t        var originalParams = {};\n\t        for (var param in params) {\n\t            if (typeof params[param] === 'object' && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {\n\t                originalParams[param] = {};\n\t                for (var deepParam in params[param]) {\n\t                    originalParams[param][deepParam] = params[param][deepParam];\n\t                }\n\t            }\n\t            else {\n\t                originalParams[param] = params[param];\n\t            }\n\t        }\n\t        for (var def in defaults) {\n\t            if (typeof params[def] === 'undefined') {\n\t                params[def] = defaults[def];\n\t            }\n\t            else if (typeof params[def] === 'object') {\n\t                for (var deepDef in defaults[def]) {\n\t                    if (typeof params[def][deepDef] === 'undefined') {\n\t                        params[def][deepDef] = defaults[def][deepDef];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        \n\t        // Swiper\n\t        var s = this;\n\t        \n\t        // Params\n\t        s.params = params;\n\t        s.originalParams = originalParams;\n\t        \n\t        // Classname\n\t        s.classNames = [];\n\t        /*=========================\n\t          Dom Library and plugins\n\t          ===========================*/\n\t        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){\n\t            $ = Dom7;\n\t        }\n\t        if (typeof $ === 'undefined') {\n\t            if (typeof Dom7 === 'undefined') {\n\t                $ = window.Dom7 || window.Zepto || window.jQuery;\n\t            }\n\t            else {\n\t                $ = Dom7;\n\t            }\n\t            if (!$) return;\n\t        }\n\t        // Export it to Swiper instance\n\t        s.$ = $;\n\t        \n\t        /*=========================\n\t          Breakpoints\n\t          ===========================*/\n\t        s.currentBreakpoint = undefined;\n\t        s.getActiveBreakpoint = function () {\n\t            //Get breakpoint for window width\n\t            if (!s.params.breakpoints) return false;\n\t            var breakpoint = false;\n\t            var points = [], point;\n\t            for ( point in s.params.breakpoints ) {\n\t                if (s.params.breakpoints.hasOwnProperty(point)) {\n\t                    points.push(point);\n\t                }\n\t            }\n\t            points.sort(function (a, b) {\n\t                return parseInt(a, 10) > parseInt(b, 10);\n\t            });\n\t            for (var i = 0; i < points.length; i++) {\n\t                point = points[i];\n\t                if (point >= window.innerWidth && !breakpoint) {\n\t                    breakpoint = point;\n\t                }\n\t            }\n\t            return breakpoint || 'max';\n\t        };\n\t        s.setBreakpoint = function () {\n\t            //Set breakpoint for window width and update parameters\n\t            var breakpoint = s.getActiveBreakpoint();\n\t            if (breakpoint && s.currentBreakpoint !== breakpoint) {\n\t                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;\n\t                for ( var param in breakPointsParams ) {\n\t                    s.params[param] = breakPointsParams[param];\n\t                }\n\t                s.currentBreakpoint = breakpoint;\n\t            }\n\t        };\n\t        // Set breakpoint on load\n\t        if (s.params.breakpoints) {\n\t            s.setBreakpoint();\n\t        }\n\t        \n\t        /*=========================\n\t          Preparation - Define Container, Wrapper and Pagination\n\t          ===========================*/\n\t        s.container = $(container);\n\t        if (s.container.length === 0) return;\n\t        if (s.container.length > 1) {\n\t            s.container.each(function () {\n\t                new Swiper(this, params);\n\t            });\n\t            return;\n\t        }\n\t        \n\t        // Save instance in container HTML Element and in data\n\t        s.container[0].swiper = s;\n\t        s.container.data('swiper', s);\n\t        \n\t        s.classNames.push('swiper-container-' + s.params.direction);\n\t        \n\t        if (s.params.freeMode) {\n\t            s.classNames.push('swiper-container-free-mode');\n\t        }\n\t        if (!s.support.flexbox) {\n\t            s.classNames.push('swiper-container-no-flexbox');\n\t            s.params.slidesPerColumn = 1;\n\t        }\n\t        if (s.params.autoHeight) {\n\t            s.classNames.push('swiper-container-autoheight');\n\t        }\n\t        // Enable slides progress when required\n\t        if (s.params.parallax || s.params.watchSlidesVisibility) {\n\t            s.params.watchSlidesProgress = true;\n\t        }\n\t        // Coverflow / 3D\n\t        if (['cube', 'coverflow'].indexOf(s.params.effect) >= 0) {\n\t            if (s.support.transforms3d) {\n\t                s.params.watchSlidesProgress = true;\n\t                s.classNames.push('swiper-container-3d');\n\t            }\n\t            else {\n\t                s.params.effect = 'slide';\n\t            }\n\t        }\n\t        if (s.params.effect !== 'slide') {\n\t            s.classNames.push('swiper-container-' + s.params.effect);\n\t        }\n\t        if (s.params.effect === 'cube') {\n\t            s.params.resistanceRatio = 0;\n\t            s.params.slidesPerView = 1;\n\t            s.params.slidesPerColumn = 1;\n\t            s.params.slidesPerGroup = 1;\n\t            s.params.centeredSlides = false;\n\t            s.params.spaceBetween = 0;\n\t            s.params.virtualTranslate = true;\n\t            s.params.setWrapperSize = false;\n\t        }\n\t        if (s.params.effect === 'fade') {\n\t            s.params.slidesPerView = 1;\n\t            s.params.slidesPerColumn = 1;\n\t            s.params.slidesPerGroup = 1;\n\t            s.params.watchSlidesProgress = true;\n\t            s.params.spaceBetween = 0;\n\t            if (typeof initialVirtualTranslate === 'undefined') {\n\t                s.params.virtualTranslate = true;\n\t            }\n\t        }\n\t        \n\t        // Grab Cursor\n\t        if (s.params.grabCursor && s.support.touch) {\n\t            s.params.grabCursor = false;\n\t        }\n\t        \n\t        // Wrapper\n\t        s.wrapper = s.container.children('.' + s.params.wrapperClass);\n\t        \n\t        // Pagination\n\t        if (s.params.pagination) {\n\t            s.paginationContainer = $(s.params.pagination);\n\t            if (s.params.paginationClickable) {\n\t                s.paginationContainer.addClass('swiper-pagination-clickable');\n\t            }\n\t        }\n\t        \n\t        // Is Horizontal\n\t        function isH() {\n\t            return s.params.direction === 'horizontal';\n\t        }\n\t        \n\t        // RTL\n\t        s.rtl = isH() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');\n\t        if (s.rtl) {\n\t            s.classNames.push('swiper-container-rtl');\n\t        }\n\t        \n\t        // Wrong RTL support\n\t        if (s.rtl) {\n\t            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';\n\t        }\n\t        \n\t        // Columns\n\t        if (s.params.slidesPerColumn > 1) {\n\t            s.classNames.push('swiper-container-multirow');\n\t        }\n\t        \n\t        // Check for Android\n\t        if (s.device.android) {\n\t            s.classNames.push('swiper-container-android');\n\t        }\n\t        \n\t        // Add classes\n\t        s.container.addClass(s.classNames.join(' '));\n\t        \n\t        // Translate\n\t        s.translate = 0;\n\t        \n\t        // Progress\n\t        s.progress = 0;\n\t        \n\t        // Velocity\n\t        s.velocity = 0;\n\t        \n\t        /*=========================\n\t          Locks, unlocks\n\t          ===========================*/\n\t        s.lockSwipeToNext = function () {\n\t            s.params.allowSwipeToNext = false;\n\t        };\n\t        s.lockSwipeToPrev = function () {\n\t            s.params.allowSwipeToPrev = false;\n\t        };\n\t        s.lockSwipes = function () {\n\t            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;\n\t        };\n\t        s.unlockSwipeToNext = function () {\n\t            s.params.allowSwipeToNext = true;\n\t        };\n\t        s.unlockSwipeToPrev = function () {\n\t            s.params.allowSwipeToPrev = true;\n\t        };\n\t        s.unlockSwipes = function () {\n\t            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;\n\t        };\n\t        \n\t        /*=========================\n\t          Round helper\n\t          ===========================*/\n\t        function round(a) {\n\t            return Math.floor(a);\n\t        }\n\t        /*=========================\n\t          Set grab cursor\n\t          ===========================*/\n\t        if (s.params.grabCursor) {\n\t            s.container[0].style.cursor = 'move';\n\t            s.container[0].style.cursor = '-webkit-grab';\n\t            s.container[0].style.cursor = '-moz-grab';\n\t            s.container[0].style.cursor = 'grab';\n\t        }\n\t        /*=========================\n\t          Update on Images Ready\n\t          ===========================*/\n\t        s.imagesToLoad = [];\n\t        s.imagesLoaded = 0;\n\t        \n\t        s.loadImage = function (imgElement, src, srcset, checkForComplete, callback) {\n\t            var image;\n\t            function onReady () {\n\t                if (callback) callback();\n\t            }\n\t            if (!imgElement.complete || !checkForComplete) {\n\t                if (src) {\n\t                    image = new window.Image();\n\t                    image.onload = onReady;\n\t                    image.onerror = onReady;\n\t                    if (srcset) {\n\t                        image.srcset = srcset;\n\t                    }\n\t                    if (src) {\n\t                        image.src = src;\n\t                    }\n\t                } else {\n\t                    onReady();\n\t                }\n\t        \n\t            } else {//image already loaded...\n\t                onReady();\n\t            }\n\t        };\n\t        s.preloadImages = function () {\n\t            s.imagesToLoad = s.container.find('img');\n\t            function _onReady() {\n\t                if (typeof s === 'undefined' || s === null) return;\n\t                if (s.imagesLoaded !== undefined) s.imagesLoaded++;\n\t                if (s.imagesLoaded === s.imagesToLoad.length) {\n\t                    if (s.params.updateOnImagesReady) s.update();\n\t                    s.emit('onImagesReady', s);\n\t                }\n\t            }\n\t            for (var i = 0; i < s.imagesToLoad.length; i++) {\n\t                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), true, _onReady);\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Autoplay\n\t          ===========================*/\n\t        s.autoplayTimeoutId = undefined;\n\t        s.autoplaying = false;\n\t        s.autoplayPaused = false;\n\t        function autoplay() {\n\t            s.autoplayTimeoutId = setTimeout(function () {\n\t                if (s.params.loop) {\n\t                    s.fixLoop();\n\t                    s._slideNext();\n\t                }\n\t                else {\n\t                    if (!s.isEnd) {\n\t                        s._slideNext();\n\t                    }\n\t                    else {\n\t                        if (!params.autoplayStopOnLast) {\n\t                            s._slideTo(0);\n\t                        }\n\t                        else {\n\t                            s.stopAutoplay();\n\t                        }\n\t                    }\n\t                }\n\t            }, s.params.autoplay);\n\t        }\n\t        s.startAutoplay = function () {\n\t            if (typeof s.autoplayTimeoutId !== 'undefined') return false;\n\t            if (!s.params.autoplay) return false;\n\t            if (s.autoplaying) return false;\n\t            s.autoplaying = true;\n\t            s.emit('onAutoplayStart', s);\n\t            autoplay();\n\t        };\n\t        s.stopAutoplay = function (internal) {\n\t            if (!s.autoplayTimeoutId) return;\n\t            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n\t            s.autoplaying = false;\n\t            s.autoplayTimeoutId = undefined;\n\t            s.emit('onAutoplayStop', s);\n\t        };\n\t        s.pauseAutoplay = function (speed) {\n\t            if (s.autoplayPaused) return;\n\t            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n\t            s.autoplayPaused = true;\n\t            if (speed === 0) {\n\t                s.autoplayPaused = false;\n\t                autoplay();\n\t            }\n\t            else {\n\t                s.wrapper.transitionEnd(function () {\n\t                    if (!s) return;\n\t                    s.autoplayPaused = false;\n\t                    if (!s.autoplaying) {\n\t                        s.stopAutoplay();\n\t                    }\n\t                    else {\n\t                        autoplay();\n\t                    }\n\t                });\n\t            }\n\t        };\n\t        /*=========================\n\t          Min/Max Translate\n\t          ===========================*/\n\t        s.minTranslate = function () {\n\t            return (-s.snapGrid[0]);\n\t        };\n\t        s.maxTranslate = function () {\n\t            return (-s.snapGrid[s.snapGrid.length - 1]);\n\t        };\n\t        /*=========================\n\t          Slider/slides sizes\n\t          ===========================*/\n\t        s.updateAutoHeight = function () {\n\t            // Update Height\n\t            var newHeight = s.slides.eq(s.activeIndex)[0].offsetHeight;\n\t            if (newHeight) s.wrapper.css('height', s.slides.eq(s.activeIndex)[0].offsetHeight + 'px');\n\t        };\n\t        s.updateContainerSize = function () {\n\t            var width, height;\n\t            if (typeof s.params.width !== 'undefined') {\n\t                width = s.params.width;\n\t            }\n\t            else {\n\t                width = s.container[0].clientWidth;\n\t            }\n\t            if (typeof s.params.height !== 'undefined') {\n\t                height = s.params.height;\n\t            }\n\t            else {\n\t                height = s.container[0].clientHeight;\n\t            }\n\t            if (width === 0 && isH() || height === 0 && !isH()) {\n\t                return;\n\t            }\n\t        \n\t            //Subtract paddings\n\t            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);\n\t            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);\n\t        \n\t            // Store values\n\t            s.width = width;\n\t            s.height = height;\n\t            s.size = isH() ? s.width : s.height;\n\t        };\n\t        \n\t        s.updateSlidesSize = function () {\n\t            s.slides = s.wrapper.children('.' + s.params.slideClass);\n\t            s.snapGrid = [];\n\t            s.slidesGrid = [];\n\t            s.slidesSizesGrid = [];\n\t        \n\t            var spaceBetween = s.params.spaceBetween,\n\t                slidePosition = -s.params.slidesOffsetBefore,\n\t                i,\n\t                prevSlideSize = 0,\n\t                index = 0;\n\t            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n\t                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;\n\t            }\n\t        \n\t            s.virtualSize = -spaceBetween;\n\t            // reset margins\n\t            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});\n\t            else s.slides.css({marginRight: '', marginBottom: ''});\n\t        \n\t            var slidesNumberEvenToRows;\n\t            if (s.params.slidesPerColumn > 1) {\n\t                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {\n\t                    slidesNumberEvenToRows = s.slides.length;\n\t                }\n\t                else {\n\t                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;\n\t                }\n\t                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {\n\t                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);\n\t                }\n\t            }\n\t        \n\t            // Calc slides\n\t            var slideSize;\n\t            var slidesPerColumn = s.params.slidesPerColumn;\n\t            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n\t            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);\n\t            for (i = 0; i < s.slides.length; i++) {\n\t                slideSize = 0;\n\t                var slide = s.slides.eq(i);\n\t                if (s.params.slidesPerColumn > 1) {\n\t                    // Set slides order\n\t                    var newSlideOrderIndex;\n\t                    var column, row;\n\t                    if (s.params.slidesPerColumnFill === 'column') {\n\t                        column = Math.floor(i / slidesPerColumn);\n\t                        row = i - column * slidesPerColumn;\n\t                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {\n\t                            if (++row >= slidesPerColumn) {\n\t                                row = 0;\n\t                                column++;\n\t                            }\n\t                        }\n\t                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n\t                        slide\n\t                            .css({\n\t                                '-webkit-box-ordinal-group': newSlideOrderIndex,\n\t                                '-moz-box-ordinal-group': newSlideOrderIndex,\n\t                                '-ms-flex-order': newSlideOrderIndex,\n\t                                '-webkit-order': newSlideOrderIndex,\n\t                                'order': newSlideOrderIndex\n\t                            });\n\t                    }\n\t                    else {\n\t                        row = Math.floor(i / slidesPerRow);\n\t                        column = i - row * slidesPerRow;\n\t                    }\n\t                    slide\n\t                        .css({\n\t                            'margin-top': (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')\n\t                        })\n\t                        .attr('data-swiper-column', column)\n\t                        .attr('data-swiper-row', row);\n\t        \n\t                }\n\t                if (slide.css('display') === 'none') continue;\n\t                if (s.params.slidesPerView === 'auto') {\n\t                    slideSize = isH() ? slide.outerWidth(true) : slide.outerHeight(true);\n\t                    if (s.params.roundLengths) slideSize = round(slideSize);\n\t                }\n\t                else {\n\t                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;\n\t                    if (s.params.roundLengths) slideSize = round(slideSize);\n\t        \n\t                    if (isH()) {\n\t                        s.slides[i].style.width = slideSize + 'px';\n\t                    }\n\t                    else {\n\t                        s.slides[i].style.height = slideSize + 'px';\n\t                    }\n\t                }\n\t                s.slides[i].swiperSlideSize = slideSize;\n\t                s.slidesSizesGrid.push(slideSize);\n\t        \n\t        \n\t                if (s.params.centeredSlides) {\n\t                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n\t                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;\n\t                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n\t                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n\t                    s.slidesGrid.push(slidePosition);\n\t                }\n\t                else {\n\t                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n\t                    s.slidesGrid.push(slidePosition);\n\t                    slidePosition = slidePosition + slideSize + spaceBetween;\n\t                }\n\t        \n\t                s.virtualSize += slideSize + spaceBetween;\n\t        \n\t                prevSlideSize = slideSize;\n\t        \n\t                index ++;\n\t            }\n\t            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;\n\t            var newSlidesGrid;\n\t        \n\t            if (\n\t                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {\n\t                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t            }\n\t            if (!s.support.flexbox || s.params.setWrapperSize) {\n\t                if (isH()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n\t            }\n\t        \n\t            if (s.params.slidesPerColumn > 1) {\n\t                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;\n\t                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;\n\t                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t                if (s.params.centeredSlides) {\n\t                    newSlidesGrid = [];\n\t                    for (i = 0; i < s.snapGrid.length; i++) {\n\t                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);\n\t                    }\n\t                    s.snapGrid = newSlidesGrid;\n\t                }\n\t            }\n\t        \n\t            // Remove last grid elements depending on width\n\t            if (!s.params.centeredSlides) {\n\t                newSlidesGrid = [];\n\t                for (i = 0; i < s.snapGrid.length; i++) {\n\t                    if (s.snapGrid[i] <= s.virtualSize - s.size) {\n\t                        newSlidesGrid.push(s.snapGrid[i]);\n\t                    }\n\t                }\n\t                s.snapGrid = newSlidesGrid;\n\t                if (Math.floor(s.virtualSize - s.size) > Math.floor(s.snapGrid[s.snapGrid.length - 1])) {\n\t                    s.snapGrid.push(s.virtualSize - s.size);\n\t                }\n\t            }\n\t            if (s.snapGrid.length === 0) s.snapGrid = [0];\n\t        \n\t            if (s.params.spaceBetween !== 0) {\n\t                if (isH()) {\n\t                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});\n\t                    else s.slides.css({marginRight: spaceBetween + 'px'});\n\t                }\n\t                else s.slides.css({marginBottom: spaceBetween + 'px'});\n\t            }\n\t            if (s.params.watchSlidesProgress) {\n\t                s.updateSlidesOffset();\n\t            }\n\t        };\n\t        s.updateSlidesOffset = function () {\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                s.slides[i].swiperSlideOffset = isH() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Slider/slides progress\n\t          ===========================*/\n\t        s.updateSlidesProgress = function (translate) {\n\t            if (typeof translate === 'undefined') {\n\t                translate = s.translate || 0;\n\t            }\n\t            if (s.slides.length === 0) return;\n\t            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();\n\t        \n\t            var offsetCenter = -translate;\n\t            if (s.rtl) offsetCenter = translate;\n\t        \n\t            // Visible Slides\n\t            s.slides.removeClass(s.params.slideVisibleClass);\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                var slide = s.slides[i];\n\t                var slideProgress = (offsetCenter - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);\n\t                if (s.params.watchSlidesVisibility) {\n\t                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n\t                    var slideAfter = slideBefore + s.slidesSizesGrid[i];\n\t                    var isVisible =\n\t                        (slideBefore >= 0 && slideBefore < s.size) ||\n\t                        (slideAfter > 0 && slideAfter <= s.size) ||\n\t                        (slideBefore <= 0 && slideAfter >= s.size);\n\t                    if (isVisible) {\n\t                        s.slides.eq(i).addClass(s.params.slideVisibleClass);\n\t                    }\n\t                }\n\t                slide.progress = s.rtl ? -slideProgress : slideProgress;\n\t            }\n\t        };\n\t        s.updateProgress = function (translate) {\n\t            if (typeof translate === 'undefined') {\n\t                translate = s.translate || 0;\n\t            }\n\t            var translatesDiff = s.maxTranslate() - s.minTranslate();\n\t            var wasBeginning = s.isBeginning;\n\t            var wasEnd = s.isEnd;\n\t            if (translatesDiff === 0) {\n\t                s.progress = 0;\n\t                s.isBeginning = s.isEnd = true;\n\t            }\n\t            else {\n\t                s.progress = (translate - s.minTranslate()) / (translatesDiff);\n\t                s.isBeginning = s.progress <= 0;\n\t                s.isEnd = s.progress >= 1;\n\t            }\n\t            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);\n\t            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);\n\t        \n\t            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);\n\t            s.emit('onProgress', s, s.progress);\n\t        };\n\t        s.updateActiveIndex = function () {\n\t            var translate = s.rtl ? s.translate : -s.translate;\n\t            var newActiveIndex, i, snapIndex;\n\t            for (i = 0; i < s.slidesGrid.length; i ++) {\n\t                if (typeof s.slidesGrid[i + 1] !== 'undefined') {\n\t                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {\n\t                        newActiveIndex = i;\n\t                    }\n\t                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {\n\t                        newActiveIndex = i + 1;\n\t                    }\n\t                }\n\t                else {\n\t                    if (translate >= s.slidesGrid[i]) {\n\t                        newActiveIndex = i;\n\t                    }\n\t                }\n\t            }\n\t            // Normalize slideIndex\n\t            if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;\n\t            // for (i = 0; i < s.slidesGrid.length; i++) {\n\t                // if (- translate >= s.slidesGrid[i]) {\n\t                    // newActiveIndex = i;\n\t                // }\n\t            // }\n\t            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);\n\t            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;\n\t        \n\t            if (newActiveIndex === s.activeIndex) {\n\t                return;\n\t            }\n\t            s.snapIndex = snapIndex;\n\t            s.previousIndex = s.activeIndex;\n\t            s.activeIndex = newActiveIndex;\n\t            s.updateClasses();\n\t        };\n\t        \n\t        /*=========================\n\t          Classes\n\t          ===========================*/\n\t        s.updateClasses = function () {\n\t            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);\n\t            var activeSlide = s.slides.eq(s.activeIndex);\n\t            // Active classes\n\t            activeSlide.addClass(s.params.slideActiveClass);\n\t            activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);\n\t            activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);\n\t        \n\t            // Pagination\n\t            if (s.bullets && s.bullets.length > 0) {\n\t                s.bullets.removeClass(s.params.bulletActiveClass);\n\t                var bulletIndex;\n\t                if (s.params.loop) {\n\t                    bulletIndex = Math.ceil(s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup;\n\t                    if (bulletIndex > s.slides.length - 1 - s.loopedSlides * 2) {\n\t                        bulletIndex = bulletIndex - (s.slides.length - s.loopedSlides * 2);\n\t                    }\n\t                    if (bulletIndex > s.bullets.length - 1) bulletIndex = bulletIndex - s.bullets.length;\n\t                }\n\t                else {\n\t                    if (typeof s.snapIndex !== 'undefined') {\n\t                        bulletIndex = s.snapIndex;\n\t                    }\n\t                    else {\n\t                        bulletIndex = s.activeIndex || 0;\n\t                    }\n\t                }\n\t                if (s.paginationContainer.length > 1) {\n\t                    s.bullets.each(function () {\n\t                        if ($(this).index() === bulletIndex) $(this).addClass(s.params.bulletActiveClass);\n\t                    });\n\t                }\n\t                else {\n\t                    s.bullets.eq(bulletIndex).addClass(s.params.bulletActiveClass);\n\t                }\n\t            }\n\t        \n\t            // Next/active buttons\n\t            if (!s.params.loop) {\n\t                if (s.params.prevButton) {\n\t                    if (s.isBeginning) {\n\t                        $(s.params.prevButton).addClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.prevButton));\n\t                    }\n\t                    else {\n\t                        $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.prevButton));\n\t                    }\n\t                }\n\t                if (s.params.nextButton) {\n\t                    if (s.isEnd) {\n\t                        $(s.params.nextButton).addClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.nextButton));\n\t                    }\n\t                    else {\n\t                        $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.nextButton));\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Pagination\n\t          ===========================*/\n\t        s.updatePagination = function () {\n\t            if (!s.params.pagination) return;\n\t            if (s.paginationContainer && s.paginationContainer.length > 0) {\n\t                var bulletsHTML = '';\n\t                var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n\t                for (var i = 0; i < numberOfBullets; i++) {\n\t                    if (s.params.paginationBulletRender) {\n\t                        bulletsHTML += s.params.paginationBulletRender(i, s.params.bulletClass);\n\t                    }\n\t                    else {\n\t                        bulletsHTML += '<' + s.params.paginationElement+' class=\"' + s.params.bulletClass + '\"></' + s.params.paginationElement + '>';\n\t                    }\n\t                }\n\t                s.paginationContainer.html(bulletsHTML);\n\t                s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);\n\t                if (s.params.paginationClickable && s.params.a11y && s.a11y) {\n\t                    s.a11y.initPagination();\n\t                }\n\t            }\n\t        };\n\t        /*=========================\n\t          Common update method\n\t          ===========================*/\n\t        s.update = function (updateTranslate) {\n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            s.updateProgress();\n\t            s.updatePagination();\n\t            s.updateClasses();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t            }\n\t            function forceSetTranslate() {\n\t                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n\t                s.setWrapperTranslate(newTranslate);\n\t                s.updateActiveIndex();\n\t                s.updateClasses();\n\t            }\n\t            if (updateTranslate) {\n\t                var translated, newTranslate;\n\t                if (s.controller && s.controller.spline) {\n\t                    s.controller.spline = undefined;\n\t                }\n\t                if (s.params.freeMode) {\n\t                    forceSetTranslate();\n\t                    if (s.params.autoHeight) {\n\t                        s.updateAutoHeight();\n\t                    }\n\t                }\n\t                else {\n\t                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n\t                        translated = s.slideTo(s.slides.length - 1, 0, false, true);\n\t                    }\n\t                    else {\n\t                        translated = s.slideTo(s.activeIndex, 0, false, true);\n\t                    }\n\t                    if (!translated) {\n\t                        forceSetTranslate();\n\t                    }\n\t                }\n\t            }\n\t            else if (s.params.autoHeight) {\n\t                s.updateAutoHeight();\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Resize Handler\n\t          ===========================*/\n\t        s.onResize = function (forceUpdatePagination) {\n\t            //Breakpoints\n\t            if (s.params.breakpoints) {\n\t                s.setBreakpoint();\n\t            }\n\t        \n\t            // Disable locks on resize\n\t            var allowSwipeToPrev = s.params.allowSwipeToPrev;\n\t            var allowSwipeToNext = s.params.allowSwipeToNext;\n\t            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;\n\t        \n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t            }\n\t            if (s.controller && s.controller.spline) {\n\t                s.controller.spline = undefined;\n\t            }\n\t            if (s.params.freeMode) {\n\t                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n\t                s.setWrapperTranslate(newTranslate);\n\t                s.updateActiveIndex();\n\t                s.updateClasses();\n\t        \n\t                if (s.params.autoHeight) {\n\t                    s.updateAutoHeight();\n\t                }\n\t            }\n\t            else {\n\t                s.updateClasses();\n\t                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n\t                    s.slideTo(s.slides.length - 1, 0, false, true);\n\t                }\n\t                else {\n\t                    s.slideTo(s.activeIndex, 0, false, true);\n\t                }\n\t            }\n\t            // Return locks after resize\n\t            s.params.allowSwipeToPrev = allowSwipeToPrev;\n\t            s.params.allowSwipeToNext = allowSwipeToNext;\n\t        };\n\t        \n\t        /*=========================\n\t          Events\n\t          ===========================*/\n\t        \n\t        //Define Touch Events\n\t        var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];\n\t        if (window.navigator.pointerEnabled) desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];\n\t        else if (window.navigator.msPointerEnabled) desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n\t        s.touchEvents = {\n\t            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : desktopEvents[0],\n\t            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : desktopEvents[1],\n\t            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : desktopEvents[2]\n\t        };\n\t        \n\t        \n\t        // WP8 Touch Events Fix\n\t        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {\n\t            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);\n\t        }\n\t        \n\t        // Attach/detach events\n\t        s.initEvents = function (detach) {\n\t            var actionDom = detach ? 'off' : 'on';\n\t            var action = detach ? 'removeEventListener' : 'addEventListener';\n\t            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];\n\t            var target = s.support.touch ? touchEventsTarget : document;\n\t        \n\t            var moveCapture = s.params.nested ? true : false;\n\t        \n\t            //Touch Events\n\t            if (s.browser.ie) {\n\t                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n\t                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n\t                target[action](s.touchEvents.end, s.onTouchEnd, false);\n\t            }\n\t            else {\n\t                if (s.support.touch) {\n\t                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n\t                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n\t                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, false);\n\t                }\n\t                if (params.simulateTouch && !s.device.ios && !s.device.android) {\n\t                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);\n\t                    document[action]('mousemove', s.onTouchMove, moveCapture);\n\t                    document[action]('mouseup', s.onTouchEnd, false);\n\t                }\n\t            }\n\t            window[action]('resize', s.onResize);\n\t        \n\t            // Next, Prev, Index\n\t            if (s.params.nextButton) {\n\t                $(s.params.nextButton)[actionDom]('click', s.onClickNext);\n\t                if (s.params.a11y && s.a11y) $(s.params.nextButton)[actionDom]('keydown', s.a11y.onEnterKey);\n\t            }\n\t            if (s.params.prevButton) {\n\t                $(s.params.prevButton)[actionDom]('click', s.onClickPrev);\n\t                if (s.params.a11y && s.a11y) $(s.params.prevButton)[actionDom]('keydown', s.a11y.onEnterKey);\n\t            }\n\t            if (s.params.pagination && s.params.paginationClickable) {\n\t                $(s.paginationContainer)[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);\n\t                if (s.params.a11y && s.a11y) $(s.paginationContainer)[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);\n\t            }\n\t        \n\t            // Prevent Links Clicks\n\t            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);\n\t        };\n\t        s.attachEvents = function (detach) {\n\t            s.initEvents();\n\t        };\n\t        s.detachEvents = function () {\n\t            s.initEvents(true);\n\t        };\n\t        \n\t        /*=========================\n\t          Handle Clicks\n\t          ===========================*/\n\t        // Prevent Clicks\n\t        s.allowClick = true;\n\t        s.preventClicks = function (e) {\n\t            if (!s.allowClick) {\n\t                if (s.params.preventClicks) e.preventDefault();\n\t                if (s.params.preventClicksPropagation && s.animating) {\n\t                    e.stopPropagation();\n\t                    e.stopImmediatePropagation();\n\t                }\n\t            }\n\t        };\n\t        // Clicks\n\t        s.onClickNext = function (e) {\n\t            e.preventDefault();\n\t            if (s.isEnd && !s.params.loop) return;\n\t            s.slideNext();\n\t        };\n\t        s.onClickPrev = function (e) {\n\t            e.preventDefault();\n\t            if (s.isBeginning && !s.params.loop) return;\n\t            s.slidePrev();\n\t        };\n\t        s.onClickIndex = function (e) {\n\t            e.preventDefault();\n\t            var index = $(this).index() * s.params.slidesPerGroup;\n\t            if (s.params.loop) index = index + s.loopedSlides;\n\t            s.slideTo(index);\n\t        };\n\t        \n\t        /*=========================\n\t          Handle Touches\n\t          ===========================*/\n\t        function findElementInEvent(e, selector) {\n\t            var el = $(e.target);\n\t            if (!el.is(selector)) {\n\t                if (typeof selector === 'string') {\n\t                    el = el.parents(selector);\n\t                }\n\t                else if (selector.nodeType) {\n\t                    var found;\n\t                    el.parents().each(function (index, _el) {\n\t                        if (_el === selector) found = selector;\n\t                    });\n\t                    if (!found) return undefined;\n\t                    else return selector;\n\t                }\n\t            }\n\t            if (el.length === 0) {\n\t                return undefined;\n\t            }\n\t            return el[0];\n\t        }\n\t        s.updateClickedSlide = function (e) {\n\t            var slide = findElementInEvent(e, '.' + s.params.slideClass);\n\t            var slideFound = false;\n\t            if (slide) {\n\t                for (var i = 0; i < s.slides.length; i++) {\n\t                    if (s.slides[i] === slide) slideFound = true;\n\t                }\n\t            }\n\t        \n\t            if (slide && slideFound) {\n\t                s.clickedSlide = slide;\n\t                s.clickedIndex = $(slide).index();\n\t            }\n\t            else {\n\t                s.clickedSlide = undefined;\n\t                s.clickedIndex = undefined;\n\t                return;\n\t            }\n\t            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {\n\t                var slideToIndex = s.clickedIndex,\n\t                    realIndex,\n\t                    duplicatedSlides;\n\t                if (s.params.loop) {\n\t                    if (s.animating) return;\n\t                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');\n\t                    if (s.params.centeredSlides) {\n\t                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {\n\t                            s.fixLoop();\n\t                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n\t                            setTimeout(function () {\n\t                                s.slideTo(slideToIndex);\n\t                            }, 0);\n\t                        }\n\t                        else {\n\t                            s.slideTo(slideToIndex);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {\n\t                            s.fixLoop();\n\t                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n\t                            setTimeout(function () {\n\t                                s.slideTo(slideToIndex);\n\t                            }, 0);\n\t                        }\n\t                        else {\n\t                            s.slideTo(slideToIndex);\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    s.slideTo(slideToIndex);\n\t                }\n\t            }\n\t        };\n\t        \n\t        var isTouched,\n\t            isMoved,\n\t            allowTouchCallbacks,\n\t            touchStartTime,\n\t            isScrolling,\n\t            currentTranslate,\n\t            startTranslate,\n\t            allowThresholdMove,\n\t            // Form elements to match\n\t            formElements = 'input, select, textarea, button',\n\t            // Last click time\n\t            lastClickTime = Date.now(), clickTimeout,\n\t            //Velocities\n\t            velocities = [],\n\t            allowMomentumBounce;\n\t        \n\t        // Animating Flag\n\t        s.animating = false;\n\t        \n\t        // Touches information\n\t        s.touches = {\n\t            startX: 0,\n\t            startY: 0,\n\t            currentX: 0,\n\t            currentY: 0,\n\t            diff: 0\n\t        };\n\t        \n\t        // Touch handlers\n\t        var isTouchEvent, startMoving;\n\t        s.onTouchStart = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            isTouchEvent = e.type === 'touchstart';\n\t            if (!isTouchEvent && 'which' in e && e.which === 3) return;\n\t            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {\n\t                s.allowClick = true;\n\t                return;\n\t            }\n\t            if (s.params.swipeHandler) {\n\t                if (!findElementInEvent(e, s.params.swipeHandler)) return;\n\t            }\n\t        \n\t            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n\t            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\t        \n\t            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\t            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {\n\t                return;\n\t            }\n\t        \n\t            isTouched = true;\n\t            isMoved = false;\n\t            allowTouchCallbacks = true;\n\t            isScrolling = undefined;\n\t            startMoving = undefined;\n\t            s.touches.startX = startX;\n\t            s.touches.startY = startY;\n\t            touchStartTime = Date.now();\n\t            s.allowClick = true;\n\t            s.updateContainerSize();\n\t            s.swipeDirection = undefined;\n\t            if (s.params.threshold > 0) allowThresholdMove = false;\n\t            if (e.type !== 'touchstart') {\n\t                var preventDefault = true;\n\t                if ($(e.target).is(formElements)) preventDefault = false;\n\t                if (document.activeElement && $(document.activeElement).is(formElements)) {\n\t                    document.activeElement.blur();\n\t                }\n\t                if (preventDefault) {\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t            s.emit('onTouchStart', s, e);\n\t        };\n\t        \n\t        s.onTouchMove = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            if (isTouchEvent && e.type === 'mousemove') return;\n\t            if (e.preventedByNestedSwiper) return;\n\t            if (s.params.onlyExternal) {\n\t                // isMoved = true;\n\t                s.allowClick = false;\n\t                if (isTouched) {\n\t                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t                    touchStartTime = Date.now();\n\t                }\n\t                return;\n\t            }\n\t            if (isTouchEvent && document.activeElement) {\n\t                if (e.target === document.activeElement && $(e.target).is(formElements)) {\n\t                    isMoved = true;\n\t                    s.allowClick = false;\n\t                    return;\n\t                }\n\t            }\n\t            if (allowTouchCallbacks) {\n\t                s.emit('onTouchMove', s, e);\n\t            }\n\t            if (e.targetTouches && e.targetTouches.length > 1) return;\n\t        \n\t            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t        \n\t            if (typeof isScrolling === 'undefined') {\n\t                var touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;\n\t                isScrolling = isH() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);\n\t            }\n\t            if (isScrolling) {\n\t                s.emit('onTouchMoveOpposite', s, e);\n\t            }\n\t            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {\n\t                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {\n\t                    startMoving = true;\n\t                }\n\t            }\n\t            if (!isTouched) return;\n\t            if (isScrolling)  {\n\t                isTouched = false;\n\t                return;\n\t            }\n\t            if (!startMoving && s.browser.ieTouch) {\n\t                return;\n\t            }\n\t            s.allowClick = false;\n\t            s.emit('onSliderMove', s, e);\n\t            e.preventDefault();\n\t            if (s.params.touchMoveStopPropagation && !s.params.nested) {\n\t                e.stopPropagation();\n\t            }\n\t        \n\t            if (!isMoved) {\n\t                if (params.loop) {\n\t                    s.fixLoop();\n\t                }\n\t                startTranslate = s.getWrapperTranslate();\n\t                s.setWrapperTransition(0);\n\t                if (s.animating) {\n\t                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');\n\t                }\n\t                if (s.params.autoplay && s.autoplaying) {\n\t                    if (s.params.autoplayDisableOnInteraction) {\n\t                        s.stopAutoplay();\n\t                    }\n\t                    else {\n\t                        s.pauseAutoplay();\n\t                    }\n\t                }\n\t                allowMomentumBounce = false;\n\t                //Grab Cursor\n\t                if (s.params.grabCursor) {\n\t                    s.container[0].style.cursor = 'move';\n\t                    s.container[0].style.cursor = '-webkit-grabbing';\n\t                    s.container[0].style.cursor = '-moz-grabbin';\n\t                    s.container[0].style.cursor = 'grabbing';\n\t                }\n\t            }\n\t            isMoved = true;\n\t        \n\t            var diff = s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n\t        \n\t            diff = diff * s.params.touchRatio;\n\t            if (s.rtl) diff = -diff;\n\t        \n\t            s.swipeDirection = diff > 0 ? 'prev' : 'next';\n\t            currentTranslate = diff + startTranslate;\n\t        \n\t            var disableParentSwiper = true;\n\t            if ((diff > 0 && currentTranslate > s.minTranslate())) {\n\t                disableParentSwiper = false;\n\t                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);\n\t            }\n\t            else if (diff < 0 && currentTranslate < s.maxTranslate()) {\n\t                disableParentSwiper = false;\n\t                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);\n\t            }\n\t        \n\t            if (disableParentSwiper) {\n\t                e.preventedByNestedSwiper = true;\n\t            }\n\t        \n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {\n\t                currentTranslate = startTranslate;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {\n\t                currentTranslate = startTranslate;\n\t            }\n\t        \n\t            if (!s.params.followFinger) return;\n\t        \n\t            // Threshold\n\t            if (s.params.threshold > 0) {\n\t                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {\n\t                    if (!allowThresholdMove) {\n\t                        allowThresholdMove = true;\n\t                        s.touches.startX = s.touches.currentX;\n\t                        s.touches.startY = s.touches.currentY;\n\t                        currentTranslate = startTranslate;\n\t                        s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n\t                        return;\n\t                    }\n\t                }\n\t                else {\n\t                    currentTranslate = startTranslate;\n\t                    return;\n\t                }\n\t            }\n\t            // Update active index in free mode\n\t            if (s.params.freeMode || s.params.watchSlidesProgress) {\n\t                s.updateActiveIndex();\n\t            }\n\t            if (s.params.freeMode) {\n\t                //Velocity\n\t                if (velocities.length === 0) {\n\t                    velocities.push({\n\t                        position: s.touches[isH() ? 'startX' : 'startY'],\n\t                        time: touchStartTime\n\t                    });\n\t                }\n\t                velocities.push({\n\t                    position: s.touches[isH() ? 'currentX' : 'currentY'],\n\t                    time: (new window.Date()).getTime()\n\t                });\n\t            }\n\t            // Update progress\n\t            s.updateProgress(currentTranslate);\n\t            // Update translate\n\t            s.setWrapperTranslate(currentTranslate);\n\t        };\n\t        s.onTouchEnd = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            if (allowTouchCallbacks) {\n\t                s.emit('onTouchEnd', s, e);\n\t            }\n\t            allowTouchCallbacks = false;\n\t            if (!isTouched) return;\n\t            //Return Grab Cursor\n\t            if (s.params.grabCursor && isMoved && isTouched) {\n\t                s.container[0].style.cursor = 'move';\n\t                s.container[0].style.cursor = '-webkit-grab';\n\t                s.container[0].style.cursor = '-moz-grab';\n\t                s.container[0].style.cursor = 'grab';\n\t            }\n\t        \n\t            // Time diff\n\t            var touchEndTime = Date.now();\n\t            var timeDiff = touchEndTime - touchStartTime;\n\t        \n\t            // Tap, doubleTap, Click\n\t            if (s.allowClick) {\n\t                s.updateClickedSlide(e);\n\t                s.emit('onTap', s, e);\n\t                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {\n\t                    if (clickTimeout) clearTimeout(clickTimeout);\n\t                    clickTimeout = setTimeout(function () {\n\t                        if (!s) return;\n\t                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {\n\t                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);\n\t                        }\n\t                        s.emit('onClick', s, e);\n\t                    }, 300);\n\t        \n\t                }\n\t                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {\n\t                    if (clickTimeout) clearTimeout(clickTimeout);\n\t                    s.emit('onDoubleTap', s, e);\n\t                }\n\t            }\n\t        \n\t            lastClickTime = Date.now();\n\t            setTimeout(function () {\n\t                if (s) s.allowClick = true;\n\t            }, 0);\n\t        \n\t            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {\n\t                isTouched = isMoved = false;\n\t                return;\n\t            }\n\t            isTouched = isMoved = false;\n\t        \n\t            var currentPos;\n\t            if (s.params.followFinger) {\n\t                currentPos = s.rtl ? s.translate : -s.translate;\n\t            }\n\t            else {\n\t                currentPos = -currentTranslate;\n\t            }\n\t            if (s.params.freeMode) {\n\t                if (currentPos < -s.minTranslate()) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                else if (currentPos > -s.maxTranslate()) {\n\t                    if (s.slides.length < s.snapGrid.length) {\n\t                        s.slideTo(s.snapGrid.length - 1);\n\t                    }\n\t                    else {\n\t                        s.slideTo(s.slides.length - 1);\n\t                    }\n\t                    return;\n\t                }\n\t        \n\t                if (s.params.freeModeMomentum) {\n\t                    if (velocities.length > 1) {\n\t                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();\n\t        \n\t                        var distance = lastMoveEvent.position - velocityEvent.position;\n\t                        var time = lastMoveEvent.time - velocityEvent.time;\n\t                        s.velocity = distance / time;\n\t                        s.velocity = s.velocity / 2;\n\t                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {\n\t                            s.velocity = 0;\n\t                        }\n\t                        // this implies that the user stopped moving a finger then released.\n\t                        // There would be no events with distance zero, so the last event is stale.\n\t                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {\n\t                            s.velocity = 0;\n\t                        }\n\t                    } else {\n\t                        s.velocity = 0;\n\t                    }\n\t        \n\t                    velocities.length = 0;\n\t                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;\n\t                    var momentumDistance = s.velocity * momentumDuration;\n\t        \n\t                    var newPosition = s.translate + momentumDistance;\n\t                    if (s.rtl) newPosition = - newPosition;\n\t                    var doBounce = false;\n\t                    var afterBouncePosition;\n\t                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;\n\t                    if (newPosition < s.maxTranslate()) {\n\t                        if (s.params.freeModeMomentumBounce) {\n\t                            if (newPosition + s.maxTranslate() < -bounceAmount) {\n\t                                newPosition = s.maxTranslate() - bounceAmount;\n\t                            }\n\t                            afterBouncePosition = s.maxTranslate();\n\t                            doBounce = true;\n\t                            allowMomentumBounce = true;\n\t                        }\n\t                        else {\n\t                            newPosition = s.maxTranslate();\n\t                        }\n\t                    }\n\t                    else if (newPosition > s.minTranslate()) {\n\t                        if (s.params.freeModeMomentumBounce) {\n\t                            if (newPosition - s.minTranslate() > bounceAmount) {\n\t                                newPosition = s.minTranslate() + bounceAmount;\n\t                            }\n\t                            afterBouncePosition = s.minTranslate();\n\t                            doBounce = true;\n\t                            allowMomentumBounce = true;\n\t                        }\n\t                        else {\n\t                            newPosition = s.minTranslate();\n\t                        }\n\t                    }\n\t                    else if (s.params.freeModeSticky) {\n\t                        var j = 0,\n\t                            nextSlide;\n\t                        for (j = 0; j < s.snapGrid.length; j += 1) {\n\t                            if (s.snapGrid[j] > -newPosition) {\n\t                                nextSlide = j;\n\t                                break;\n\t                            }\n\t        \n\t                        }\n\t                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {\n\t                            newPosition = s.snapGrid[nextSlide];\n\t                        } else {\n\t                            newPosition = s.snapGrid[nextSlide - 1];\n\t                        }\n\t                        if (!s.rtl) newPosition = - newPosition;\n\t                    }\n\t                    //Fix duration\n\t                    if (s.velocity !== 0) {\n\t                        if (s.rtl) {\n\t                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);\n\t                        }\n\t                        else {\n\t                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);\n\t                        }\n\t                    }\n\t                    else if (s.params.freeModeSticky) {\n\t                        s.slideReset();\n\t                        return;\n\t                    }\n\t        \n\t                    if (s.params.freeModeMomentumBounce && doBounce) {\n\t                        s.updateProgress(afterBouncePosition);\n\t                        s.setWrapperTransition(momentumDuration);\n\t                        s.setWrapperTranslate(newPosition);\n\t                        s.onTransitionStart();\n\t                        s.animating = true;\n\t                        s.wrapper.transitionEnd(function () {\n\t                            if (!s || !allowMomentumBounce) return;\n\t                            s.emit('onMomentumBounce', s);\n\t        \n\t                            s.setWrapperTransition(s.params.speed);\n\t                            s.setWrapperTranslate(afterBouncePosition);\n\t                            s.wrapper.transitionEnd(function () {\n\t                                if (!s) return;\n\t                                s.onTransitionEnd();\n\t                            });\n\t                        });\n\t                    } else if (s.velocity) {\n\t                        s.updateProgress(newPosition);\n\t                        s.setWrapperTransition(momentumDuration);\n\t                        s.setWrapperTranslate(newPosition);\n\t                        s.onTransitionStart();\n\t                        if (!s.animating) {\n\t                            s.animating = true;\n\t                            s.wrapper.transitionEnd(function () {\n\t                                if (!s) return;\n\t                                s.onTransitionEnd();\n\t                            });\n\t                        }\n\t        \n\t                    } else {\n\t                        s.updateProgress(newPosition);\n\t                    }\n\t        \n\t                    s.updateActiveIndex();\n\t                }\n\t                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {\n\t                    s.updateProgress();\n\t                    s.updateActiveIndex();\n\t                }\n\t                return;\n\t            }\n\t        \n\t            // Find current slide\n\t            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];\n\t            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {\n\t                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {\n\t                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {\n\t                        stopIndex = i;\n\t                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];\n\t                    }\n\t                }\n\t                else {\n\t                    if (currentPos >= s.slidesGrid[i]) {\n\t                        stopIndex = i;\n\t                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];\n\t                    }\n\t                }\n\t            }\n\t        \n\t            // Find current slide size\n\t            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;\n\t        \n\t            if (timeDiff > s.params.longSwipesMs) {\n\t                // Long touches\n\t                if (!s.params.longSwipes) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                if (s.swipeDirection === 'next') {\n\t                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t                    else s.slideTo(stopIndex);\n\t        \n\t                }\n\t                if (s.swipeDirection === 'prev') {\n\t                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t                    else s.slideTo(stopIndex);\n\t                }\n\t            }\n\t            else {\n\t                // Short swipes\n\t                if (!s.params.shortSwipes) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                if (s.swipeDirection === 'next') {\n\t                    s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t        \n\t                }\n\t                if (s.swipeDirection === 'prev') {\n\t                    s.slideTo(stopIndex);\n\t                }\n\t            }\n\t        };\n\t        /*=========================\n\t          Transitions\n\t          ===========================*/\n\t        s._slideTo = function (slideIndex, speed) {\n\t            return s.slideTo(slideIndex, speed, true, true);\n\t        };\n\t        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (typeof slideIndex === 'undefined') slideIndex = 0;\n\t            if (slideIndex < 0) slideIndex = 0;\n\t            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);\n\t            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;\n\t        \n\t            var translate = - s.snapGrid[s.snapIndex];\n\t            // Stop autoplay\n\t            if (s.params.autoplay && s.autoplaying) {\n\t                if (internal || !s.params.autoplayDisableOnInteraction) {\n\t                    s.pauseAutoplay(speed);\n\t                }\n\t                else {\n\t                    s.stopAutoplay();\n\t                }\n\t            }\n\t            // Update progress\n\t            s.updateProgress(translate);\n\t        \n\t            // Normalize slideIndex\n\t            for (var i = 0; i < s.slidesGrid.length; i++) {\n\t                if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {\n\t                    slideIndex = i;\n\t                }\n\t            }\n\t        \n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {\n\t                return false;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {\n\t                if ((s.activeIndex || 0) !== slideIndex ) return false;\n\t            }\n\t        \n\t            // Update Index\n\t            if (typeof speed === 'undefined') speed = s.params.speed;\n\t            s.previousIndex = s.activeIndex || 0;\n\t            s.activeIndex = slideIndex;\n\t        \n\t            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {\n\t                // Update Height\n\t                if (s.params.autoHeight) {\n\t                    s.updateAutoHeight();\n\t                }\n\t                s.updateClasses();\n\t                if (s.params.effect !== 'slide') {\n\t                    s.setWrapperTranslate(translate);\n\t                }\n\t                return false;\n\t            }\n\t            s.updateClasses();\n\t            s.onTransitionStart(runCallbacks);\n\t        \n\t            if (speed === 0) {\n\t                s.setWrapperTranslate(translate);\n\t                s.setWrapperTransition(0);\n\t                s.onTransitionEnd(runCallbacks);\n\t            }\n\t            else {\n\t                s.setWrapperTranslate(translate);\n\t                s.setWrapperTransition(speed);\n\t                if (!s.animating) {\n\t                    s.animating = true;\n\t                    s.wrapper.transitionEnd(function () {\n\t                        if (!s) return;\n\t                        s.onTransitionEnd(runCallbacks);\n\t                    });\n\t                }\n\t        \n\t            }\n\t        \n\t            return true;\n\t        };\n\t        \n\t        s.onTransitionStart = function (runCallbacks) {\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (s.params.autoHeight) {\n\t                s.updateAutoHeight();\n\t            }\n\t            if (s.lazy) s.lazy.onTransitionStart();\n\t            if (runCallbacks) {\n\t                s.emit('onTransitionStart', s);\n\t                if (s.activeIndex !== s.previousIndex) {\n\t                    s.emit('onSlideChangeStart', s);\n\t                    if (s.activeIndex > s.previousIndex) {\n\t                        s.emit('onSlideNextStart', s);\n\t                    }\n\t                    else {\n\t                        s.emit('onSlidePrevStart', s);\n\t                    }\n\t                }\n\t        \n\t            }\n\t        };\n\t        s.onTransitionEnd = function (runCallbacks) {\n\t            s.animating = false;\n\t            s.setWrapperTransition(0);\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (s.lazy) s.lazy.onTransitionEnd();\n\t            if (runCallbacks) {\n\t                s.emit('onTransitionEnd', s);\n\t                if (s.activeIndex !== s.previousIndex) {\n\t                    s.emit('onSlideChangeEnd', s);\n\t                    if (s.activeIndex > s.previousIndex) {\n\t                        s.emit('onSlideNextEnd', s);\n\t                    }\n\t                    else {\n\t                        s.emit('onSlidePrevEnd', s);\n\t                    }\n\t                }\n\t            }\n\t            if (s.params.hashnav && s.hashnav) {\n\t                s.hashnav.setHash();\n\t            }\n\t        \n\t        };\n\t        s.slideNext = function (runCallbacks, speed, internal) {\n\t            if (s.params.loop) {\n\t                if (s.animating) return false;\n\t                s.fixLoop();\n\t                var clientLeft = s.container[0].clientLeft;\n\t                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n\t            }\n\t            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n\t        };\n\t        s._slideNext = function (speed) {\n\t            return s.slideNext(true, speed, true);\n\t        };\n\t        s.slidePrev = function (runCallbacks, speed, internal) {\n\t            if (s.params.loop) {\n\t                if (s.animating) return false;\n\t                s.fixLoop();\n\t                var clientLeft = s.container[0].clientLeft;\n\t                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n\t            }\n\t            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n\t        };\n\t        s._slidePrev = function (speed) {\n\t            return s.slidePrev(true, speed, true);\n\t        };\n\t        s.slideReset = function (runCallbacks, speed, internal) {\n\t            return s.slideTo(s.activeIndex, speed, runCallbacks);\n\t        };\n\t        \n\t        /*=========================\n\t          Translate/transition helpers\n\t          ===========================*/\n\t        s.setWrapperTransition = function (duration, byController) {\n\t            s.wrapper.transition(duration);\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                s.effects[s.params.effect].setTransition(duration);\n\t            }\n\t            if (s.params.parallax && s.parallax) {\n\t                s.parallax.setTransition(duration);\n\t            }\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.setTransition(duration);\n\t            }\n\t            if (s.params.control && s.controller) {\n\t                s.controller.setTransition(duration, byController);\n\t            }\n\t            s.emit('onSetTransition', s, duration);\n\t        };\n\t        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {\n\t            var x = 0, y = 0, z = 0;\n\t            if (isH()) {\n\t                x = s.rtl ? -translate : translate;\n\t            }\n\t            else {\n\t                y = translate;\n\t            }\n\t        \n\t            if (s.params.roundLengths) {\n\t                x = round(x);\n\t                y = round(y);\n\t            }\n\t        \n\t            if (!s.params.virtualTranslate) {\n\t                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');\n\t                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');\n\t            }\n\t        \n\t            s.translate = isH() ? x : y;\n\t        \n\t            // Check if we need to update progress\n\t            var progress;\n\t            var translatesDiff = s.maxTranslate() - s.minTranslate();\n\t            if (translatesDiff === 0) {\n\t                progress = 0;\n\t            }\n\t            else {\n\t                progress = (translate - s.minTranslate()) / (translatesDiff);\n\t            }\n\t            if (progress !== s.progress) {\n\t                s.updateProgress(translate);\n\t            }\n\t        \n\t            if (updateActiveIndex) s.updateActiveIndex();\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                s.effects[s.params.effect].setTranslate(s.translate);\n\t            }\n\t            if (s.params.parallax && s.parallax) {\n\t                s.parallax.setTranslate(s.translate);\n\t            }\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.setTranslate(s.translate);\n\t            }\n\t            if (s.params.control && s.controller) {\n\t                s.controller.setTranslate(s.translate, byController);\n\t            }\n\t            s.emit('onSetTranslate', s, s.translate);\n\t        };\n\t        \n\t        s.getTranslate = function (el, axis) {\n\t            var matrix, curTransform, curStyle, transformMatrix;\n\t        \n\t            // automatic axis detection\n\t            if (typeof axis === 'undefined') {\n\t                axis = 'x';\n\t            }\n\t        \n\t            if (s.params.virtualTranslate) {\n\t                return s.rtl ? -s.translate : s.translate;\n\t            }\n\t        \n\t            curStyle = window.getComputedStyle(el, null);\n\t            if (window.WebKitCSSMatrix) {\n\t                curTransform = curStyle.transform || curStyle.webkitTransform;\n\t                if (curTransform.split(',').length > 6) {\n\t                    curTransform = curTransform.split(', ').map(function(a){\n\t                        return a.replace(',','.');\n\t                    }).join(', ');\n\t                }\n\t                // Some old versions of Webkit choke when 'none' is passed; pass\n\t                // empty string instead in this case\n\t                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n\t            }\n\t            else {\n\t                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n\t                matrix = transformMatrix.toString().split(',');\n\t            }\n\t        \n\t            if (axis === 'x') {\n\t                //Latest Chrome and webkits Fix\n\t                if (window.WebKitCSSMatrix)\n\t                    curTransform = transformMatrix.m41;\n\t                //Crazy IE10 Matrix\n\t                else if (matrix.length === 16)\n\t                    curTransform = parseFloat(matrix[12]);\n\t                //Normal Browsers\n\t                else\n\t                    curTransform = parseFloat(matrix[4]);\n\t            }\n\t            if (axis === 'y') {\n\t                //Latest Chrome and webkits Fix\n\t                if (window.WebKitCSSMatrix)\n\t                    curTransform = transformMatrix.m42;\n\t                //Crazy IE10 Matrix\n\t                else if (matrix.length === 16)\n\t                    curTransform = parseFloat(matrix[13]);\n\t                //Normal Browsers\n\t                else\n\t                    curTransform = parseFloat(matrix[5]);\n\t            }\n\t            if (s.rtl && curTransform) curTransform = -curTransform;\n\t            return curTransform || 0;\n\t        };\n\t        s.getWrapperTranslate = function (axis) {\n\t            if (typeof axis === 'undefined') {\n\t                axis = isH() ? 'x' : 'y';\n\t            }\n\t            return s.getTranslate(s.wrapper[0], axis);\n\t        };\n\t        \n\t        /*=========================\n\t          Observer\n\t          ===========================*/\n\t        s.observers = [];\n\t        function initObserver(target, options) {\n\t            options = options || {};\n\t            // create an observer instance\n\t            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n\t            var observer = new ObserverFunc(function (mutations) {\n\t                mutations.forEach(function (mutation) {\n\t                    s.onResize(true);\n\t                    s.emit('onObserverUpdate', s, mutation);\n\t                });\n\t            });\n\t        \n\t            observer.observe(target, {\n\t                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n\t                childList: typeof options.childList === 'undefined' ? true : options.childList,\n\t                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n\t            });\n\t        \n\t            s.observers.push(observer);\n\t        }\n\t        s.initObservers = function () {\n\t            if (s.params.observeParents) {\n\t                var containerParents = s.container.parents();\n\t                for (var i = 0; i < containerParents.length; i++) {\n\t                    initObserver(containerParents[i]);\n\t                }\n\t            }\n\t        \n\t            // Observe container\n\t            initObserver(s.container[0], {childList: false});\n\t        \n\t            // Observe wrapper\n\t            initObserver(s.wrapper[0], {attributes: false});\n\t        };\n\t        s.disconnectObservers = function () {\n\t            for (var i = 0; i < s.observers.length; i++) {\n\t                s.observers[i].disconnect();\n\t            }\n\t            s.observers = [];\n\t        };\n\t        /*=========================\n\t          Loop\n\t          ===========================*/\n\t        // Create looped slides\n\t        s.createLoop = function () {\n\t            // Remove duplicated slides\n\t            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n\t        \n\t            var slides = s.wrapper.children('.' + s.params.slideClass);\n\t        \n\t            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;\n\t        \n\t            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);\n\t            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;\n\t            if (s.loopedSlides > slides.length) {\n\t                s.loopedSlides = slides.length;\n\t            }\n\t        \n\t            var prependSlides = [], appendSlides = [], i;\n\t            slides.each(function (index, el) {\n\t                var slide = $(this);\n\t                if (index < s.loopedSlides) appendSlides.push(el);\n\t                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);\n\t                slide.attr('data-swiper-slide-index', index);\n\t            });\n\t            for (i = 0; i < appendSlides.length; i++) {\n\t                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n\t            }\n\t            for (i = prependSlides.length - 1; i >= 0; i--) {\n\t                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n\t            }\n\t        };\n\t        s.destroyLoop = function () {\n\t            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n\t            s.slides.removeAttr('data-swiper-slide-index');\n\t        };\n\t        s.fixLoop = function () {\n\t            var newIndex;\n\t            //Fix For Negative Oversliding\n\t            if (s.activeIndex < s.loopedSlides) {\n\t                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;\n\t                newIndex = newIndex + s.loopedSlides;\n\t                s.slideTo(newIndex, 0, false, true);\n\t            }\n\t            //Fix For Positive Oversliding\n\t            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {\n\t                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;\n\t                newIndex = newIndex + s.loopedSlides;\n\t                s.slideTo(newIndex, 0, false, true);\n\t            }\n\t        };\n\t        /*=========================\n\t          Append/Prepend/Remove Slides\n\t          ===========================*/\n\t        s.appendSlide = function (slides) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            if (typeof slides === 'object' && slides.length) {\n\t                for (var i = 0; i < slides.length; i++) {\n\t                    if (slides[i]) s.wrapper.append(slides[i]);\n\t                }\n\t            }\n\t            else {\n\t                s.wrapper.append(slides);\n\t            }\n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t        };\n\t        s.prependSlide = function (slides) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            var newActiveIndex = s.activeIndex + 1;\n\t            if (typeof slides === 'object' && slides.length) {\n\t                for (var i = 0; i < slides.length; i++) {\n\t                    if (slides[i]) s.wrapper.prepend(slides[i]);\n\t                }\n\t                newActiveIndex = s.activeIndex + slides.length;\n\t            }\n\t            else {\n\t                s.wrapper.prepend(slides);\n\t            }\n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t            s.slideTo(newActiveIndex, 0, false);\n\t        };\n\t        s.removeSlide = function (slidesIndexes) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t                s.slides = s.wrapper.children('.' + s.params.slideClass);\n\t            }\n\t            var newActiveIndex = s.activeIndex,\n\t                indexToRemove;\n\t            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {\n\t                for (var i = 0; i < slidesIndexes.length; i++) {\n\t                    indexToRemove = slidesIndexes[i];\n\t                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n\t                    if (indexToRemove < newActiveIndex) newActiveIndex--;\n\t                }\n\t                newActiveIndex = Math.max(newActiveIndex, 0);\n\t            }\n\t            else {\n\t                indexToRemove = slidesIndexes;\n\t                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n\t                if (indexToRemove < newActiveIndex) newActiveIndex--;\n\t                newActiveIndex = Math.max(newActiveIndex, 0);\n\t            }\n\t        \n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t        \n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t            if (s.params.loop) {\n\t                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);\n\t            }\n\t            else {\n\t                s.slideTo(newActiveIndex, 0, false);\n\t            }\n\t        \n\t        };\n\t        s.removeAllSlides = function () {\n\t            var slidesIndexes = [];\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                slidesIndexes.push(i);\n\t            }\n\t            s.removeSlide(slidesIndexes);\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Effects\n\t          ===========================*/\n\t        s.effects = {\n\t            fade: {\n\t                setTranslate: function () {\n\t                    for (var i = 0; i < s.slides.length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var offset = slide[0].swiperSlideOffset;\n\t                        var tx = -offset;\n\t                        if (!s.params.virtualTranslate) tx = tx - s.translate;\n\t                        var ty = 0;\n\t                        if (!isH()) {\n\t                            ty = tx;\n\t                            tx = 0;\n\t                        }\n\t                        var slideOpacity = s.params.fade.crossFade ?\n\t                                Math.max(1 - Math.abs(slide[0].progress), 0) :\n\t                                1 + Math.min(Math.max(slide[0].progress, -1), 0);\n\t                        slide\n\t                            .css({\n\t                                opacity: slideOpacity\n\t                            })\n\t                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');\n\t        \n\t                    }\n\t        \n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration);\n\t                    if (s.params.virtualTranslate && duration !== 0) {\n\t                        var eventTriggered = false;\n\t                        s.slides.transitionEnd(function () {\n\t                            if (eventTriggered) return;\n\t                            if (!s) return;\n\t                            eventTriggered = true;\n\t                            s.animating = false;\n\t                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n\t                            for (var i = 0; i < triggerEvents.length; i++) {\n\t                                s.wrapper.trigger(triggerEvents[i]);\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            },\n\t            cube: {\n\t                setTranslate: function () {\n\t                    var wrapperRotate = 0, cubeShadow;\n\t                    if (s.params.cube.shadow) {\n\t                        if (isH()) {\n\t                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');\n\t                            if (cubeShadow.length === 0) {\n\t                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n\t                                s.wrapper.append(cubeShadow);\n\t                            }\n\t                            cubeShadow.css({height: s.width + 'px'});\n\t                        }\n\t                        else {\n\t                            cubeShadow = s.container.find('.swiper-cube-shadow');\n\t                            if (cubeShadow.length === 0) {\n\t                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n\t                                s.container.append(cubeShadow);\n\t                            }\n\t                        }\n\t                    }\n\t                    for (var i = 0; i < s.slides.length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var slideAngle = i * 90;\n\t                        var round = Math.floor(slideAngle / 360);\n\t                        if (s.rtl) {\n\t                            slideAngle = -slideAngle;\n\t                            round = Math.floor(-slideAngle / 360);\n\t                        }\n\t                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);\n\t                        var tx = 0, ty = 0, tz = 0;\n\t                        if (i % 4 === 0) {\n\t                            tx = - round * 4 * s.size;\n\t                            tz = 0;\n\t                        }\n\t                        else if ((i - 1) % 4 === 0) {\n\t                            tx = 0;\n\t                            tz = - round * 4 * s.size;\n\t                        }\n\t                        else if ((i - 2) % 4 === 0) {\n\t                            tx = s.size + round * 4 * s.size;\n\t                            tz = s.size;\n\t                        }\n\t                        else if ((i - 3) % 4 === 0) {\n\t                            tx = - s.size;\n\t                            tz = 3 * s.size + s.size * 4 * round;\n\t                        }\n\t                        if (s.rtl) {\n\t                            tx = -tx;\n\t                        }\n\t        \n\t                        if (!isH()) {\n\t                            ty = tx;\n\t                            tx = 0;\n\t                        }\n\t        \n\t                        var transform = 'rotateX(' + (isH() ? 0 : -slideAngle) + 'deg) rotateY(' + (isH() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';\n\t                        if (progress <= 1 && progress > -1) {\n\t                            wrapperRotate = i * 90 + progress * 90;\n\t                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;\n\t                        }\n\t                        slide.transform(transform);\n\t                        if (s.params.cube.slideShadows) {\n\t                            //Set shadows\n\t                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n\t                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n\t                            if (shadowBefore.length === 0) {\n\t                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n\t                                slide.append(shadowBefore);\n\t                            }\n\t                            if (shadowAfter.length === 0) {\n\t                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n\t                                slide.append(shadowAfter);\n\t                            }\n\t                            var shadowOpacity = slide[0].progress;\n\t                            if (shadowBefore.length) shadowBefore[0].style.opacity = -slide[0].progress;\n\t                            if (shadowAfter.length) shadowAfter[0].style.opacity = slide[0].progress;\n\t                        }\n\t                    }\n\t                    s.wrapper.css({\n\t                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'\n\t                    });\n\t        \n\t                    if (s.params.cube.shadow) {\n\t                        if (isH()) {\n\t                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');\n\t                        }\n\t                        else {\n\t                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n\t                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n\t                            var scale1 = s.params.cube.shadowScale,\n\t                                scale2 = s.params.cube.shadowScale / multiplier,\n\t                                offset = s.params.cube.shadowOffset;\n\t                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');\n\t                        }\n\t                    }\n\t                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;\n\t                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (isH() ? 0 : wrapperRotate) + 'deg) rotateY(' + (isH() ? -wrapperRotate : 0) + 'deg)');\n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\t                    if (s.params.cube.shadow && !isH()) {\n\t                        s.container.find('.swiper-cube-shadow').transition(duration);\n\t                    }\n\t                }\n\t            },\n\t            coverflow: {\n\t                setTranslate: function () {\n\t                    var transform = s.translate;\n\t                    var center = isH() ? -transform + s.width / 2 : -transform + s.height / 2;\n\t                    var rotate = isH() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;\n\t                    var translate = s.params.coverflow.depth;\n\t                    //Each slide offset from center\n\t                    for (var i = 0, length = s.slides.length; i < length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var slideSize = s.slidesSizesGrid[i];\n\t                        var slideOffset = slide[0].swiperSlideOffset;\n\t                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;\n\t        \n\t                        var rotateY = isH() ? rotate * offsetMultiplier : 0;\n\t                        var rotateX = isH() ? 0 : rotate * offsetMultiplier;\n\t                        // var rotateZ = 0\n\t                        var translateZ = -translate * Math.abs(offsetMultiplier);\n\t        \n\t                        var translateY = isH() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);\n\t                        var translateX = isH() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;\n\t        \n\t                        //Fix for ultra small values\n\t                        if (Math.abs(translateX) < 0.001) translateX = 0;\n\t                        if (Math.abs(translateY) < 0.001) translateY = 0;\n\t                        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n\t                        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n\t                        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\t        \n\t                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';\n\t        \n\t                        slide.transform(slideTransform);\n\t                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\t                        if (s.params.coverflow.slideShadows) {\n\t                            //Set shadows\n\t                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n\t                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n\t                            if (shadowBefore.length === 0) {\n\t                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n\t                                slide.append(shadowBefore);\n\t                            }\n\t                            if (shadowAfter.length === 0) {\n\t                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n\t                                slide.append(shadowAfter);\n\t                            }\n\t                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n\t                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n\t                        }\n\t                    }\n\t        \n\t                    //Set correct perspective for IE10\n\t                    if (s.browser.ie) {\n\t                        var ws = s.wrapper[0].style;\n\t                        ws.perspectiveOrigin = center + 'px 50%';\n\t                    }\n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Images Lazy Loading\n\t          ===========================*/\n\t        s.lazy = {\n\t            initialImageLoaded: false,\n\t            loadImageInSlide: function (index, loadInDuplicate) {\n\t                if (typeof index === 'undefined') return;\n\t                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;\n\t                if (s.slides.length === 0) return;\n\t        \n\t                var slide = s.slides.eq(index);\n\t                var img = slide.find('.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');\n\t                if (slide.hasClass('swiper-lazy') && !slide.hasClass('swiper-lazy-loaded') && !slide.hasClass('swiper-lazy-loading')) {\n\t                    img = img.add(slide[0]);\n\t                }\n\t                if (img.length === 0) return;\n\t        \n\t                img.each(function () {\n\t                    var _img = $(this);\n\t                    _img.addClass('swiper-lazy-loading');\n\t                    var background = _img.attr('data-background');\n\t                    var src = _img.attr('data-src'),\n\t                        srcset = _img.attr('data-srcset');\n\t                    s.loadImage(_img[0], (src || background), srcset, false, function () {\n\t                        if (background) {\n\t                            _img.css('background-image', 'url(' + background + ')');\n\t                            _img.removeAttr('data-background');\n\t                        }\n\t                        else {\n\t                            if (srcset) {\n\t                                _img.attr('srcset', srcset);\n\t                                _img.removeAttr('data-srcset');\n\t                            }\n\t                            if (src) {\n\t                                _img.attr('src', src);\n\t                                _img.removeAttr('data-src');\n\t                            }\n\t        \n\t                        }\n\t        \n\t                        _img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');\n\t                        slide.find('.swiper-lazy-preloader, .preloader').remove();\n\t                        if (s.params.loop && loadInDuplicate) {\n\t                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');\n\t                            if (slide.hasClass(s.params.slideDuplicateClass)) {\n\t                                var originalSlide = s.wrapper.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')');\n\t                                s.lazy.loadImageInSlide(originalSlide.index(), false);\n\t                            }\n\t                            else {\n\t                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n\t                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);\n\t                            }\n\t                        }\n\t                        s.emit('onLazyImageReady', s, slide[0], _img[0]);\n\t                    });\n\t        \n\t                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);\n\t                });\n\t        \n\t            },\n\t            load: function () {\n\t                var i;\n\t                if (s.params.watchSlidesVisibility) {\n\t                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {\n\t                        s.lazy.loadImageInSlide($(this).index());\n\t                    });\n\t                }\n\t                else {\n\t                    if (s.params.slidesPerView > 1) {\n\t                        for (i = s.activeIndex; i < s.activeIndex + s.params.slidesPerView ; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                    }\n\t                    else {\n\t                        s.lazy.loadImageInSlide(s.activeIndex);\n\t                    }\n\t                }\n\t                if (s.params.lazyLoadingInPrevNext) {\n\t                    if (s.params.slidesPerView > 1) {\n\t                        // Next Slides\n\t                        for (i = s.activeIndex + s.params.slidesPerView; i < s.activeIndex + s.params.slidesPerView + s.params.slidesPerView; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                        // Prev Slides\n\t                        for (i = s.activeIndex - s.params.slidesPerView; i < s.activeIndex ; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                    }\n\t                    else {\n\t                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);\n\t                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());\n\t        \n\t                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);\n\t                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());\n\t                    }\n\t                }\n\t            },\n\t            onTransitionStart: function () {\n\t                if (s.params.lazyLoading) {\n\t                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {\n\t                        s.lazy.load();\n\t                    }\n\t                }\n\t            },\n\t            onTransitionEnd: function () {\n\t                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {\n\t                    s.lazy.load();\n\t                }\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Scrollbar\n\t          ===========================*/\n\t        s.scrollbar = {\n\t            isTouched: false,\n\t            setDragPosition: function (e) {\n\t                var sb = s.scrollbar;\n\t                var x = 0, y = 0;\n\t                var translate;\n\t                var pointerPosition = isH() ?\n\t                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :\n\t                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;\n\t                var position = (pointerPosition) - sb.track.offset()[isH() ? 'left' : 'top'] - sb.dragSize / 2;\n\t                var positionMin = -s.minTranslate() * sb.moveDivider;\n\t                var positionMax = -s.maxTranslate() * sb.moveDivider;\n\t                if (position < positionMin) {\n\t                    position = positionMin;\n\t                }\n\t                else if (position > positionMax) {\n\t                    position = positionMax;\n\t                }\n\t                position = -position / sb.moveDivider;\n\t                s.updateProgress(position);\n\t                s.setWrapperTranslate(position, true);\n\t            },\n\t            dragStart: function (e) {\n\t                var sb = s.scrollbar;\n\t                sb.isTouched = true;\n\t                e.preventDefault();\n\t                e.stopPropagation();\n\t        \n\t                sb.setDragPosition(e);\n\t                clearTimeout(sb.dragTimeout);\n\t        \n\t                sb.track.transition(0);\n\t                if (s.params.scrollbarHide) {\n\t                    sb.track.css('opacity', 1);\n\t                }\n\t                s.wrapper.transition(100);\n\t                sb.drag.transition(100);\n\t                s.emit('onScrollbarDragStart', s);\n\t            },\n\t            dragMove: function (e) {\n\t                var sb = s.scrollbar;\n\t                if (!sb.isTouched) return;\n\t                if (e.preventDefault) e.preventDefault();\n\t                else e.returnValue = false;\n\t                sb.setDragPosition(e);\n\t                s.wrapper.transition(0);\n\t                sb.track.transition(0);\n\t                sb.drag.transition(0);\n\t                s.emit('onScrollbarDragMove', s);\n\t            },\n\t            dragEnd: function (e) {\n\t                var sb = s.scrollbar;\n\t                if (!sb.isTouched) return;\n\t                sb.isTouched = false;\n\t                if (s.params.scrollbarHide) {\n\t                    clearTimeout(sb.dragTimeout);\n\t                    sb.dragTimeout = setTimeout(function () {\n\t                        sb.track.css('opacity', 0);\n\t                        sb.track.transition(400);\n\t                    }, 1000);\n\t        \n\t                }\n\t                s.emit('onScrollbarDragEnd', s);\n\t                if (s.params.scrollbarSnapOnRelease) {\n\t                    s.slideReset();\n\t                }\n\t            },\n\t            enableDraggable: function () {\n\t                var sb = s.scrollbar;\n\t                var target = s.support.touch ? sb.track : document;\n\t                $(sb.track).on(s.touchEvents.start, sb.dragStart);\n\t                $(target).on(s.touchEvents.move, sb.dragMove);\n\t                $(target).on(s.touchEvents.end, sb.dragEnd);\n\t            },\n\t            disableDraggable: function () {\n\t                var sb = s.scrollbar;\n\t                var target = s.support.touch ? sb.track : document;\n\t                $(sb.track).off(s.touchEvents.start, sb.dragStart);\n\t                $(target).off(s.touchEvents.move, sb.dragMove);\n\t                $(target).off(s.touchEvents.end, sb.dragEnd);\n\t            },\n\t            set: function () {\n\t                if (!s.params.scrollbar) return;\n\t                var sb = s.scrollbar;\n\t                sb.track = $(s.params.scrollbar);\n\t                sb.drag = sb.track.find('.swiper-scrollbar-drag');\n\t                if (sb.drag.length === 0) {\n\t                    sb.drag = $('<div class=\"swiper-scrollbar-drag\"></div>');\n\t                    sb.track.append(sb.drag);\n\t                }\n\t                sb.drag[0].style.width = '';\n\t                sb.drag[0].style.height = '';\n\t                sb.trackSize = isH() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;\n\t        \n\t                sb.divider = s.size / s.virtualSize;\n\t                sb.moveDivider = sb.divider * (sb.trackSize / s.size);\n\t                sb.dragSize = sb.trackSize * sb.divider;\n\t        \n\t                if (isH()) {\n\t                    sb.drag[0].style.width = sb.dragSize + 'px';\n\t                }\n\t                else {\n\t                    sb.drag[0].style.height = sb.dragSize + 'px';\n\t                }\n\t        \n\t                if (sb.divider >= 1) {\n\t                    sb.track[0].style.display = 'none';\n\t                }\n\t                else {\n\t                    sb.track[0].style.display = '';\n\t                }\n\t                if (s.params.scrollbarHide) {\n\t                    sb.track[0].style.opacity = 0;\n\t                }\n\t            },\n\t            setTranslate: function () {\n\t                if (!s.params.scrollbar) return;\n\t                var diff;\n\t                var sb = s.scrollbar;\n\t                var translate = s.translate || 0;\n\t                var newPos;\n\t        \n\t                var newSize = sb.dragSize;\n\t                newPos = (sb.trackSize - sb.dragSize) * s.progress;\n\t                if (s.rtl && isH()) {\n\t                    newPos = -newPos;\n\t                    if (newPos > 0) {\n\t                        newSize = sb.dragSize - newPos;\n\t                        newPos = 0;\n\t                    }\n\t                    else if (-newPos + sb.dragSize > sb.trackSize) {\n\t                        newSize = sb.trackSize + newPos;\n\t                    }\n\t                }\n\t                else {\n\t                    if (newPos < 0) {\n\t                        newSize = sb.dragSize + newPos;\n\t                        newPos = 0;\n\t                    }\n\t                    else if (newPos + sb.dragSize > sb.trackSize) {\n\t                        newSize = sb.trackSize - newPos;\n\t                    }\n\t                }\n\t                if (isH()) {\n\t                    if (s.support.transforms3d) {\n\t                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');\n\t                    }\n\t                    else {\n\t                        sb.drag.transform('translateX(' + (newPos) + 'px)');\n\t                    }\n\t                    sb.drag[0].style.width = newSize + 'px';\n\t                }\n\t                else {\n\t                    if (s.support.transforms3d) {\n\t                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');\n\t                    }\n\t                    else {\n\t                        sb.drag.transform('translateY(' + (newPos) + 'px)');\n\t                    }\n\t                    sb.drag[0].style.height = newSize + 'px';\n\t                }\n\t                if (s.params.scrollbarHide) {\n\t                    clearTimeout(sb.timeout);\n\t                    sb.track[0].style.opacity = 1;\n\t                    sb.timeout = setTimeout(function () {\n\t                        sb.track[0].style.opacity = 0;\n\t                        sb.track.transition(400);\n\t                    }, 1000);\n\t                }\n\t            },\n\t            setTransition: function (duration) {\n\t                if (!s.params.scrollbar) return;\n\t                s.scrollbar.drag.transition(duration);\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Controller\n\t          ===========================*/\n\t        s.controller = {\n\t            LinearSpline: function (x, y) {\n\t                this.x = x;\n\t                this.y = y;\n\t                this.lastIndex = x.length - 1;\n\t                // Given an x value (x2), return the expected y2 value:\n\t                // (x1,y1) is the known point before given value,\n\t                // (x3,y3) is the known point after given value.\n\t                var i1, i3;\n\t                var l = this.x.length;\n\t        \n\t                this.interpolate = function (x2) {\n\t                    if (!x2) return 0;\n\t        \n\t                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\t                    i3 = binarySearch(this.x, x2);\n\t                    i1 = i3 - 1;\n\t        \n\t                    // We have our indexes i1 & i3, so we can calculate already:\n\t                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\t                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];\n\t                };\n\t        \n\t                var binarySearch = (function() {\n\t                    var maxIndex, minIndex, guess;\n\t                    return function(array, val) {\n\t                        minIndex = -1;\n\t                        maxIndex = array.length;\n\t                        while (maxIndex - minIndex > 1)\n\t                            if (array[guess = maxIndex + minIndex >> 1] <= val) {\n\t                                minIndex = guess;\n\t                            } else {\n\t                                maxIndex = guess;\n\t                            }\n\t                        return maxIndex;\n\t                    };\n\t                })();\n\t            },\n\t            //xxx: for now i will just save one spline function to to\n\t            getInterpolateFunction: function(c){\n\t                if(!s.controller.spline) s.controller.spline = s.params.loop ?\n\t                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :\n\t                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);\n\t            },\n\t            setTranslate: function (translate, byController) {\n\t               var controlled = s.params.control;\n\t               var multiplier, controlledTranslate;\n\t               function setControlledTranslate(c) {\n\t                    // this will create an Interpolate function based on the snapGrids\n\t                    // x is the Grid of the scrolled scroller and y will be the controlled scroller\n\t                    // it makes sense to create this only once and recall it for the interpolation\n\t                    // the function does a lot of value caching for performance\n\t                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;\n\t                    if (s.params.controlBy === 'slide') {\n\t                        s.controller.getInterpolateFunction(c);\n\t                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n\t                        // but it did not work out\n\t                        controlledTranslate = -s.controller.spline.interpolate(-translate);\n\t                    }\n\t        \n\t                    if(!controlledTranslate || s.params.controlBy === 'container'){\n\t                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());\n\t                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();\n\t                    }\n\t        \n\t                    if (s.params.controlInverse) {\n\t                        controlledTranslate = c.maxTranslate() - controlledTranslate;\n\t                    }\n\t                    c.updateProgress(controlledTranslate);\n\t                    c.setWrapperTranslate(controlledTranslate, false, s);\n\t                    c.updateActiveIndex();\n\t               }\n\t               if (s.isArray(controlled)) {\n\t                   for (var i = 0; i < controlled.length; i++) {\n\t                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n\t                           setControlledTranslate(controlled[i]);\n\t                       }\n\t                   }\n\t               }\n\t               else if (controlled instanceof Swiper && byController !== controlled) {\n\t        \n\t                   setControlledTranslate(controlled);\n\t               }\n\t            },\n\t            setTransition: function (duration, byController) {\n\t                var controlled = s.params.control;\n\t                var i;\n\t                function setControlledTransition(c) {\n\t                    c.setWrapperTransition(duration, s);\n\t                    if (duration !== 0) {\n\t                        c.onTransitionStart();\n\t                        c.wrapper.transitionEnd(function(){\n\t                            if (!controlled) return;\n\t                            if (c.params.loop && s.params.controlBy === 'slide') {\n\t                                c.fixLoop();\n\t                            }\n\t                            c.onTransitionEnd();\n\t        \n\t                        });\n\t                    }\n\t                }\n\t                if (s.isArray(controlled)) {\n\t                    for (i = 0; i < controlled.length; i++) {\n\t                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n\t                            setControlledTransition(controlled[i]);\n\t                        }\n\t                    }\n\t                }\n\t                else if (controlled instanceof Swiper && byController !== controlled) {\n\t                    setControlledTransition(controlled);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Hash Navigation\n\t          ===========================*/\n\t        s.hashnav = {\n\t            init: function () {\n\t                if (!s.params.hashnav) return;\n\t                s.hashnav.initialized = true;\n\t                var hash = document.location.hash.replace('#', '');\n\t                if (!hash) return;\n\t                var speed = 0;\n\t                for (var i = 0, length = s.slides.length; i < length; i++) {\n\t                    var slide = s.slides.eq(i);\n\t                    var slideHash = slide.attr('data-hash');\n\t                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {\n\t                        var index = slide.index();\n\t                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);\n\t                    }\n\t                }\n\t            },\n\t            setHash: function () {\n\t                if (!s.hashnav.initialized || !s.params.hashnav) return;\n\t                document.location.hash = s.slides.eq(s.activeIndex).attr('data-hash') || '';\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Keyboard Control\n\t          ===========================*/\n\t        function handleKeyboard(e) {\n\t            if (e.originalEvent) e = e.originalEvent; //jquery fix\n\t            var kc = e.keyCode || e.charCode;\n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && (isH() && kc === 39 || !isH() && kc === 40)) {\n\t                return false;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && (isH() && kc === 37 || !isH() && kc === 38)) {\n\t                return false;\n\t            }\n\t            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n\t                return;\n\t            }\n\t            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n\t                return;\n\t            }\n\t            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n\t                var inView = false;\n\t                //Check that swiper should be inside of visible area of window\n\t                if (s.container.parents('.swiper-slide').length > 0 && s.container.parents('.swiper-slide-active').length === 0) {\n\t                    return;\n\t                }\n\t                var windowScroll = {\n\t                    left: window.pageXOffset,\n\t                    top: window.pageYOffset\n\t                };\n\t                var windowWidth = window.innerWidth;\n\t                var windowHeight = window.innerHeight;\n\t                var swiperOffset = s.container.offset();\n\t                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;\n\t                var swiperCoord = [\n\t                    [swiperOffset.left, swiperOffset.top],\n\t                    [swiperOffset.left + s.width, swiperOffset.top],\n\t                    [swiperOffset.left, swiperOffset.top + s.height],\n\t                    [swiperOffset.left + s.width, swiperOffset.top + s.height]\n\t                ];\n\t                for (var i = 0; i < swiperCoord.length; i++) {\n\t                    var point = swiperCoord[i];\n\t                    if (\n\t                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&\n\t                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight\n\t                    ) {\n\t                        inView = true;\n\t                    }\n\t        \n\t                }\n\t                if (!inView) return;\n\t            }\n\t            if (isH()) {\n\t                if (kc === 37 || kc === 39) {\n\t                    if (e.preventDefault) e.preventDefault();\n\t                    else e.returnValue = false;\n\t                }\n\t                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();\n\t                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();\n\t            }\n\t            else {\n\t                if (kc === 38 || kc === 40) {\n\t                    if (e.preventDefault) e.preventDefault();\n\t                    else e.returnValue = false;\n\t                }\n\t                if (kc === 40) s.slideNext();\n\t                if (kc === 38) s.slidePrev();\n\t            }\n\t        }\n\t        s.disableKeyboardControl = function () {\n\t            s.params.keyboardControl = false;\n\t            $(document).off('keydown', handleKeyboard);\n\t        };\n\t        s.enableKeyboardControl = function () {\n\t            s.params.keyboardControl = true;\n\t            $(document).on('keydown', handleKeyboard);\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Mousewheel Control\n\t          ===========================*/\n\t        s.mousewheel = {\n\t            event: false,\n\t            lastScrollTime: (new window.Date()).getTime()\n\t        };\n\t        if (s.params.mousewheelControl) {\n\t            try {\n\t                new window.WheelEvent('wheel');\n\t                s.mousewheel.event = 'wheel';\n\t            } catch (e) {}\n\t        \n\t            if (!s.mousewheel.event && document.onmousewheel !== undefined) {\n\t                s.mousewheel.event = 'mousewheel';\n\t            }\n\t            if (!s.mousewheel.event) {\n\t                s.mousewheel.event = 'DOMMouseScroll';\n\t            }\n\t        }\n\t        function handleMousewheel(e) {\n\t            if (e.originalEvent) e = e.originalEvent; //jquery fix\n\t            var we = s.mousewheel.event;\n\t            var delta = 0;\n\t            var rtlFactor = s.rtl ? -1 : 1;\n\t            //Opera & IE\n\t            if (e.detail) delta = -e.detail;\n\t            //WebKits\n\t            else if (we === 'mousewheel') {\n\t                if (s.params.mousewheelForceToAxis) {\n\t                    if (isH()) {\n\t                        if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY)) delta = e.wheelDeltaX * rtlFactor;\n\t                        else return;\n\t                    }\n\t                    else {\n\t                        if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX)) delta = e.wheelDeltaY;\n\t                        else return;\n\t                    }\n\t                }\n\t                else {\n\t                    delta = Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY) ? - e.wheelDeltaX * rtlFactor : - e.wheelDeltaY;\n\t                }\n\t            }\n\t            //Old FireFox\n\t            else if (we === 'DOMMouseScroll') delta = -e.detail;\n\t            //New FireFox\n\t            else if (we === 'wheel') {\n\t                if (s.params.mousewheelForceToAxis) {\n\t                    if (isH()) {\n\t                        if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) delta = -e.deltaX * rtlFactor;\n\t                        else return;\n\t                    }\n\t                    else {\n\t                        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) delta = -e.deltaY;\n\t                        else return;\n\t                    }\n\t                }\n\t                else {\n\t                    delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? - e.deltaX * rtlFactor : - e.deltaY;\n\t                }\n\t            }\n\t            if (delta === 0) return;\n\t        \n\t            if (s.params.mousewheelInvert) delta = -delta;\n\t        \n\t            if (!s.params.freeMode) {\n\t                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {\n\t                    if (delta < 0) {\n\t                        if ((!s.isEnd || s.params.loop) && !s.animating) s.slideNext();\n\t                        else if (s.params.mousewheelReleaseOnEdges) return true;\n\t                    }\n\t                    else {\n\t                        if ((!s.isBeginning || s.params.loop) && !s.animating) s.slidePrev();\n\t                        else if (s.params.mousewheelReleaseOnEdges) return true;\n\t                    }\n\t                }\n\t                s.mousewheel.lastScrollTime = (new window.Date()).getTime();\n\t        \n\t            }\n\t            else {\n\t                //Freemode or scrollContainer:\n\t                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;\n\t                var wasBeginning = s.isBeginning,\n\t                    wasEnd = s.isEnd;\n\t        \n\t                if (position >= s.minTranslate()) position = s.minTranslate();\n\t                if (position <= s.maxTranslate()) position = s.maxTranslate();\n\t        \n\t                s.setWrapperTransition(0);\n\t                s.setWrapperTranslate(position);\n\t                s.updateProgress();\n\t                s.updateActiveIndex();\n\t        \n\t                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {\n\t                    s.updateClasses();\n\t                }\n\t        \n\t                if (s.params.freeModeSticky) {\n\t                    clearTimeout(s.mousewheel.timeout);\n\t                    s.mousewheel.timeout = setTimeout(function () {\n\t                        s.slideReset();\n\t                    }, 300);\n\t                }\n\t        \n\t                // Return page scroll on edge positions\n\t                if (position === 0 || position === s.maxTranslate()) return;\n\t            }\n\t            if (s.params.autoplay) s.stopAutoplay();\n\t        \n\t            if (e.preventDefault) e.preventDefault();\n\t            else e.returnValue = false;\n\t            return false;\n\t        }\n\t        s.disableMousewheelControl = function () {\n\t            if (!s.mousewheel.event) return false;\n\t            s.container.off(s.mousewheel.event, handleMousewheel);\n\t            return true;\n\t        };\n\t        \n\t        s.enableMousewheelControl = function () {\n\t            if (!s.mousewheel.event) return false;\n\t            s.container.on(s.mousewheel.event, handleMousewheel);\n\t            return true;\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Parallax\n\t          ===========================*/\n\t        function setParallaxTransform(el, progress) {\n\t            el = $(el);\n\t            var p, pX, pY;\n\t            var rtlFactor = s.rtl ? -1 : 1;\n\t        \n\t            p = el.attr('data-swiper-parallax') || '0';\n\t            pX = el.attr('data-swiper-parallax-x');\n\t            pY = el.attr('data-swiper-parallax-y');\n\t            if (pX || pY) {\n\t                pX = pX || '0';\n\t                pY = pY || '0';\n\t            }\n\t            else {\n\t                if (isH()) {\n\t                    pX = p;\n\t                    pY = '0';\n\t                }\n\t                else {\n\t                    pY = p;\n\t                    pX = '0';\n\t                }\n\t            }\n\t        \n\t            if ((pX).indexOf('%') >= 0) {\n\t                pX = parseInt(pX, 10) * progress * rtlFactor + '%';\n\t            }\n\t            else {\n\t                pX = pX * progress * rtlFactor + 'px' ;\n\t            }\n\t            if ((pY).indexOf('%') >= 0) {\n\t                pY = parseInt(pY, 10) * progress + '%';\n\t            }\n\t            else {\n\t                pY = pY * progress + 'px' ;\n\t            }\n\t        \n\t            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');\n\t        }\n\t        s.parallax = {\n\t            setTranslate: function () {\n\t                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n\t                    setParallaxTransform(this, s.progress);\n\t        \n\t                });\n\t                s.slides.each(function () {\n\t                    var slide = $(this);\n\t                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {\n\t                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);\n\t                        setParallaxTransform(this, progress);\n\t                    });\n\t                });\n\t            },\n\t            setTransition: function (duration) {\n\t                if (typeof duration === 'undefined') duration = s.params.speed;\n\t                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n\t                    var el = $(this);\n\t                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;\n\t                    if (duration === 0) parallaxDuration = 0;\n\t                    el.transition(parallaxDuration);\n\t                });\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Plugins API. Collect all and init all plugins\n\t          ===========================*/\n\t        s._plugins = [];\n\t        for (var plugin in s.plugins) {\n\t            var p = s.plugins[plugin](s, s.params[plugin]);\n\t            if (p) s._plugins.push(p);\n\t        }\n\t        // Method to call all plugins event/method\n\t        s.callPlugins = function (eventName) {\n\t            for (var i = 0; i < s._plugins.length; i++) {\n\t                if (eventName in s._plugins[i]) {\n\t                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Events/Callbacks/Plugins Emitter\n\t          ===========================*/\n\t        function normalizeEventName (eventName) {\n\t            if (eventName.indexOf('on') !== 0) {\n\t                if (eventName[0] !== eventName[0].toUpperCase()) {\n\t                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);\n\t                }\n\t                else {\n\t                    eventName = 'on' + eventName;\n\t                }\n\t            }\n\t            return eventName;\n\t        }\n\t        s.emitterEventListeners = {\n\t        \n\t        };\n\t        s.emit = function (eventName) {\n\t            // Trigger callbacks\n\t            if (s.params[eventName]) {\n\t                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t            }\n\t            var i;\n\t            // Trigger events\n\t            if (s.emitterEventListeners[eventName]) {\n\t                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n\t                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t                }\n\t            }\n\t            // Trigger plugins\n\t            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t        };\n\t        s.on = function (eventName, handler) {\n\t            eventName = normalizeEventName(eventName);\n\t            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];\n\t            s.emitterEventListeners[eventName].push(handler);\n\t            return s;\n\t        };\n\t        s.off = function (eventName, handler) {\n\t            var i;\n\t            eventName = normalizeEventName(eventName);\n\t            if (typeof handler === 'undefined') {\n\t                // Remove all handlers for such event\n\t                s.emitterEventListeners[eventName] = [];\n\t                return s;\n\t            }\n\t            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;\n\t            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n\t                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);\n\t            }\n\t            return s;\n\t        };\n\t        s.once = function (eventName, handler) {\n\t            eventName = normalizeEventName(eventName);\n\t            var _handler = function () {\n\t                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n\t                s.off(eventName, _handler);\n\t            };\n\t            s.on(eventName, _handler);\n\t            return s;\n\t        };\n\t\n\t        // Accessibility tools\n\t        s.a11y = {\n\t            makeFocusable: function ($el) {\n\t                $el.attr('tabIndex', '0');\n\t                return $el;\n\t            },\n\t            addRole: function ($el, role) {\n\t                $el.attr('role', role);\n\t                return $el;\n\t            },\n\t        \n\t            addLabel: function ($el, label) {\n\t                $el.attr('aria-label', label);\n\t                return $el;\n\t            },\n\t        \n\t            disable: function ($el) {\n\t                $el.attr('aria-disabled', true);\n\t                return $el;\n\t            },\n\t        \n\t            enable: function ($el) {\n\t                $el.attr('aria-disabled', false);\n\t                return $el;\n\t            },\n\t        \n\t            onEnterKey: function (event) {\n\t                if (event.keyCode !== 13) return;\n\t                if ($(event.target).is(s.params.nextButton)) {\n\t                    s.onClickNext(event);\n\t                    if (s.isEnd) {\n\t                        s.a11y.notify(s.params.lastSlideMessage);\n\t                    }\n\t                    else {\n\t                        s.a11y.notify(s.params.nextSlideMessage);\n\t                    }\n\t                }\n\t                else if ($(event.target).is(s.params.prevButton)) {\n\t                    s.onClickPrev(event);\n\t                    if (s.isBeginning) {\n\t                        s.a11y.notify(s.params.firstSlideMessage);\n\t                    }\n\t                    else {\n\t                        s.a11y.notify(s.params.prevSlideMessage);\n\t                    }\n\t                }\n\t                if ($(event.target).is('.' + s.params.bulletClass)) {\n\t                    $(event.target)[0].click();\n\t                }\n\t            },\n\t        \n\t            liveRegion: $('<span class=\"swiper-notification\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n\t        \n\t            notify: function (message) {\n\t                var notification = s.a11y.liveRegion;\n\t                if (notification.length === 0) return;\n\t                notification.html('');\n\t                notification.html(message);\n\t            },\n\t            init: function () {\n\t                // Setup accessibility\n\t                if (s.params.nextButton) {\n\t                    var nextButton = $(s.params.nextButton);\n\t                    s.a11y.makeFocusable(nextButton);\n\t                    s.a11y.addRole(nextButton, 'button');\n\t                    s.a11y.addLabel(nextButton, s.params.nextSlideMessage);\n\t                }\n\t                if (s.params.prevButton) {\n\t                    var prevButton = $(s.params.prevButton);\n\t                    s.a11y.makeFocusable(prevButton);\n\t                    s.a11y.addRole(prevButton, 'button');\n\t                    s.a11y.addLabel(prevButton, s.params.prevSlideMessage);\n\t                }\n\t        \n\t                $(s.container).append(s.a11y.liveRegion);\n\t            },\n\t            initPagination: function () {\n\t                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {\n\t                    s.bullets.each(function () {\n\t                        var bullet = $(this);\n\t                        s.a11y.makeFocusable(bullet);\n\t                        s.a11y.addRole(bullet, 'button');\n\t                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));\n\t                    });\n\t                }\n\t            },\n\t            destroy: function () {\n\t                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Init/Destroy\n\t          ===========================*/\n\t        s.init = function () {\n\t            if (s.params.loop) s.createLoop();\n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            s.updatePagination();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t                if (s.params.scrollbarDraggable) {\n\t                    s.scrollbar.enableDraggable();\n\t                }\n\t            }\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                if (!s.params.loop) s.updateProgress();\n\t                s.effects[s.params.effect].setTranslate();\n\t            }\n\t            if (s.params.loop) {\n\t                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);\n\t            }\n\t            else {\n\t                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);\n\t                if (s.params.initialSlide === 0) {\n\t                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();\n\t                    if (s.lazy && s.params.lazyLoading) {\n\t                        s.lazy.load();\n\t                        s.lazy.initialImageLoaded = true;\n\t                    }\n\t                }\n\t            }\n\t            s.attachEvents();\n\t            if (s.params.observer && s.support.observer) {\n\t                s.initObservers();\n\t            }\n\t            if (s.params.preloadImages && !s.params.lazyLoading) {\n\t                s.preloadImages();\n\t            }\n\t            if (s.params.autoplay) {\n\t                s.startAutoplay();\n\t            }\n\t            if (s.params.keyboardControl) {\n\t                if (s.enableKeyboardControl) s.enableKeyboardControl();\n\t            }\n\t            if (s.params.mousewheelControl) {\n\t                if (s.enableMousewheelControl) s.enableMousewheelControl();\n\t            }\n\t            if (s.params.hashnav) {\n\t                if (s.hashnav) s.hashnav.init();\n\t            }\n\t            if (s.params.a11y && s.a11y) s.a11y.init();\n\t            s.emit('onInit', s);\n\t        };\n\t        \n\t        // Cleanup dynamic styles\n\t        s.cleanupStyles = function () {\n\t            // Container\n\t            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');\n\t        \n\t            // Wrapper\n\t            s.wrapper.removeAttr('style');\n\t        \n\t            // Slides\n\t            if (s.slides && s.slides.length) {\n\t                s.slides\n\t                    .removeClass([\n\t                      s.params.slideVisibleClass,\n\t                      s.params.slideActiveClass,\n\t                      s.params.slideNextClass,\n\t                      s.params.slidePrevClass\n\t                    ].join(' '))\n\t                    .removeAttr('style')\n\t                    .removeAttr('data-swiper-column')\n\t                    .removeAttr('data-swiper-row');\n\t            }\n\t        \n\t            // Pagination/Bullets\n\t            if (s.paginationContainer && s.paginationContainer.length) {\n\t                s.paginationContainer.removeClass(s.params.paginationHiddenClass);\n\t            }\n\t            if (s.bullets && s.bullets.length) {\n\t                s.bullets.removeClass(s.params.bulletActiveClass);\n\t            }\n\t        \n\t            // Buttons\n\t            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n\t            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n\t        \n\t            // Scrollbar\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');\n\t                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');\n\t            }\n\t        };\n\t        \n\t        // Destroy\n\t        s.destroy = function (deleteInstance, cleanupStyles) {\n\t            // Detach evebts\n\t            s.detachEvents();\n\t            // Stop autoplay\n\t            s.stopAutoplay();\n\t            // Disable draggable\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                if (s.params.scrollbarDraggable) {\n\t                    s.scrollbar.disableDraggable();\n\t                }\n\t            }\n\t            // Destroy loop\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            // Cleanup styles\n\t            if (cleanupStyles) {\n\t                s.cleanupStyles();\n\t            }\n\t            // Disconnect observer\n\t            s.disconnectObservers();\n\t            // Disable keyboard/mousewheel\n\t            if (s.params.keyboardControl) {\n\t                if (s.disableKeyboardControl) s.disableKeyboardControl();\n\t            }\n\t            if (s.params.mousewheelControl) {\n\t                if (s.disableMousewheelControl) s.disableMousewheelControl();\n\t            }\n\t            // Disable a11y\n\t            if (s.params.a11y && s.a11y) s.a11y.destroy();\n\t            // Destroy callback\n\t            s.emit('onDestroy');\n\t            // Delete instance\n\t            if (deleteInstance !== false) s = null;\n\t        };\n\t        \n\t        s.init();\n\t        \n\t\n\t    \n\t        // Return swiper instance\n\t        return s;\n\t    };\n\t    \n\t\n\t    /*==================================================\n\t        Prototype\n\t    ====================================================*/\n\t    Swiper.prototype = {\n\t        isSafari: (function () {\n\t            var ua = navigator.userAgent.toLowerCase();\n\t            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n\t        })(),\n\t        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),\n\t        isArray: function (arr) {\n\t            return Object.prototype.toString.apply(arr) === '[object Array]';\n\t        },\n\t        /*==================================================\n\t        Browser\n\t        ====================================================*/\n\t        browser: {\n\t            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n\t            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1)\n\t        },\n\t        /*==================================================\n\t        Devices\n\t        ====================================================*/\n\t        device: (function () {\n\t            var ua = navigator.userAgent;\n\t            var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n\t            var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n\t            var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n\t            var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\t            return {\n\t                ios: ipad || iphone || ipod,\n\t                android: android\n\t            };\n\t        })(),\n\t        /*==================================================\n\t        Feature Detection\n\t        ====================================================*/\n\t        support: {\n\t            touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n\t                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n\t            })(),\n\t    \n\t            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n\t                var div = document.createElement('div').style;\n\t                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n\t            })(),\n\t    \n\t            flexbox: (function () {\n\t                var div = document.createElement('div').style;\n\t                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n\t                for (var i = 0; i < styles.length; i++) {\n\t                    if (styles[i] in div) return true;\n\t                }\n\t            })(),\n\t    \n\t            observer: (function () {\n\t                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n\t            })()\n\t        },\n\t        /*==================================================\n\t        Plugins\n\t        ====================================================*/\n\t        plugins: {}\n\t    };\n\t    \n\t\n\t    /*===========================\n\t    Dom7 Library\n\t    ===========================*/\n\t    var Dom7 = (function () {\n\t        var Dom7 = function (arr) {\n\t            var _this = this, i = 0;\n\t            // Create array-like object\n\t            for (i = 0; i < arr.length; i++) {\n\t                _this[i] = arr[i];\n\t            }\n\t            _this.length = arr.length;\n\t            // Return collection with methods\n\t            return this;\n\t        };\n\t        var $ = function (selector, context) {\n\t            var arr = [], i = 0;\n\t            if (selector && !context) {\n\t                if (selector instanceof Dom7) {\n\t                    return selector;\n\t                }\n\t            }\n\t            if (selector) {\n\t                // String\n\t                if (typeof selector === 'string') {\n\t                    var els, tempParent, html = selector.trim();\n\t                    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n\t                        var toCreate = 'div';\n\t                        if (html.indexOf('<li') === 0) toCreate = 'ul';\n\t                        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n\t                        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n\t                        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n\t                        if (html.indexOf('<option') === 0) toCreate = 'select';\n\t                        tempParent = document.createElement(toCreate);\n\t                        tempParent.innerHTML = selector;\n\t                        for (i = 0; i < tempParent.childNodes.length; i++) {\n\t                            arr.push(tempParent.childNodes[i]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n\t                            // Pure ID selector\n\t                            els = [document.getElementById(selector.split('#')[1])];\n\t                        }\n\t                        else {\n\t                            // Other selectors\n\t                            els = (context || document).querySelectorAll(selector);\n\t                        }\n\t                        for (i = 0; i < els.length; i++) {\n\t                            if (els[i]) arr.push(els[i]);\n\t                        }\n\t                    }\n\t                }\n\t                // Node/element\n\t                else if (selector.nodeType || selector === window || selector === document) {\n\t                    arr.push(selector);\n\t                }\n\t                //Array of elements or instance of Dom\n\t                else if (selector.length > 0 && selector[0].nodeType) {\n\t                    for (i = 0; i < selector.length; i++) {\n\t                        arr.push(selector[i]);\n\t                    }\n\t                }\n\t            }\n\t            return new Dom7(arr);\n\t        };\n\t        Dom7.prototype = {\n\t            // Classes and attriutes\n\t            addClass: function (className) {\n\t                if (typeof className === 'undefined') {\n\t                    return this;\n\t                }\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.add(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            removeClass: function (className) {\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.remove(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            hasClass: function (className) {\n\t                if (!this[0]) return false;\n\t                else return this[0].classList.contains(className);\n\t            },\n\t            toggleClass: function (className) {\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.toggle(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            attr: function (attrs, value) {\n\t                if (arguments.length === 1 && typeof attrs === 'string') {\n\t                    // Get attr\n\t                    if (this[0]) return this[0].getAttribute(attrs);\n\t                    else return undefined;\n\t                }\n\t                else {\n\t                    // Set attrs\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        if (arguments.length === 2) {\n\t                            // String\n\t                            this[i].setAttribute(attrs, value);\n\t                        }\n\t                        else {\n\t                            // Object\n\t                            for (var attrName in attrs) {\n\t                                this[i][attrName] = attrs[attrName];\n\t                                this[i].setAttribute(attrName, attrs[attrName]);\n\t                            }\n\t                        }\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            removeAttr: function (attr) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    this[i].removeAttribute(attr);\n\t                }\n\t                return this;\n\t            },\n\t            data: function (key, value) {\n\t                if (typeof value === 'undefined') {\n\t                    // Get value\n\t                    if (this[0]) {\n\t                        var dataKey = this[0].getAttribute('data-' + key);\n\t                        if (dataKey) return dataKey;\n\t                        else if (this[0].dom7ElementDataStorage && (key in this[0].dom7ElementDataStorage)) return this[0].dom7ElementDataStorage[key];\n\t                        else return undefined;\n\t                    }\n\t                    else return undefined;\n\t                }\n\t                else {\n\t                    // Set value\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        var el = this[i];\n\t                        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n\t                        el.dom7ElementDataStorage[key] = value;\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            // Transforms\n\t            transform : function (transform) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n\t                }\n\t                return this;\n\t            },\n\t            transition: function (duration) {\n\t                if (typeof duration !== 'string') {\n\t                    duration = duration + 'ms';\n\t                }\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n\t                }\n\t                return this;\n\t            },\n\t            //Events\n\t            on: function (eventName, targetSelector, listener, capture) {\n\t                function handleLiveEvent(e) {\n\t                    var target = e.target;\n\t                    if ($(target).is(targetSelector)) listener.call(target, e);\n\t                    else {\n\t                        var parents = $(target).parents();\n\t                        for (var k = 0; k < parents.length; k++) {\n\t                            if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e);\n\t                        }\n\t                    }\n\t                }\n\t                var events = eventName.split(' ');\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof targetSelector === 'function' || targetSelector === false) {\n\t                        // Usual events\n\t                        if (typeof targetSelector === 'function') {\n\t                            listener = arguments[1];\n\t                            capture = arguments[2] || false;\n\t                        }\n\t                        for (j = 0; j < events.length; j++) {\n\t                            this[i].addEventListener(events[j], listener, capture);\n\t                        }\n\t                    }\n\t                    else {\n\t                        //Live events\n\t                        for (j = 0; j < events.length; j++) {\n\t                            if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];\n\t                            this[i].dom7LiveListeners.push({listener: listener, liveListener: handleLiveEvent});\n\t                            this[i].addEventListener(events[j], handleLiveEvent, capture);\n\t                        }\n\t                    }\n\t                }\n\t    \n\t                return this;\n\t            },\n\t            off: function (eventName, targetSelector, listener, capture) {\n\t                var events = eventName.split(' ');\n\t                for (var i = 0; i < events.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        if (typeof targetSelector === 'function' || targetSelector === false) {\n\t                            // Usual events\n\t                            if (typeof targetSelector === 'function') {\n\t                                listener = arguments[1];\n\t                                capture = arguments[2] || false;\n\t                            }\n\t                            this[j].removeEventListener(events[i], listener, capture);\n\t                        }\n\t                        else {\n\t                            // Live event\n\t                            if (this[j].dom7LiveListeners) {\n\t                                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {\n\t                                    if (this[j].dom7LiveListeners[k].listener === listener) {\n\t                                        this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            once: function (eventName, targetSelector, listener, capture) {\n\t                var dom = this;\n\t                if (typeof targetSelector === 'function') {\n\t                    targetSelector = false;\n\t                    listener = arguments[1];\n\t                    capture = arguments[2];\n\t                }\n\t                function proxy(e) {\n\t                    listener(e);\n\t                    dom.off(eventName, targetSelector, proxy, capture);\n\t                }\n\t                dom.on(eventName, targetSelector, proxy, capture);\n\t            },\n\t            trigger: function (eventName, eventData) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var evt;\n\t                    try {\n\t                        evt = new window.CustomEvent(eventName, {detail: eventData, bubbles: true, cancelable: true});\n\t                    }\n\t                    catch (e) {\n\t                        evt = document.createEvent('Event');\n\t                        evt.initEvent(eventName, true, true);\n\t                        evt.detail = eventData;\n\t                    }\n\t                    this[i].dispatchEvent(evt);\n\t                }\n\t                return this;\n\t            },\n\t            transitionEnd: function (callback) {\n\t                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n\t                    i, j, dom = this;\n\t                function fireCallBack(e) {\n\t                    /*jshint validthis:true */\n\t                    if (e.target !== this) return;\n\t                    callback.call(this, e);\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.off(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                if (callback) {\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.on(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            // Sizing/Styles\n\t            width: function () {\n\t                if (this[0] === window) {\n\t                    return window.innerWidth;\n\t                }\n\t                else {\n\t                    if (this.length > 0) {\n\t                        return parseFloat(this.css('width'));\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t            },\n\t            outerWidth: function (includeMargins) {\n\t                if (this.length > 0) {\n\t                    if (includeMargins)\n\t                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n\t                    else\n\t                        return this[0].offsetWidth;\n\t                }\n\t                else return null;\n\t            },\n\t            height: function () {\n\t                if (this[0] === window) {\n\t                    return window.innerHeight;\n\t                }\n\t                else {\n\t                    if (this.length > 0) {\n\t                        return parseFloat(this.css('height'));\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t            },\n\t            outerHeight: function (includeMargins) {\n\t                if (this.length > 0) {\n\t                    if (includeMargins)\n\t                        return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));\n\t                    else\n\t                        return this[0].offsetHeight;\n\t                }\n\t                else return null;\n\t            },\n\t            offset: function () {\n\t                if (this.length > 0) {\n\t                    var el = this[0];\n\t                    var box = el.getBoundingClientRect();\n\t                    var body = document.body;\n\t                    var clientTop  = el.clientTop  || body.clientTop  || 0;\n\t                    var clientLeft = el.clientLeft || body.clientLeft || 0;\n\t                    var scrollTop  = window.pageYOffset || el.scrollTop;\n\t                    var scrollLeft = window.pageXOffset || el.scrollLeft;\n\t                    return {\n\t                        top: box.top  + scrollTop  - clientTop,\n\t                        left: box.left + scrollLeft - clientLeft\n\t                    };\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            css: function (props, value) {\n\t                var i;\n\t                if (arguments.length === 1) {\n\t                    if (typeof props === 'string') {\n\t                        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n\t                    }\n\t                    else {\n\t                        for (i = 0; i < this.length; i++) {\n\t                            for (var prop in props) {\n\t                                this[i].style[prop] = props[prop];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    }\n\t                }\n\t                if (arguments.length === 2 && typeof props === 'string') {\n\t                    for (i = 0; i < this.length; i++) {\n\t                        this[i].style[props] = value;\n\t                    }\n\t                    return this;\n\t                }\n\t                return this;\n\t            },\n\t    \n\t            //Dom manipulation\n\t            each: function (callback) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    callback.call(this[i], i, this[i]);\n\t                }\n\t                return this;\n\t            },\n\t            html: function (html) {\n\t                if (typeof html === 'undefined') {\n\t                    return this[0] ? this[0].innerHTML : undefined;\n\t                }\n\t                else {\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        this[i].innerHTML = html;\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            is: function (selector) {\n\t                if (!this[0]) return false;\n\t                var compareWith, i;\n\t                if (typeof selector === 'string') {\n\t                    var el = this[0];\n\t                    if (el === document) return selector === document;\n\t                    if (el === window) return selector === window;\n\t    \n\t                    if (el.matches) return el.matches(selector);\n\t                    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n\t                    else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);\n\t                    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\t                    else {\n\t                        compareWith = $(selector);\n\t                        for (i = 0; i < compareWith.length; i++) {\n\t                            if (compareWith[i] === this[0]) return true;\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                else if (selector === document) return this[0] === document;\n\t                else if (selector === window) return this[0] === window;\n\t                else {\n\t                    if (selector.nodeType || selector instanceof Dom7) {\n\t                        compareWith = selector.nodeType ? [selector] : selector;\n\t                        for (i = 0; i < compareWith.length; i++) {\n\t                            if (compareWith[i] === this[0]) return true;\n\t                        }\n\t                        return false;\n\t                    }\n\t                    return false;\n\t                }\n\t    \n\t            },\n\t            index: function () {\n\t                if (this[0]) {\n\t                    var child = this[0];\n\t                    var i = 0;\n\t                    while ((child = child.previousSibling) !== null) {\n\t                        if (child.nodeType === 1) i++;\n\t                    }\n\t                    return i;\n\t                }\n\t                else return undefined;\n\t            },\n\t            eq: function (index) {\n\t                if (typeof index === 'undefined') return this;\n\t                var length = this.length;\n\t                var returnIndex;\n\t                if (index > length - 1) {\n\t                    return new Dom7([]);\n\t                }\n\t                if (index < 0) {\n\t                    returnIndex = length + index;\n\t                    if (returnIndex < 0) return new Dom7([]);\n\t                    else return new Dom7([this[returnIndex]]);\n\t                }\n\t                return new Dom7([this[index]]);\n\t            },\n\t            append: function (newChild) {\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof newChild === 'string') {\n\t                        var tempDiv = document.createElement('div');\n\t                        tempDiv.innerHTML = newChild;\n\t                        while (tempDiv.firstChild) {\n\t                            this[i].appendChild(tempDiv.firstChild);\n\t                        }\n\t                    }\n\t                    else if (newChild instanceof Dom7) {\n\t                        for (j = 0; j < newChild.length; j++) {\n\t                            this[i].appendChild(newChild[j]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this[i].appendChild(newChild);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            prepend: function (newChild) {\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof newChild === 'string') {\n\t                        var tempDiv = document.createElement('div');\n\t                        tempDiv.innerHTML = newChild;\n\t                        for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {\n\t                            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n\t                        }\n\t                        // this[i].insertAdjacentHTML('afterbegin', newChild);\n\t                    }\n\t                    else if (newChild instanceof Dom7) {\n\t                        for (j = 0; j < newChild.length; j++) {\n\t                            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this[i].insertBefore(newChild, this[i].childNodes[0]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            insertBefore: function (selector) {\n\t                var before = $(selector);\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (before.length === 1) {\n\t                        before[0].parentNode.insertBefore(this[i], before[0]);\n\t                    }\n\t                    else if (before.length > 1) {\n\t                        for (var j = 0; j < before.length; j++) {\n\t                            before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            insertAfter: function (selector) {\n\t                var after = $(selector);\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (after.length === 1) {\n\t                        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n\t                    }\n\t                    else if (after.length > 1) {\n\t                        for (var j = 0; j < after.length; j++) {\n\t                            after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            next: function (selector) {\n\t                if (this.length > 0) {\n\t                    if (selector) {\n\t                        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                    else {\n\t                        if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                }\n\t                else return new Dom7([]);\n\t            },\n\t            nextAll: function (selector) {\n\t                var nextEls = [];\n\t                var el = this[0];\n\t                if (!el) return new Dom7([]);\n\t                while (el.nextElementSibling) {\n\t                    var next = el.nextElementSibling;\n\t                    if (selector) {\n\t                        if($(next).is(selector)) nextEls.push(next);\n\t                    }\n\t                    else nextEls.push(next);\n\t                    el = next;\n\t                }\n\t                return new Dom7(nextEls);\n\t            },\n\t            prev: function (selector) {\n\t                if (this.length > 0) {\n\t                    if (selector) {\n\t                        if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                    else {\n\t                        if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                }\n\t                else return new Dom7([]);\n\t            },\n\t            prevAll: function (selector) {\n\t                var prevEls = [];\n\t                var el = this[0];\n\t                if (!el) return new Dom7([]);\n\t                while (el.previousElementSibling) {\n\t                    var prev = el.previousElementSibling;\n\t                    if (selector) {\n\t                        if($(prev).is(selector)) prevEls.push(prev);\n\t                    }\n\t                    else prevEls.push(prev);\n\t                    el = prev;\n\t                }\n\t                return new Dom7(prevEls);\n\t            },\n\t            parent: function (selector) {\n\t                var parents = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (selector) {\n\t                        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n\t                    }\n\t                    else {\n\t                        parents.push(this[i].parentNode);\n\t                    }\n\t                }\n\t                return $($.unique(parents));\n\t            },\n\t            parents: function (selector) {\n\t                var parents = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var parent = this[i].parentNode;\n\t                    while (parent) {\n\t                        if (selector) {\n\t                            if ($(parent).is(selector)) parents.push(parent);\n\t                        }\n\t                        else {\n\t                            parents.push(parent);\n\t                        }\n\t                        parent = parent.parentNode;\n\t                    }\n\t                }\n\t                return $($.unique(parents));\n\t            },\n\t            find : function (selector) {\n\t                var foundElements = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var found = this[i].querySelectorAll(selector);\n\t                    for (var j = 0; j < found.length; j++) {\n\t                        foundElements.push(found[j]);\n\t                    }\n\t                }\n\t                return new Dom7(foundElements);\n\t            },\n\t            children: function (selector) {\n\t                var children = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var childNodes = this[i].childNodes;\n\t    \n\t                    for (var j = 0; j < childNodes.length; j++) {\n\t                        if (!selector) {\n\t                            if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n\t                        }\n\t                        else {\n\t                            if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j]);\n\t                        }\n\t                    }\n\t                }\n\t                return new Dom7($.unique(children));\n\t            },\n\t            remove: function () {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n\t                }\n\t                return this;\n\t            },\n\t            add: function () {\n\t                var dom = this;\n\t                var i, j;\n\t                for (i = 0; i < arguments.length; i++) {\n\t                    var toAdd = $(arguments[i]);\n\t                    for (j = 0; j < toAdd.length; j++) {\n\t                        dom[dom.length] = toAdd[j];\n\t                        dom.length++;\n\t                    }\n\t                }\n\t                return dom;\n\t            }\n\t        };\n\t        $.fn = Dom7.prototype;\n\t        $.unique = function (arr) {\n\t            var unique = [];\n\t            for (var i = 0; i < arr.length; i++) {\n\t                if (unique.indexOf(arr[i]) === -1) unique.push(arr[i]);\n\t            }\n\t            return unique;\n\t        };\n\t    \n\t        return $;\n\t    })();\n\t    \n\t\n\t    /*===========================\n\t     Get Dom libraries\n\t     ===========================*/\n\t    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];\n\t    for (var i = 0; i < swiperDomPlugins.length; i++) {\n\t    \tif (window[swiperDomPlugins[i]]) {\n\t    \t\taddLibraryPlugin(window[swiperDomPlugins[i]]);\n\t    \t}\n\t    }\n\t    // Required DOM Plugins\n\t    var domLib;\n\t    if (typeof Dom7 === 'undefined') {\n\t    \tdomLib = window.Dom7 || window.Zepto || window.jQuery;\n\t    }\n\t    else {\n\t    \tdomLib = Dom7;\n\t    }\n\t\n\t    /*===========================\n\t    Add .swiper plugin from Dom libraries\n\t    ===========================*/\n\t    function addLibraryPlugin(lib) {\n\t        lib.fn.swiper = function (params) {\n\t            var firstInstance;\n\t            lib(this).each(function () {\n\t                var s = new Swiper(this, params);\n\t                if (!firstInstance) firstInstance = s;\n\t            });\n\t            return firstInstance;\n\t        };\n\t    }\n\t    \n\t    if (domLib) {\n\t        if (!('transitionEnd' in domLib.fn)) {\n\t            domLib.fn.transitionEnd = function (callback) {\n\t                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n\t                    i, j, dom = this;\n\t                function fireCallBack(e) {\n\t                    /*jshint validthis:true */\n\t                    if (e.target !== this) return;\n\t                    callback.call(this, e);\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.off(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                if (callback) {\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.on(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t        if (!('transform' in domLib.fn)) {\n\t            domLib.fn.transform = function (transform) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t        if (!('transition' in domLib.fn)) {\n\t            domLib.fn.transition = function (duration) {\n\t                if (typeof duration !== 'string') {\n\t                    duration = duration + 'ms';\n\t                }\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t    }\n\t\n\t    window.Swiper = Swiper;\n\t})();\n\t/*===========================\n\tSwiper AMD Export\n\t===========================*/\n\tif (true)\n\t{\n\t    module.exports = window.Swiper;\n\t}\n\telse if (typeof define === 'function' && define.amd) {\n\t    define([], function () {\n\t        'use strict';\n\t        return window.Swiper;\n\t    });\n\t}\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** account.js\n **/","var Vue = require('vue');\nvar $ = require('jquery');\nvar Swiper = require('Swiper');\n\nvar account = new Vue({\n  el: '#account',\n  data: {\n    accountList: [],\n    pageList: [],\n    userDetail: {},\n    keyword: '',\n    pageNo: 1,\n    pageCount: 1,\n    detailConfig: {\n      active: false,\n      right: '-500px',\n      opacity: 0,\n    },\n  },\n  methods: {\n    detailAction: function (e) {\n      var _this = e.currentTarget;\n      var user_id = $(_this).data('id');\n      var username = $(_this).data('username');\n      $.post('/accountapi/detail', { 'user_id': user_id }, function (data, textStatus, xhr) {\n        data.username = username;\n        account.userDetail = data;\n        account.detailConfig.active = true;\n        account.detailConfig.right = '0px';\n        account.detailConfig.opacity = 1;\n      });\n    },\n    closeDetail: function () {\n      account.detailConfig.active = false;\n      account.detailConfig.right = '-500px';\n      account.detailConfig.opacity = 0;\n    },\n    searchSub: function () {\n      if (account.keyword != '') {\n        pageFn({\n          'page': 1,\n          'username': account.keyword\n        });\n      } else {\n        alert('请输入手机号码查询用户');\n      }\n\n    },\n    pageFn: function (e) {\n      var page = parseInt($(e.currentTarget).text());\n      if (!$(e.currentTarget).hasClass('active')) {\n        if (account.keyword == '') {\n          pageFn({\n            'page': page\n          });\n        } else {\n          pageFn({\n            'page': page,\n            'username': account.keyword\n          });\n        }\n      }\n    },\n    closeSearch: function () {\n      account.keyword = '';\n      pageFn({ 'page': 1 });\n    },\n    prev: function () {\n      if (account.pageNo == 1 || account.pageCount == 0) {\n        return false;\n      } else {\n        var page = account.pageNo - 1;\n        if (account.keyword == '') {\n          pageFn({\n            'page': page\n          });\n        } else {\n          pageFn({\n            'page': page,\n            'username': account.keyword\n          });\n        }\n      }\n    },\n    next: function () {\n      if (account.pageNo == account.pageCount || account.pageCount == 0) {\n        return false;\n      } else {\n        var page = account.pageNo + 1;\n        if (account.keyword == '') {\n          pageFn({\n            'page': page\n          });\n        } else {\n          pageFn({\n            'page': page,\n            'username': account.keyword\n          });\n        }\n      }\n    }\n  },\n  ready: function () {\n    var arr = [];\n    $.post('/accountapi/account', { page: 1 }, function (res) {\n      for (var i = 0; i < res.totalPages; i++) {\n        arr.push(i + 1);\n      }\n      account.$set('pageList', arr);\n      account.$set('pageCount', res.totalPages);\n      account.$set('pageNo', res.currentPage);\n      account.$set('accountList', res.data);\n\n    })\n    var swiper = new Swiper('.swiper-container', {\n      scrollbar: '.swiper-scrollbar',\n      direction: 'vertical',\n      slidesPerView: 'auto',\n      mousewheelControl: true,\n      freeMode: true,\n      observer: true\n    });\n  },\n  watch: {\n    'pageNo': function (n, o) {\n      $('.pageNum').eq(n - 1).addClass('active').siblings('.pageNum').removeClass('active');\n      if (n == 1) {\n        $('.Previous').addClass('disabled');\n      } else if (n == account.pageCount) {\n        $('.Next').addClass('disabled');\n      } else {\n        $('.Previous').removeClass('disabled');\n        $('.Next').removeClass('disabled');\n      }\n    },\n    'pageList': function (n, o) {\n      $('.pageNum').eq(0).addClass('active');\n    }\n  }\n})\n\nfunction pageFn(data) {\n  $.post('/accountapi/account', data, function (res) {\n    var arr = [];\n    for (var i = 0; i < res.totalPages; i++) {\n      arr.push(i + 1);\n    }\n    account.$set('pageList', arr);\n    account.$set('pageCount', res.totalPages);\n    account.$set('pageNo', res.currentPage);\n    account.$set('accountList', res.data);\n    $('.pageNum').eq(res.currentPage - 1).addClass('active').siblings('.pageNum').removeClass('active');\n    if (res.totalPages == 1 || res.count == 0) {\n      $('.Next').addClass('disabled');\n    } else {\n      $('.Next').removeClass('disabled');\n    }\n    if (res.currentPage == 1) {\n      $('.Previous').addClass('disabled');\n    } else {\n      $('.Previous').removeClass('disabled');\n    }\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./www/static/src/js/account.js\n **/","/*!\n * Vue.js v1.0.21\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n  if (camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (!this.prevKeys) return;\n\n    var i = this.prevKeys.length;\n    while (i--) {\n      var key = this.prevKeys[i];\n      if (!key) continue;\n\n      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n      for (var j = 0, l = keys.length; j < l; j++) {\n        toggleClasses(this.el, keys[j], removeClass);\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (!obj[key]) continue;\n    toggleClasses(el, key, addClass);\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction toggleClasses(el, key, fn) {\n  key = key.trim();\n\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.21';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 1\n ** module chunks = 1 2 3 4\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 2\n ** module chunks = 1 2 3 4\n **/","/**\n * Swiper 3.2.7\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * \n * http://www.idangero.us/swiper/\n * \n * Copyright 2015, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n * \n * Licensed under MIT\n * \n * Released on: December 7, 2015\n */\n(function () {\n    'use strict';\n    var $;\n    /*===========================\n    Swiper\n    ===========================*/\n    var Swiper = function (container, params) {\n        if (!(this instanceof Swiper)) return new Swiper(container, params);\n\n        var defaults = {\n            direction: 'horizontal',\n            touchEventsTarget: 'container',\n            initialSlide: 0,\n            speed: 300,\n            // autoplay\n            autoplay: false,\n            autoplayDisableOnInteraction: true,\n            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n            iOSEdgeSwipeDetection: false,\n            iOSEdgeSwipeThreshold: 20,\n            // Free mode\n            freeMode: false,\n            freeModeMomentum: true,\n            freeModeMomentumRatio: 1,\n            freeModeMomentumBounce: true,\n            freeModeMomentumBounceRatio: 1,\n            freeModeSticky: false,\n            freeModeMinimumVelocity: 0.02,\n            // Autoheight\n            autoHeight: false,\n            // Set wrapper width\n            setWrapperSize: false,\n            // Virtual Translate\n            virtualTranslate: false,\n            // Effects\n            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow'\n            coverflow: {\n                rotate: 50,\n                stretch: 0,\n                depth: 100,\n                modifier: 1,\n                slideShadows : true\n            },\n            cube: {\n                slideShadows: true,\n                shadow: true,\n                shadowOffset: 20,\n                shadowScale: 0.94\n            },\n            fade: {\n                crossFade: false\n            },\n            // Parallax\n            parallax: false,\n            // Scrollbar\n            scrollbar: null,\n            scrollbarHide: true,\n            scrollbarDraggable: false,\n            scrollbarSnapOnRelease: false,\n            // Keyboard Mousewheel\n            keyboardControl: false,\n            mousewheelControl: false,\n            mousewheelReleaseOnEdges: false,\n            mousewheelInvert: false,\n            mousewheelForceToAxis: false,\n            mousewheelSensitivity: 1,\n            // Hash Navigation\n            hashnav: false,\n            // Breakpoints\n            breakpoints: undefined,\n            // Slides grid\n            spaceBetween: 0,\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerColumnFill: 'column',\n            slidesPerGroup: 1,\n            centeredSlides: false,\n            slidesOffsetBefore: 0, // in px\n            slidesOffsetAfter: 0, // in px\n            // Round length\n            roundLengths: false,\n            // Touches\n            touchRatio: 1,\n            touchAngle: 45,\n            simulateTouch: true,\n            shortSwipes: true,\n            longSwipes: true,\n            longSwipesRatio: 0.5,\n            longSwipesMs: 300,\n            followFinger: true,\n            onlyExternal: false,\n            threshold: 0,\n            touchMoveStopPropagation: true,\n            // Pagination\n            pagination: null,\n            paginationElement: 'span',\n            paginationClickable: false,\n            paginationHide: false,\n            paginationBulletRender: null,\n            // Resistance\n            resistance: true,\n            resistanceRatio: 0.85,\n            // Next/prev buttons\n            nextButton: null,\n            prevButton: null,\n            // Progress\n            watchSlidesProgress: false,\n            watchSlidesVisibility: false,\n            // Cursor\n            grabCursor: false,\n            // Clicks\n            preventClicks: true,\n            preventClicksPropagation: true,\n            slideToClickedSlide: false,\n            // Lazy Loading\n            lazyLoading: false,\n            lazyLoadingInPrevNext: false,\n            lazyLoadingOnTransitionStart: false,\n            // Images\n            preloadImages: true,\n            updateOnImagesReady: true,\n            // loop\n            loop: false,\n            loopAdditionalSlides: 0,\n            loopedSlides: null,\n            // Control\n            control: undefined,\n            controlInverse: false,\n            controlBy: 'slide', //or 'container'\n            // Swiping/no swiping\n            allowSwipeToPrev: true,\n            allowSwipeToNext: true,\n            swipeHandler: null, //'.swipe-handler',\n            noSwiping: true,\n            noSwipingClass: 'swiper-no-swiping',\n            // NS\n            slideClass: 'swiper-slide',\n            slideActiveClass: 'swiper-slide-active',\n            slideVisibleClass: 'swiper-slide-visible',\n            slideDuplicateClass: 'swiper-slide-duplicate',\n            slideNextClass: 'swiper-slide-next',\n            slidePrevClass: 'swiper-slide-prev',\n            wrapperClass: 'swiper-wrapper',\n            bulletClass: 'swiper-pagination-bullet',\n            bulletActiveClass: 'swiper-pagination-bullet-active',\n            buttonDisabledClass: 'swiper-button-disabled',\n            paginationHiddenClass: 'swiper-pagination-hidden',\n            // Observer\n            observer: false,\n            observeParents: false,\n            // Accessibility\n            a11y: false,\n            prevSlideMessage: 'Previous slide',\n            nextSlideMessage: 'Next slide',\n            firstSlideMessage: 'This is the first slide',\n            lastSlideMessage: 'This is the last slide',\n            paginationBulletMessage: 'Go to slide {{index}}',\n            // Callbacks\n            runCallbacksOnInit: true\n            /*\n            Callbacks:\n            onInit: function (swiper)\n            onDestroy: function (swiper)\n            onClick: function (swiper, e)\n            onTap: function (swiper, e)\n            onDoubleTap: function (swiper, e)\n            onSliderMove: function (swiper, e)\n            onSlideChangeStart: function (swiper)\n            onSlideChangeEnd: function (swiper)\n            onTransitionStart: function (swiper)\n            onTransitionEnd: function (swiper)\n            onImagesReady: function (swiper)\n            onProgress: function (swiper, progress)\n            onTouchStart: function (swiper, e)\n            onTouchMove: function (swiper, e)\n            onTouchMoveOpposite: function (swiper, e)\n            onTouchEnd: function (swiper, e)\n            onReachBeginning: function (swiper)\n            onReachEnd: function (swiper)\n            onSetTransition: function (swiper, duration)\n            onSetTranslate: function (swiper, translate)\n            onAutoplayStart: function (swiper)\n            onAutoplayStop: function (swiper),\n            onLazyImageLoad: function (swiper, slide, image)\n            onLazyImageReady: function (swiper, slide, image)\n            */\n        \n        };\n        var initialVirtualTranslate = params && params.virtualTranslate;\n        \n        params = params || {};\n        var originalParams = {};\n        for (var param in params) {\n            if (typeof params[param] === 'object' && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {\n                originalParams[param] = {};\n                for (var deepParam in params[param]) {\n                    originalParams[param][deepParam] = params[param][deepParam];\n                }\n            }\n            else {\n                originalParams[param] = params[param];\n            }\n        }\n        for (var def in defaults) {\n            if (typeof params[def] === 'undefined') {\n                params[def] = defaults[def];\n            }\n            else if (typeof params[def] === 'object') {\n                for (var deepDef in defaults[def]) {\n                    if (typeof params[def][deepDef] === 'undefined') {\n                        params[def][deepDef] = defaults[def][deepDef];\n                    }\n                }\n            }\n        }\n        \n        // Swiper\n        var s = this;\n        \n        // Params\n        s.params = params;\n        s.originalParams = originalParams;\n        \n        // Classname\n        s.classNames = [];\n        /*=========================\n          Dom Library and plugins\n          ===========================*/\n        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){\n            $ = Dom7;\n        }\n        if (typeof $ === 'undefined') {\n            if (typeof Dom7 === 'undefined') {\n                $ = window.Dom7 || window.Zepto || window.jQuery;\n            }\n            else {\n                $ = Dom7;\n            }\n            if (!$) return;\n        }\n        // Export it to Swiper instance\n        s.$ = $;\n        \n        /*=========================\n          Breakpoints\n          ===========================*/\n        s.currentBreakpoint = undefined;\n        s.getActiveBreakpoint = function () {\n            //Get breakpoint for window width\n            if (!s.params.breakpoints) return false;\n            var breakpoint = false;\n            var points = [], point;\n            for ( point in s.params.breakpoints ) {\n                if (s.params.breakpoints.hasOwnProperty(point)) {\n                    points.push(point);\n                }\n            }\n            points.sort(function (a, b) {\n                return parseInt(a, 10) > parseInt(b, 10);\n            });\n            for (var i = 0; i < points.length; i++) {\n                point = points[i];\n                if (point >= window.innerWidth && !breakpoint) {\n                    breakpoint = point;\n                }\n            }\n            return breakpoint || 'max';\n        };\n        s.setBreakpoint = function () {\n            //Set breakpoint for window width and update parameters\n            var breakpoint = s.getActiveBreakpoint();\n            if (breakpoint && s.currentBreakpoint !== breakpoint) {\n                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;\n                for ( var param in breakPointsParams ) {\n                    s.params[param] = breakPointsParams[param];\n                }\n                s.currentBreakpoint = breakpoint;\n            }\n        };\n        // Set breakpoint on load\n        if (s.params.breakpoints) {\n            s.setBreakpoint();\n        }\n        \n        /*=========================\n          Preparation - Define Container, Wrapper and Pagination\n          ===========================*/\n        s.container = $(container);\n        if (s.container.length === 0) return;\n        if (s.container.length > 1) {\n            s.container.each(function () {\n                new Swiper(this, params);\n            });\n            return;\n        }\n        \n        // Save instance in container HTML Element and in data\n        s.container[0].swiper = s;\n        s.container.data('swiper', s);\n        \n        s.classNames.push('swiper-container-' + s.params.direction);\n        \n        if (s.params.freeMode) {\n            s.classNames.push('swiper-container-free-mode');\n        }\n        if (!s.support.flexbox) {\n            s.classNames.push('swiper-container-no-flexbox');\n            s.params.slidesPerColumn = 1;\n        }\n        if (s.params.autoHeight) {\n            s.classNames.push('swiper-container-autoheight');\n        }\n        // Enable slides progress when required\n        if (s.params.parallax || s.params.watchSlidesVisibility) {\n            s.params.watchSlidesProgress = true;\n        }\n        // Coverflow / 3D\n        if (['cube', 'coverflow'].indexOf(s.params.effect) >= 0) {\n            if (s.support.transforms3d) {\n                s.params.watchSlidesProgress = true;\n                s.classNames.push('swiper-container-3d');\n            }\n            else {\n                s.params.effect = 'slide';\n            }\n        }\n        if (s.params.effect !== 'slide') {\n            s.classNames.push('swiper-container-' + s.params.effect);\n        }\n        if (s.params.effect === 'cube') {\n            s.params.resistanceRatio = 0;\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.centeredSlides = false;\n            s.params.spaceBetween = 0;\n            s.params.virtualTranslate = true;\n            s.params.setWrapperSize = false;\n        }\n        if (s.params.effect === 'fade') {\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.watchSlidesProgress = true;\n            s.params.spaceBetween = 0;\n            if (typeof initialVirtualTranslate === 'undefined') {\n                s.params.virtualTranslate = true;\n            }\n        }\n        \n        // Grab Cursor\n        if (s.params.grabCursor && s.support.touch) {\n            s.params.grabCursor = false;\n        }\n        \n        // Wrapper\n        s.wrapper = s.container.children('.' + s.params.wrapperClass);\n        \n        // Pagination\n        if (s.params.pagination) {\n            s.paginationContainer = $(s.params.pagination);\n            if (s.params.paginationClickable) {\n                s.paginationContainer.addClass('swiper-pagination-clickable');\n            }\n        }\n        \n        // Is Horizontal\n        function isH() {\n            return s.params.direction === 'horizontal';\n        }\n        \n        // RTL\n        s.rtl = isH() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');\n        if (s.rtl) {\n            s.classNames.push('swiper-container-rtl');\n        }\n        \n        // Wrong RTL support\n        if (s.rtl) {\n            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';\n        }\n        \n        // Columns\n        if (s.params.slidesPerColumn > 1) {\n            s.classNames.push('swiper-container-multirow');\n        }\n        \n        // Check for Android\n        if (s.device.android) {\n            s.classNames.push('swiper-container-android');\n        }\n        \n        // Add classes\n        s.container.addClass(s.classNames.join(' '));\n        \n        // Translate\n        s.translate = 0;\n        \n        // Progress\n        s.progress = 0;\n        \n        // Velocity\n        s.velocity = 0;\n        \n        /*=========================\n          Locks, unlocks\n          ===========================*/\n        s.lockSwipeToNext = function () {\n            s.params.allowSwipeToNext = false;\n        };\n        s.lockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = false;\n        };\n        s.lockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;\n        };\n        s.unlockSwipeToNext = function () {\n            s.params.allowSwipeToNext = true;\n        };\n        s.unlockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = true;\n        };\n        s.unlockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;\n        };\n        \n        /*=========================\n          Round helper\n          ===========================*/\n        function round(a) {\n            return Math.floor(a);\n        }\n        /*=========================\n          Set grab cursor\n          ===========================*/\n        if (s.params.grabCursor) {\n            s.container[0].style.cursor = 'move';\n            s.container[0].style.cursor = '-webkit-grab';\n            s.container[0].style.cursor = '-moz-grab';\n            s.container[0].style.cursor = 'grab';\n        }\n        /*=========================\n          Update on Images Ready\n          ===========================*/\n        s.imagesToLoad = [];\n        s.imagesLoaded = 0;\n        \n        s.loadImage = function (imgElement, src, srcset, checkForComplete, callback) {\n            var image;\n            function onReady () {\n                if (callback) callback();\n            }\n            if (!imgElement.complete || !checkForComplete) {\n                if (src) {\n                    image = new window.Image();\n                    image.onload = onReady;\n                    image.onerror = onReady;\n                    if (srcset) {\n                        image.srcset = srcset;\n                    }\n                    if (src) {\n                        image.src = src;\n                    }\n                } else {\n                    onReady();\n                }\n        \n            } else {//image already loaded...\n                onReady();\n            }\n        };\n        s.preloadImages = function () {\n            s.imagesToLoad = s.container.find('img');\n            function _onReady() {\n                if (typeof s === 'undefined' || s === null) return;\n                if (s.imagesLoaded !== undefined) s.imagesLoaded++;\n                if (s.imagesLoaded === s.imagesToLoad.length) {\n                    if (s.params.updateOnImagesReady) s.update();\n                    s.emit('onImagesReady', s);\n                }\n            }\n            for (var i = 0; i < s.imagesToLoad.length; i++) {\n                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), true, _onReady);\n            }\n        };\n        \n        /*=========================\n          Autoplay\n          ===========================*/\n        s.autoplayTimeoutId = undefined;\n        s.autoplaying = false;\n        s.autoplayPaused = false;\n        function autoplay() {\n            s.autoplayTimeoutId = setTimeout(function () {\n                if (s.params.loop) {\n                    s.fixLoop();\n                    s._slideNext();\n                }\n                else {\n                    if (!s.isEnd) {\n                        s._slideNext();\n                    }\n                    else {\n                        if (!params.autoplayStopOnLast) {\n                            s._slideTo(0);\n                        }\n                        else {\n                            s.stopAutoplay();\n                        }\n                    }\n                }\n            }, s.params.autoplay);\n        }\n        s.startAutoplay = function () {\n            if (typeof s.autoplayTimeoutId !== 'undefined') return false;\n            if (!s.params.autoplay) return false;\n            if (s.autoplaying) return false;\n            s.autoplaying = true;\n            s.emit('onAutoplayStart', s);\n            autoplay();\n        };\n        s.stopAutoplay = function (internal) {\n            if (!s.autoplayTimeoutId) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplaying = false;\n            s.autoplayTimeoutId = undefined;\n            s.emit('onAutoplayStop', s);\n        };\n        s.pauseAutoplay = function (speed) {\n            if (s.autoplayPaused) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplayPaused = true;\n            if (speed === 0) {\n                s.autoplayPaused = false;\n                autoplay();\n            }\n            else {\n                s.wrapper.transitionEnd(function () {\n                    if (!s) return;\n                    s.autoplayPaused = false;\n                    if (!s.autoplaying) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        autoplay();\n                    }\n                });\n            }\n        };\n        /*=========================\n          Min/Max Translate\n          ===========================*/\n        s.minTranslate = function () {\n            return (-s.snapGrid[0]);\n        };\n        s.maxTranslate = function () {\n            return (-s.snapGrid[s.snapGrid.length - 1]);\n        };\n        /*=========================\n          Slider/slides sizes\n          ===========================*/\n        s.updateAutoHeight = function () {\n            // Update Height\n            var newHeight = s.slides.eq(s.activeIndex)[0].offsetHeight;\n            if (newHeight) s.wrapper.css('height', s.slides.eq(s.activeIndex)[0].offsetHeight + 'px');\n        };\n        s.updateContainerSize = function () {\n            var width, height;\n            if (typeof s.params.width !== 'undefined') {\n                width = s.params.width;\n            }\n            else {\n                width = s.container[0].clientWidth;\n            }\n            if (typeof s.params.height !== 'undefined') {\n                height = s.params.height;\n            }\n            else {\n                height = s.container[0].clientHeight;\n            }\n            if (width === 0 && isH() || height === 0 && !isH()) {\n                return;\n            }\n        \n            //Subtract paddings\n            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);\n            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);\n        \n            // Store values\n            s.width = width;\n            s.height = height;\n            s.size = isH() ? s.width : s.height;\n        };\n        \n        s.updateSlidesSize = function () {\n            s.slides = s.wrapper.children('.' + s.params.slideClass);\n            s.snapGrid = [];\n            s.slidesGrid = [];\n            s.slidesSizesGrid = [];\n        \n            var spaceBetween = s.params.spaceBetween,\n                slidePosition = -s.params.slidesOffsetBefore,\n                i,\n                prevSlideSize = 0,\n                index = 0;\n            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;\n            }\n        \n            s.virtualSize = -spaceBetween;\n            // reset margins\n            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});\n            else s.slides.css({marginRight: '', marginBottom: ''});\n        \n            var slidesNumberEvenToRows;\n            if (s.params.slidesPerColumn > 1) {\n                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {\n                    slidesNumberEvenToRows = s.slides.length;\n                }\n                else {\n                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;\n                }\n                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {\n                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);\n                }\n            }\n        \n            // Calc slides\n            var slideSize;\n            var slidesPerColumn = s.params.slidesPerColumn;\n            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);\n            for (i = 0; i < s.slides.length; i++) {\n                slideSize = 0;\n                var slide = s.slides.eq(i);\n                if (s.params.slidesPerColumn > 1) {\n                    // Set slides order\n                    var newSlideOrderIndex;\n                    var column, row;\n                    if (s.params.slidesPerColumnFill === 'column') {\n                        column = Math.floor(i / slidesPerColumn);\n                        row = i - column * slidesPerColumn;\n                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {\n                            if (++row >= slidesPerColumn) {\n                                row = 0;\n                                column++;\n                            }\n                        }\n                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n                        slide\n                            .css({\n                                '-webkit-box-ordinal-group': newSlideOrderIndex,\n                                '-moz-box-ordinal-group': newSlideOrderIndex,\n                                '-ms-flex-order': newSlideOrderIndex,\n                                '-webkit-order': newSlideOrderIndex,\n                                'order': newSlideOrderIndex\n                            });\n                    }\n                    else {\n                        row = Math.floor(i / slidesPerRow);\n                        column = i - row * slidesPerRow;\n                    }\n                    slide\n                        .css({\n                            'margin-top': (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')\n                        })\n                        .attr('data-swiper-column', column)\n                        .attr('data-swiper-row', row);\n        \n                }\n                if (slide.css('display') === 'none') continue;\n                if (s.params.slidesPerView === 'auto') {\n                    slideSize = isH() ? slide.outerWidth(true) : slide.outerHeight(true);\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n                }\n                else {\n                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n        \n                    if (isH()) {\n                        s.slides[i].style.width = slideSize + 'px';\n                    }\n                    else {\n                        s.slides[i].style.height = slideSize + 'px';\n                    }\n                }\n                s.slides[i].swiperSlideSize = slideSize;\n                s.slidesSizesGrid.push(slideSize);\n        \n        \n                if (s.params.centeredSlides) {\n                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;\n                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                }\n                else {\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                    slidePosition = slidePosition + slideSize + spaceBetween;\n                }\n        \n                s.virtualSize += slideSize + spaceBetween;\n        \n                prevSlideSize = slideSize;\n        \n                index ++;\n            }\n            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;\n            var newSlidesGrid;\n        \n            if (\n                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {\n                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n            if (!s.support.flexbox || s.params.setWrapperSize) {\n                if (isH()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n        \n            if (s.params.slidesPerColumn > 1) {\n                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;\n                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;\n                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                if (s.params.centeredSlides) {\n                    newSlidesGrid = [];\n                    for (i = 0; i < s.snapGrid.length; i++) {\n                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                    s.snapGrid = newSlidesGrid;\n                }\n            }\n        \n            // Remove last grid elements depending on width\n            if (!s.params.centeredSlides) {\n                newSlidesGrid = [];\n                for (i = 0; i < s.snapGrid.length; i++) {\n                    if (s.snapGrid[i] <= s.virtualSize - s.size) {\n                        newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                }\n                s.snapGrid = newSlidesGrid;\n                if (Math.floor(s.virtualSize - s.size) > Math.floor(s.snapGrid[s.snapGrid.length - 1])) {\n                    s.snapGrid.push(s.virtualSize - s.size);\n                }\n            }\n            if (s.snapGrid.length === 0) s.snapGrid = [0];\n        \n            if (s.params.spaceBetween !== 0) {\n                if (isH()) {\n                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});\n                    else s.slides.css({marginRight: spaceBetween + 'px'});\n                }\n                else s.slides.css({marginBottom: spaceBetween + 'px'});\n            }\n            if (s.params.watchSlidesProgress) {\n                s.updateSlidesOffset();\n            }\n        };\n        s.updateSlidesOffset = function () {\n            for (var i = 0; i < s.slides.length; i++) {\n                s.slides[i].swiperSlideOffset = isH() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;\n            }\n        };\n        \n        /*=========================\n          Slider/slides progress\n          ===========================*/\n        s.updateSlidesProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            if (s.slides.length === 0) return;\n            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();\n        \n            var offsetCenter = -translate;\n            if (s.rtl) offsetCenter = translate;\n        \n            // Visible Slides\n            s.slides.removeClass(s.params.slideVisibleClass);\n            for (var i = 0; i < s.slides.length; i++) {\n                var slide = s.slides[i];\n                var slideProgress = (offsetCenter - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);\n                if (s.params.watchSlidesVisibility) {\n                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n                    var slideAfter = slideBefore + s.slidesSizesGrid[i];\n                    var isVisible =\n                        (slideBefore >= 0 && slideBefore < s.size) ||\n                        (slideAfter > 0 && slideAfter <= s.size) ||\n                        (slideBefore <= 0 && slideAfter >= s.size);\n                    if (isVisible) {\n                        s.slides.eq(i).addClass(s.params.slideVisibleClass);\n                    }\n                }\n                slide.progress = s.rtl ? -slideProgress : slideProgress;\n            }\n        };\n        s.updateProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            var wasBeginning = s.isBeginning;\n            var wasEnd = s.isEnd;\n            if (translatesDiff === 0) {\n                s.progress = 0;\n                s.isBeginning = s.isEnd = true;\n            }\n            else {\n                s.progress = (translate - s.minTranslate()) / (translatesDiff);\n                s.isBeginning = s.progress <= 0;\n                s.isEnd = s.progress >= 1;\n            }\n            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);\n            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);\n        \n            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);\n            s.emit('onProgress', s, s.progress);\n        };\n        s.updateActiveIndex = function () {\n            var translate = s.rtl ? s.translate : -s.translate;\n            var newActiveIndex, i, snapIndex;\n            for (i = 0; i < s.slidesGrid.length; i ++) {\n                if (typeof s.slidesGrid[i + 1] !== 'undefined') {\n                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {\n                        newActiveIndex = i;\n                    }\n                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {\n                        newActiveIndex = i + 1;\n                    }\n                }\n                else {\n                    if (translate >= s.slidesGrid[i]) {\n                        newActiveIndex = i;\n                    }\n                }\n            }\n            // Normalize slideIndex\n            if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;\n            // for (i = 0; i < s.slidesGrid.length; i++) {\n                // if (- translate >= s.slidesGrid[i]) {\n                    // newActiveIndex = i;\n                // }\n            // }\n            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);\n            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;\n        \n            if (newActiveIndex === s.activeIndex) {\n                return;\n            }\n            s.snapIndex = snapIndex;\n            s.previousIndex = s.activeIndex;\n            s.activeIndex = newActiveIndex;\n            s.updateClasses();\n        };\n        \n        /*=========================\n          Classes\n          ===========================*/\n        s.updateClasses = function () {\n            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);\n            var activeSlide = s.slides.eq(s.activeIndex);\n            // Active classes\n            activeSlide.addClass(s.params.slideActiveClass);\n            activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);\n            activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);\n        \n            // Pagination\n            if (s.bullets && s.bullets.length > 0) {\n                s.bullets.removeClass(s.params.bulletActiveClass);\n                var bulletIndex;\n                if (s.params.loop) {\n                    bulletIndex = Math.ceil(s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup;\n                    if (bulletIndex > s.slides.length - 1 - s.loopedSlides * 2) {\n                        bulletIndex = bulletIndex - (s.slides.length - s.loopedSlides * 2);\n                    }\n                    if (bulletIndex > s.bullets.length - 1) bulletIndex = bulletIndex - s.bullets.length;\n                }\n                else {\n                    if (typeof s.snapIndex !== 'undefined') {\n                        bulletIndex = s.snapIndex;\n                    }\n                    else {\n                        bulletIndex = s.activeIndex || 0;\n                    }\n                }\n                if (s.paginationContainer.length > 1) {\n                    s.bullets.each(function () {\n                        if ($(this).index() === bulletIndex) $(this).addClass(s.params.bulletActiveClass);\n                    });\n                }\n                else {\n                    s.bullets.eq(bulletIndex).addClass(s.params.bulletActiveClass);\n                }\n            }\n        \n            // Next/active buttons\n            if (!s.params.loop) {\n                if (s.params.prevButton) {\n                    if (s.isBeginning) {\n                        $(s.params.prevButton).addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.prevButton));\n                    }\n                    else {\n                        $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.prevButton));\n                    }\n                }\n                if (s.params.nextButton) {\n                    if (s.isEnd) {\n                        $(s.params.nextButton).addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable($(s.params.nextButton));\n                    }\n                    else {\n                        $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable($(s.params.nextButton));\n                    }\n                }\n            }\n        };\n        \n        /*=========================\n          Pagination\n          ===========================*/\n        s.updatePagination = function () {\n            if (!s.params.pagination) return;\n            if (s.paginationContainer && s.paginationContainer.length > 0) {\n                var bulletsHTML = '';\n                var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n                for (var i = 0; i < numberOfBullets; i++) {\n                    if (s.params.paginationBulletRender) {\n                        bulletsHTML += s.params.paginationBulletRender(i, s.params.bulletClass);\n                    }\n                    else {\n                        bulletsHTML += '<' + s.params.paginationElement+' class=\"' + s.params.bulletClass + '\"></' + s.params.paginationElement + '>';\n                    }\n                }\n                s.paginationContainer.html(bulletsHTML);\n                s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);\n                if (s.params.paginationClickable && s.params.a11y && s.a11y) {\n                    s.a11y.initPagination();\n                }\n            }\n        };\n        /*=========================\n          Common update method\n          ===========================*/\n        s.update = function (updateTranslate) {\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updateProgress();\n            s.updatePagination();\n            s.updateClasses();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            function forceSetTranslate() {\n                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n            }\n            if (updateTranslate) {\n                var translated, newTranslate;\n                if (s.controller && s.controller.spline) {\n                    s.controller.spline = undefined;\n                }\n                if (s.params.freeMode) {\n                    forceSetTranslate();\n                    if (s.params.autoHeight) {\n                        s.updateAutoHeight();\n                    }\n                }\n                else {\n                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                        translated = s.slideTo(s.slides.length - 1, 0, false, true);\n                    }\n                    else {\n                        translated = s.slideTo(s.activeIndex, 0, false, true);\n                    }\n                    if (!translated) {\n                        forceSetTranslate();\n                    }\n                }\n            }\n            else if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n        };\n        \n        /*=========================\n          Resize Handler\n          ===========================*/\n        s.onResize = function (forceUpdatePagination) {\n            //Breakpoints\n            if (s.params.breakpoints) {\n                s.setBreakpoint();\n            }\n        \n            // Disable locks on resize\n            var allowSwipeToPrev = s.params.allowSwipeToPrev;\n            var allowSwipeToNext = s.params.allowSwipeToNext;\n            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;\n        \n            s.updateContainerSize();\n            s.updateSlidesSize();\n            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            if (s.controller && s.controller.spline) {\n                s.controller.spline = undefined;\n            }\n            if (s.params.freeMode) {\n                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n        \n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n            }\n            else {\n                s.updateClasses();\n                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                    s.slideTo(s.slides.length - 1, 0, false, true);\n                }\n                else {\n                    s.slideTo(s.activeIndex, 0, false, true);\n                }\n            }\n            // Return locks after resize\n            s.params.allowSwipeToPrev = allowSwipeToPrev;\n            s.params.allowSwipeToNext = allowSwipeToNext;\n        };\n        \n        /*=========================\n          Events\n          ===========================*/\n        \n        //Define Touch Events\n        var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];\n        if (window.navigator.pointerEnabled) desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];\n        else if (window.navigator.msPointerEnabled) desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        s.touchEvents = {\n            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : desktopEvents[0],\n            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : desktopEvents[1],\n            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : desktopEvents[2]\n        };\n        \n        \n        // WP8 Touch Events Fix\n        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {\n            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);\n        }\n        \n        // Attach/detach events\n        s.initEvents = function (detach) {\n            var actionDom = detach ? 'off' : 'on';\n            var action = detach ? 'removeEventListener' : 'addEventListener';\n            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];\n            var target = s.support.touch ? touchEventsTarget : document;\n        \n            var moveCapture = s.params.nested ? true : false;\n        \n            //Touch Events\n            if (s.browser.ie) {\n                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                target[action](s.touchEvents.end, s.onTouchEnd, false);\n            }\n            else {\n                if (s.support.touch) {\n                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, false);\n                }\n                if (params.simulateTouch && !s.device.ios && !s.device.android) {\n                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);\n                    document[action]('mousemove', s.onTouchMove, moveCapture);\n                    document[action]('mouseup', s.onTouchEnd, false);\n                }\n            }\n            window[action]('resize', s.onResize);\n        \n            // Next, Prev, Index\n            if (s.params.nextButton) {\n                $(s.params.nextButton)[actionDom]('click', s.onClickNext);\n                if (s.params.a11y && s.a11y) $(s.params.nextButton)[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.prevButton) {\n                $(s.params.prevButton)[actionDom]('click', s.onClickPrev);\n                if (s.params.a11y && s.a11y) $(s.params.prevButton)[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.pagination && s.params.paginationClickable) {\n                $(s.paginationContainer)[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);\n                if (s.params.a11y && s.a11y) $(s.paginationContainer)[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);\n            }\n        \n            // Prevent Links Clicks\n            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);\n        };\n        s.attachEvents = function (detach) {\n            s.initEvents();\n        };\n        s.detachEvents = function () {\n            s.initEvents(true);\n        };\n        \n        /*=========================\n          Handle Clicks\n          ===========================*/\n        // Prevent Clicks\n        s.allowClick = true;\n        s.preventClicks = function (e) {\n            if (!s.allowClick) {\n                if (s.params.preventClicks) e.preventDefault();\n                if (s.params.preventClicksPropagation && s.animating) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                }\n            }\n        };\n        // Clicks\n        s.onClickNext = function (e) {\n            e.preventDefault();\n            if (s.isEnd && !s.params.loop) return;\n            s.slideNext();\n        };\n        s.onClickPrev = function (e) {\n            e.preventDefault();\n            if (s.isBeginning && !s.params.loop) return;\n            s.slidePrev();\n        };\n        s.onClickIndex = function (e) {\n            e.preventDefault();\n            var index = $(this).index() * s.params.slidesPerGroup;\n            if (s.params.loop) index = index + s.loopedSlides;\n            s.slideTo(index);\n        };\n        \n        /*=========================\n          Handle Touches\n          ===========================*/\n        function findElementInEvent(e, selector) {\n            var el = $(e.target);\n            if (!el.is(selector)) {\n                if (typeof selector === 'string') {\n                    el = el.parents(selector);\n                }\n                else if (selector.nodeType) {\n                    var found;\n                    el.parents().each(function (index, _el) {\n                        if (_el === selector) found = selector;\n                    });\n                    if (!found) return undefined;\n                    else return selector;\n                }\n            }\n            if (el.length === 0) {\n                return undefined;\n            }\n            return el[0];\n        }\n        s.updateClickedSlide = function (e) {\n            var slide = findElementInEvent(e, '.' + s.params.slideClass);\n            var slideFound = false;\n            if (slide) {\n                for (var i = 0; i < s.slides.length; i++) {\n                    if (s.slides[i] === slide) slideFound = true;\n                }\n            }\n        \n            if (slide && slideFound) {\n                s.clickedSlide = slide;\n                s.clickedIndex = $(slide).index();\n            }\n            else {\n                s.clickedSlide = undefined;\n                s.clickedIndex = undefined;\n                return;\n            }\n            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {\n                var slideToIndex = s.clickedIndex,\n                    realIndex,\n                    duplicatedSlides;\n                if (s.params.loop) {\n                    if (s.animating) return;\n                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');\n                    if (s.params.centeredSlides) {\n                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                    else {\n                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.swiper-slide-duplicate)').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                }\n                else {\n                    s.slideTo(slideToIndex);\n                }\n            }\n        };\n        \n        var isTouched,\n            isMoved,\n            allowTouchCallbacks,\n            touchStartTime,\n            isScrolling,\n            currentTranslate,\n            startTranslate,\n            allowThresholdMove,\n            // Form elements to match\n            formElements = 'input, select, textarea, button',\n            // Last click time\n            lastClickTime = Date.now(), clickTimeout,\n            //Velocities\n            velocities = [],\n            allowMomentumBounce;\n        \n        // Animating Flag\n        s.animating = false;\n        \n        // Touches information\n        s.touches = {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n        };\n        \n        // Touch handlers\n        var isTouchEvent, startMoving;\n        s.onTouchStart = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            isTouchEvent = e.type === 'touchstart';\n            if (!isTouchEvent && 'which' in e && e.which === 3) return;\n            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {\n                s.allowClick = true;\n                return;\n            }\n            if (s.params.swipeHandler) {\n                if (!findElementInEvent(e, s.params.swipeHandler)) return;\n            }\n        \n            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n        \n            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {\n                return;\n            }\n        \n            isTouched = true;\n            isMoved = false;\n            allowTouchCallbacks = true;\n            isScrolling = undefined;\n            startMoving = undefined;\n            s.touches.startX = startX;\n            s.touches.startY = startY;\n            touchStartTime = Date.now();\n            s.allowClick = true;\n            s.updateContainerSize();\n            s.swipeDirection = undefined;\n            if (s.params.threshold > 0) allowThresholdMove = false;\n            if (e.type !== 'touchstart') {\n                var preventDefault = true;\n                if ($(e.target).is(formElements)) preventDefault = false;\n                if (document.activeElement && $(document.activeElement).is(formElements)) {\n                    document.activeElement.blur();\n                }\n                if (preventDefault) {\n                    e.preventDefault();\n                }\n            }\n            s.emit('onTouchStart', s, e);\n        };\n        \n        s.onTouchMove = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (isTouchEvent && e.type === 'mousemove') return;\n            if (e.preventedByNestedSwiper) return;\n            if (s.params.onlyExternal) {\n                // isMoved = true;\n                s.allowClick = false;\n                if (isTouched) {\n                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n                    touchStartTime = Date.now();\n                }\n                return;\n            }\n            if (isTouchEvent && document.activeElement) {\n                if (e.target === document.activeElement && $(e.target).is(formElements)) {\n                    isMoved = true;\n                    s.allowClick = false;\n                    return;\n                }\n            }\n            if (allowTouchCallbacks) {\n                s.emit('onTouchMove', s, e);\n            }\n            if (e.targetTouches && e.targetTouches.length > 1) return;\n        \n            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        \n            if (typeof isScrolling === 'undefined') {\n                var touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;\n                isScrolling = isH() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);\n            }\n            if (isScrolling) {\n                s.emit('onTouchMoveOpposite', s, e);\n            }\n            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {\n                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {\n                    startMoving = true;\n                }\n            }\n            if (!isTouched) return;\n            if (isScrolling)  {\n                isTouched = false;\n                return;\n            }\n            if (!startMoving && s.browser.ieTouch) {\n                return;\n            }\n            s.allowClick = false;\n            s.emit('onSliderMove', s, e);\n            e.preventDefault();\n            if (s.params.touchMoveStopPropagation && !s.params.nested) {\n                e.stopPropagation();\n            }\n        \n            if (!isMoved) {\n                if (params.loop) {\n                    s.fixLoop();\n                }\n                startTranslate = s.getWrapperTranslate();\n                s.setWrapperTransition(0);\n                if (s.animating) {\n                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');\n                }\n                if (s.params.autoplay && s.autoplaying) {\n                    if (s.params.autoplayDisableOnInteraction) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        s.pauseAutoplay();\n                    }\n                }\n                allowMomentumBounce = false;\n                //Grab Cursor\n                if (s.params.grabCursor) {\n                    s.container[0].style.cursor = 'move';\n                    s.container[0].style.cursor = '-webkit-grabbing';\n                    s.container[0].style.cursor = '-moz-grabbin';\n                    s.container[0].style.cursor = 'grabbing';\n                }\n            }\n            isMoved = true;\n        \n            var diff = s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n        \n            diff = diff * s.params.touchRatio;\n            if (s.rtl) diff = -diff;\n        \n            s.swipeDirection = diff > 0 ? 'prev' : 'next';\n            currentTranslate = diff + startTranslate;\n        \n            var disableParentSwiper = true;\n            if ((diff > 0 && currentTranslate > s.minTranslate())) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);\n            }\n            else if (diff < 0 && currentTranslate < s.maxTranslate()) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);\n            }\n        \n            if (disableParentSwiper) {\n                e.preventedByNestedSwiper = true;\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {\n                currentTranslate = startTranslate;\n            }\n            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {\n                currentTranslate = startTranslate;\n            }\n        \n            if (!s.params.followFinger) return;\n        \n            // Threshold\n            if (s.params.threshold > 0) {\n                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {\n                    if (!allowThresholdMove) {\n                        allowThresholdMove = true;\n                        s.touches.startX = s.touches.currentX;\n                        s.touches.startY = s.touches.currentY;\n                        currentTranslate = startTranslate;\n                        s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n                        return;\n                    }\n                }\n                else {\n                    currentTranslate = startTranslate;\n                    return;\n                }\n            }\n            // Update active index in free mode\n            if (s.params.freeMode || s.params.watchSlidesProgress) {\n                s.updateActiveIndex();\n            }\n            if (s.params.freeMode) {\n                //Velocity\n                if (velocities.length === 0) {\n                    velocities.push({\n                        position: s.touches[isH() ? 'startX' : 'startY'],\n                        time: touchStartTime\n                    });\n                }\n                velocities.push({\n                    position: s.touches[isH() ? 'currentX' : 'currentY'],\n                    time: (new window.Date()).getTime()\n                });\n            }\n            // Update progress\n            s.updateProgress(currentTranslate);\n            // Update translate\n            s.setWrapperTranslate(currentTranslate);\n        };\n        s.onTouchEnd = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (allowTouchCallbacks) {\n                s.emit('onTouchEnd', s, e);\n            }\n            allowTouchCallbacks = false;\n            if (!isTouched) return;\n            //Return Grab Cursor\n            if (s.params.grabCursor && isMoved && isTouched) {\n                s.container[0].style.cursor = 'move';\n                s.container[0].style.cursor = '-webkit-grab';\n                s.container[0].style.cursor = '-moz-grab';\n                s.container[0].style.cursor = 'grab';\n            }\n        \n            // Time diff\n            var touchEndTime = Date.now();\n            var timeDiff = touchEndTime - touchStartTime;\n        \n            // Tap, doubleTap, Click\n            if (s.allowClick) {\n                s.updateClickedSlide(e);\n                s.emit('onTap', s, e);\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    clickTimeout = setTimeout(function () {\n                        if (!s) return;\n                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {\n                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);\n                        }\n                        s.emit('onClick', s, e);\n                    }, 300);\n        \n                }\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    s.emit('onDoubleTap', s, e);\n                }\n            }\n        \n            lastClickTime = Date.now();\n            setTimeout(function () {\n                if (s) s.allowClick = true;\n            }, 0);\n        \n            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {\n                isTouched = isMoved = false;\n                return;\n            }\n            isTouched = isMoved = false;\n        \n            var currentPos;\n            if (s.params.followFinger) {\n                currentPos = s.rtl ? s.translate : -s.translate;\n            }\n            else {\n                currentPos = -currentTranslate;\n            }\n            if (s.params.freeMode) {\n                if (currentPos < -s.minTranslate()) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                else if (currentPos > -s.maxTranslate()) {\n                    if (s.slides.length < s.snapGrid.length) {\n                        s.slideTo(s.snapGrid.length - 1);\n                    }\n                    else {\n                        s.slideTo(s.slides.length - 1);\n                    }\n                    return;\n                }\n        \n                if (s.params.freeModeMomentum) {\n                    if (velocities.length > 1) {\n                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();\n        \n                        var distance = lastMoveEvent.position - velocityEvent.position;\n                        var time = lastMoveEvent.time - velocityEvent.time;\n                        s.velocity = distance / time;\n                        s.velocity = s.velocity / 2;\n                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {\n                            s.velocity = 0;\n                        }\n                        // this implies that the user stopped moving a finger then released.\n                        // There would be no events with distance zero, so the last event is stale.\n                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {\n                            s.velocity = 0;\n                        }\n                    } else {\n                        s.velocity = 0;\n                    }\n        \n                    velocities.length = 0;\n                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;\n                    var momentumDistance = s.velocity * momentumDuration;\n        \n                    var newPosition = s.translate + momentumDistance;\n                    if (s.rtl) newPosition = - newPosition;\n                    var doBounce = false;\n                    var afterBouncePosition;\n                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;\n                    if (newPosition < s.maxTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition + s.maxTranslate() < -bounceAmount) {\n                                newPosition = s.maxTranslate() - bounceAmount;\n                            }\n                            afterBouncePosition = s.maxTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.maxTranslate();\n                        }\n                    }\n                    else if (newPosition > s.minTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition - s.minTranslate() > bounceAmount) {\n                                newPosition = s.minTranslate() + bounceAmount;\n                            }\n                            afterBouncePosition = s.minTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.minTranslate();\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        var j = 0,\n                            nextSlide;\n                        for (j = 0; j < s.snapGrid.length; j += 1) {\n                            if (s.snapGrid[j] > -newPosition) {\n                                nextSlide = j;\n                                break;\n                            }\n        \n                        }\n                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {\n                            newPosition = s.snapGrid[nextSlide];\n                        } else {\n                            newPosition = s.snapGrid[nextSlide - 1];\n                        }\n                        if (!s.rtl) newPosition = - newPosition;\n                    }\n                    //Fix duration\n                    if (s.velocity !== 0) {\n                        if (s.rtl) {\n                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);\n                        }\n                        else {\n                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        s.slideReset();\n                        return;\n                    }\n        \n                    if (s.params.freeModeMomentumBounce && doBounce) {\n                        s.updateProgress(afterBouncePosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        s.animating = true;\n                        s.wrapper.transitionEnd(function () {\n                            if (!s || !allowMomentumBounce) return;\n                            s.emit('onMomentumBounce', s);\n        \n                            s.setWrapperTransition(s.params.speed);\n                            s.setWrapperTranslate(afterBouncePosition);\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        });\n                    } else if (s.velocity) {\n                        s.updateProgress(newPosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        if (!s.animating) {\n                            s.animating = true;\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        }\n        \n                    } else {\n                        s.updateProgress(newPosition);\n                    }\n        \n                    s.updateActiveIndex();\n                }\n                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {\n                    s.updateProgress();\n                    s.updateActiveIndex();\n                }\n                return;\n            }\n        \n            // Find current slide\n            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];\n            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {\n                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {\n                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];\n                    }\n                }\n                else {\n                    if (currentPos >= s.slidesGrid[i]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];\n                    }\n                }\n            }\n        \n            // Find current slide size\n            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;\n        \n            if (timeDiff > s.params.longSwipesMs) {\n                // Long touches\n                if (!s.params.longSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n                }\n            }\n            else {\n                // Short swipes\n                if (!s.params.shortSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    s.slideTo(stopIndex + s.params.slidesPerGroup);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    s.slideTo(stopIndex);\n                }\n            }\n        };\n        /*=========================\n          Transitions\n          ===========================*/\n        s._slideTo = function (slideIndex, speed) {\n            return s.slideTo(slideIndex, speed, true, true);\n        };\n        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (typeof slideIndex === 'undefined') slideIndex = 0;\n            if (slideIndex < 0) slideIndex = 0;\n            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);\n            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;\n        \n            var translate = - s.snapGrid[s.snapIndex];\n            // Stop autoplay\n            if (s.params.autoplay && s.autoplaying) {\n                if (internal || !s.params.autoplayDisableOnInteraction) {\n                    s.pauseAutoplay(speed);\n                }\n                else {\n                    s.stopAutoplay();\n                }\n            }\n            // Update progress\n            s.updateProgress(translate);\n        \n            // Normalize slideIndex\n            for (var i = 0; i < s.slidesGrid.length; i++) {\n                if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {\n                    slideIndex = i;\n                }\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {\n                if ((s.activeIndex || 0) !== slideIndex ) return false;\n            }\n        \n            // Update Index\n            if (typeof speed === 'undefined') speed = s.params.speed;\n            s.previousIndex = s.activeIndex || 0;\n            s.activeIndex = slideIndex;\n        \n            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {\n                // Update Height\n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n                s.updateClasses();\n                if (s.params.effect !== 'slide') {\n                    s.setWrapperTranslate(translate);\n                }\n                return false;\n            }\n            s.updateClasses();\n            s.onTransitionStart(runCallbacks);\n        \n            if (speed === 0) {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(0);\n                s.onTransitionEnd(runCallbacks);\n            }\n            else {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(speed);\n                if (!s.animating) {\n                    s.animating = true;\n                    s.wrapper.transitionEnd(function () {\n                        if (!s) return;\n                        s.onTransitionEnd(runCallbacks);\n                    });\n                }\n        \n            }\n        \n            return true;\n        };\n        \n        s.onTransitionStart = function (runCallbacks) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n            if (s.lazy) s.lazy.onTransitionStart();\n            if (runCallbacks) {\n                s.emit('onTransitionStart', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeStart', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextStart', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevStart', s);\n                    }\n                }\n        \n            }\n        };\n        s.onTransitionEnd = function (runCallbacks) {\n            s.animating = false;\n            s.setWrapperTransition(0);\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.lazy) s.lazy.onTransitionEnd();\n            if (runCallbacks) {\n                s.emit('onTransitionEnd', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeEnd', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextEnd', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevEnd', s);\n                    }\n                }\n            }\n            if (s.params.hashnav && s.hashnav) {\n                s.hashnav.setHash();\n            }\n        \n        };\n        s.slideNext = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n        };\n        s._slideNext = function (speed) {\n            return s.slideNext(true, speed, true);\n        };\n        s.slidePrev = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n        };\n        s._slidePrev = function (speed) {\n            return s.slidePrev(true, speed, true);\n        };\n        s.slideReset = function (runCallbacks, speed, internal) {\n            return s.slideTo(s.activeIndex, speed, runCallbacks);\n        };\n        \n        /*=========================\n          Translate/transition helpers\n          ===========================*/\n        s.setWrapperTransition = function (duration, byController) {\n            s.wrapper.transition(duration);\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTransition(duration);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTransition(duration);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTransition(duration);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTransition(duration, byController);\n            }\n            s.emit('onSetTransition', s, duration);\n        };\n        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {\n            var x = 0, y = 0, z = 0;\n            if (isH()) {\n                x = s.rtl ? -translate : translate;\n            }\n            else {\n                y = translate;\n            }\n        \n            if (s.params.roundLengths) {\n                x = round(x);\n                y = round(y);\n            }\n        \n            if (!s.params.virtualTranslate) {\n                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');\n                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');\n            }\n        \n            s.translate = isH() ? x : y;\n        \n            // Check if we need to update progress\n            var progress;\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            if (translatesDiff === 0) {\n                progress = 0;\n            }\n            else {\n                progress = (translate - s.minTranslate()) / (translatesDiff);\n            }\n            if (progress !== s.progress) {\n                s.updateProgress(translate);\n            }\n        \n            if (updateActiveIndex) s.updateActiveIndex();\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTranslate(s.translate);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTranslate(s.translate);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTranslate(s.translate);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTranslate(s.translate, byController);\n            }\n            s.emit('onSetTranslate', s, s.translate);\n        };\n        \n        s.getTranslate = function (el, axis) {\n            var matrix, curTransform, curStyle, transformMatrix;\n        \n            // automatic axis detection\n            if (typeof axis === 'undefined') {\n                axis = 'x';\n            }\n        \n            if (s.params.virtualTranslate) {\n                return s.rtl ? -s.translate : s.translate;\n            }\n        \n            curStyle = window.getComputedStyle(el, null);\n            if (window.WebKitCSSMatrix) {\n                curTransform = curStyle.transform || curStyle.webkitTransform;\n                if (curTransform.split(',').length > 6) {\n                    curTransform = curTransform.split(', ').map(function(a){\n                        return a.replace(',','.');\n                    }).join(', ');\n                }\n                // Some old versions of Webkit choke when 'none' is passed; pass\n                // empty string instead in this case\n                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n            }\n            else {\n                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n                matrix = transformMatrix.toString().split(',');\n            }\n        \n            if (axis === 'x') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m41;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[12]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[4]);\n            }\n            if (axis === 'y') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m42;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[13]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[5]);\n            }\n            if (s.rtl && curTransform) curTransform = -curTransform;\n            return curTransform || 0;\n        };\n        s.getWrapperTranslate = function (axis) {\n            if (typeof axis === 'undefined') {\n                axis = isH() ? 'x' : 'y';\n            }\n            return s.getTranslate(s.wrapper[0], axis);\n        };\n        \n        /*=========================\n          Observer\n          ===========================*/\n        s.observers = [];\n        function initObserver(target, options) {\n            options = options || {};\n            // create an observer instance\n            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n            var observer = new ObserverFunc(function (mutations) {\n                mutations.forEach(function (mutation) {\n                    s.onResize(true);\n                    s.emit('onObserverUpdate', s, mutation);\n                });\n            });\n        \n            observer.observe(target, {\n                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n                childList: typeof options.childList === 'undefined' ? true : options.childList,\n                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n            });\n        \n            s.observers.push(observer);\n        }\n        s.initObservers = function () {\n            if (s.params.observeParents) {\n                var containerParents = s.container.parents();\n                for (var i = 0; i < containerParents.length; i++) {\n                    initObserver(containerParents[i]);\n                }\n            }\n        \n            // Observe container\n            initObserver(s.container[0], {childList: false});\n        \n            // Observe wrapper\n            initObserver(s.wrapper[0], {attributes: false});\n        };\n        s.disconnectObservers = function () {\n            for (var i = 0; i < s.observers.length; i++) {\n                s.observers[i].disconnect();\n            }\n            s.observers = [];\n        };\n        /*=========================\n          Loop\n          ===========================*/\n        // Create looped slides\n        s.createLoop = function () {\n            // Remove duplicated slides\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n        \n            var slides = s.wrapper.children('.' + s.params.slideClass);\n        \n            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;\n        \n            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);\n            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;\n            if (s.loopedSlides > slides.length) {\n                s.loopedSlides = slides.length;\n            }\n        \n            var prependSlides = [], appendSlides = [], i;\n            slides.each(function (index, el) {\n                var slide = $(this);\n                if (index < s.loopedSlides) appendSlides.push(el);\n                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);\n                slide.attr('data-swiper-slide-index', index);\n            });\n            for (i = 0; i < appendSlides.length; i++) {\n                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n            for (i = prependSlides.length - 1; i >= 0; i--) {\n                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n        };\n        s.destroyLoop = function () {\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n            s.slides.removeAttr('data-swiper-slide-index');\n        };\n        s.fixLoop = function () {\n            var newIndex;\n            //Fix For Negative Oversliding\n            if (s.activeIndex < s.loopedSlides) {\n                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n            //Fix For Positive Oversliding\n            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {\n                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n        };\n        /*=========================\n          Append/Prepend/Remove Slides\n          ===========================*/\n        s.appendSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.append(slides[i]);\n                }\n            }\n            else {\n                s.wrapper.append(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n        };\n        s.prependSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            var newActiveIndex = s.activeIndex + 1;\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.prepend(slides[i]);\n                }\n                newActiveIndex = s.activeIndex + slides.length;\n            }\n            else {\n                s.wrapper.prepend(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            s.slideTo(newActiveIndex, 0, false);\n        };\n        s.removeSlide = function (slidesIndexes) {\n            if (s.params.loop) {\n                s.destroyLoop();\n                s.slides = s.wrapper.children('.' + s.params.slideClass);\n            }\n            var newActiveIndex = s.activeIndex,\n                indexToRemove;\n            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {\n                for (var i = 0; i < slidesIndexes.length; i++) {\n                    indexToRemove = slidesIndexes[i];\n                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                    if (indexToRemove < newActiveIndex) newActiveIndex--;\n                }\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n            else {\n                indexToRemove = slidesIndexes;\n                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                if (indexToRemove < newActiveIndex) newActiveIndex--;\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n        \n            if (s.params.loop) {\n                s.createLoop();\n            }\n        \n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            if (s.params.loop) {\n                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);\n            }\n            else {\n                s.slideTo(newActiveIndex, 0, false);\n            }\n        \n        };\n        s.removeAllSlides = function () {\n            var slidesIndexes = [];\n            for (var i = 0; i < s.slides.length; i++) {\n                slidesIndexes.push(i);\n            }\n            s.removeSlide(slidesIndexes);\n        };\n        \n\n        /*=========================\n          Effects\n          ===========================*/\n        s.effects = {\n            fade: {\n                setTranslate: function () {\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var offset = slide[0].swiperSlideOffset;\n                        var tx = -offset;\n                        if (!s.params.virtualTranslate) tx = tx - s.translate;\n                        var ty = 0;\n                        if (!isH()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n                        var slideOpacity = s.params.fade.crossFade ?\n                                Math.max(1 - Math.abs(slide[0].progress), 0) :\n                                1 + Math.min(Math.max(slide[0].progress, -1), 0);\n                        slide\n                            .css({\n                                opacity: slideOpacity\n                            })\n                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');\n        \n                    }\n        \n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration);\n                    if (s.params.virtualTranslate && duration !== 0) {\n                        var eventTriggered = false;\n                        s.slides.transitionEnd(function () {\n                            if (eventTriggered) return;\n                            if (!s) return;\n                            eventTriggered = true;\n                            s.animating = false;\n                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n                            for (var i = 0; i < triggerEvents.length; i++) {\n                                s.wrapper.trigger(triggerEvents[i]);\n                            }\n                        });\n                    }\n                }\n            },\n            cube: {\n                setTranslate: function () {\n                    var wrapperRotate = 0, cubeShadow;\n                    if (s.params.cube.shadow) {\n                        if (isH()) {\n                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.wrapper.append(cubeShadow);\n                            }\n                            cubeShadow.css({height: s.width + 'px'});\n                        }\n                        else {\n                            cubeShadow = s.container.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.container.append(cubeShadow);\n                            }\n                        }\n                    }\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideAngle = i * 90;\n                        var round = Math.floor(slideAngle / 360);\n                        if (s.rtl) {\n                            slideAngle = -slideAngle;\n                            round = Math.floor(-slideAngle / 360);\n                        }\n                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);\n                        var tx = 0, ty = 0, tz = 0;\n                        if (i % 4 === 0) {\n                            tx = - round * 4 * s.size;\n                            tz = 0;\n                        }\n                        else if ((i - 1) % 4 === 0) {\n                            tx = 0;\n                            tz = - round * 4 * s.size;\n                        }\n                        else if ((i - 2) % 4 === 0) {\n                            tx = s.size + round * 4 * s.size;\n                            tz = s.size;\n                        }\n                        else if ((i - 3) % 4 === 0) {\n                            tx = - s.size;\n                            tz = 3 * s.size + s.size * 4 * round;\n                        }\n                        if (s.rtl) {\n                            tx = -tx;\n                        }\n        \n                        if (!isH()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n        \n                        var transform = 'rotateX(' + (isH() ? 0 : -slideAngle) + 'deg) rotateY(' + (isH() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';\n                        if (progress <= 1 && progress > -1) {\n                            wrapperRotate = i * 90 + progress * 90;\n                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;\n                        }\n                        slide.transform(transform);\n                        if (s.params.cube.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            var shadowOpacity = slide[0].progress;\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = -slide[0].progress;\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = slide[0].progress;\n                        }\n                    }\n                    s.wrapper.css({\n                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'\n                    });\n        \n                    if (s.params.cube.shadow) {\n                        if (isH()) {\n                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');\n                        }\n                        else {\n                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                            var scale1 = s.params.cube.shadowScale,\n                                scale2 = s.params.cube.shadowScale / multiplier,\n                                offset = s.params.cube.shadowOffset;\n                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');\n                        }\n                    }\n                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;\n                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (isH() ? 0 : wrapperRotate) + 'deg) rotateY(' + (isH() ? -wrapperRotate : 0) + 'deg)');\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                    if (s.params.cube.shadow && !isH()) {\n                        s.container.find('.swiper-cube-shadow').transition(duration);\n                    }\n                }\n            },\n            coverflow: {\n                setTranslate: function () {\n                    var transform = s.translate;\n                    var center = isH() ? -transform + s.width / 2 : -transform + s.height / 2;\n                    var rotate = isH() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;\n                    var translate = s.params.coverflow.depth;\n                    //Each slide offset from center\n                    for (var i = 0, length = s.slides.length; i < length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideSize = s.slidesSizesGrid[i];\n                        var slideOffset = slide[0].swiperSlideOffset;\n                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;\n        \n                        var rotateY = isH() ? rotate * offsetMultiplier : 0;\n                        var rotateX = isH() ? 0 : rotate * offsetMultiplier;\n                        // var rotateZ = 0\n                        var translateZ = -translate * Math.abs(offsetMultiplier);\n        \n                        var translateY = isH() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);\n                        var translateX = isH() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;\n        \n                        //Fix for ultra small values\n                        if (Math.abs(translateX) < 0.001) translateX = 0;\n                        if (Math.abs(translateY) < 0.001) translateY = 0;\n                        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n                        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n                        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        \n                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';\n        \n                        slide.transform(slideTransform);\n                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n                        if (s.params.coverflow.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n                        }\n                    }\n        \n                    //Set correct perspective for IE10\n                    if (s.browser.ie) {\n                        var ws = s.wrapper[0].style;\n                        ws.perspectiveOrigin = center + 'px 50%';\n                    }\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                }\n            }\n        };\n\n        /*=========================\n          Images Lazy Loading\n          ===========================*/\n        s.lazy = {\n            initialImageLoaded: false,\n            loadImageInSlide: function (index, loadInDuplicate) {\n                if (typeof index === 'undefined') return;\n                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;\n                if (s.slides.length === 0) return;\n        \n                var slide = s.slides.eq(index);\n                var img = slide.find('.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');\n                if (slide.hasClass('swiper-lazy') && !slide.hasClass('swiper-lazy-loaded') && !slide.hasClass('swiper-lazy-loading')) {\n                    img = img.add(slide[0]);\n                }\n                if (img.length === 0) return;\n        \n                img.each(function () {\n                    var _img = $(this);\n                    _img.addClass('swiper-lazy-loading');\n                    var background = _img.attr('data-background');\n                    var src = _img.attr('data-src'),\n                        srcset = _img.attr('data-srcset');\n                    s.loadImage(_img[0], (src || background), srcset, false, function () {\n                        if (background) {\n                            _img.css('background-image', 'url(' + background + ')');\n                            _img.removeAttr('data-background');\n                        }\n                        else {\n                            if (srcset) {\n                                _img.attr('srcset', srcset);\n                                _img.removeAttr('data-srcset');\n                            }\n                            if (src) {\n                                _img.attr('src', src);\n                                _img.removeAttr('data-src');\n                            }\n        \n                        }\n        \n                        _img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');\n                        slide.find('.swiper-lazy-preloader, .preloader').remove();\n                        if (s.params.loop && loadInDuplicate) {\n                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');\n                            if (slide.hasClass(s.params.slideDuplicateClass)) {\n                                var originalSlide = s.wrapper.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')');\n                                s.lazy.loadImageInSlide(originalSlide.index(), false);\n                            }\n                            else {\n                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);\n                            }\n                        }\n                        s.emit('onLazyImageReady', s, slide[0], _img[0]);\n                    });\n        \n                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);\n                });\n        \n            },\n            load: function () {\n                var i;\n                if (s.params.watchSlidesVisibility) {\n                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {\n                        s.lazy.loadImageInSlide($(this).index());\n                    });\n                }\n                else {\n                    if (s.params.slidesPerView > 1) {\n                        for (i = s.activeIndex; i < s.activeIndex + s.params.slidesPerView ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        s.lazy.loadImageInSlide(s.activeIndex);\n                    }\n                }\n                if (s.params.lazyLoadingInPrevNext) {\n                    if (s.params.slidesPerView > 1) {\n                        // Next Slides\n                        for (i = s.activeIndex + s.params.slidesPerView; i < s.activeIndex + s.params.slidesPerView + s.params.slidesPerView; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                        // Prev Slides\n                        for (i = s.activeIndex - s.params.slidesPerView; i < s.activeIndex ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);\n                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());\n        \n                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);\n                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());\n                    }\n                }\n            },\n            onTransitionStart: function () {\n                if (s.params.lazyLoading) {\n                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {\n                        s.lazy.load();\n                    }\n                }\n            },\n            onTransitionEnd: function () {\n                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {\n                    s.lazy.load();\n                }\n            }\n        };\n        \n\n        /*=========================\n          Scrollbar\n          ===========================*/\n        s.scrollbar = {\n            isTouched: false,\n            setDragPosition: function (e) {\n                var sb = s.scrollbar;\n                var x = 0, y = 0;\n                var translate;\n                var pointerPosition = isH() ?\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;\n                var position = (pointerPosition) - sb.track.offset()[isH() ? 'left' : 'top'] - sb.dragSize / 2;\n                var positionMin = -s.minTranslate() * sb.moveDivider;\n                var positionMax = -s.maxTranslate() * sb.moveDivider;\n                if (position < positionMin) {\n                    position = positionMin;\n                }\n                else if (position > positionMax) {\n                    position = positionMax;\n                }\n                position = -position / sb.moveDivider;\n                s.updateProgress(position);\n                s.setWrapperTranslate(position, true);\n            },\n            dragStart: function (e) {\n                var sb = s.scrollbar;\n                sb.isTouched = true;\n                e.preventDefault();\n                e.stopPropagation();\n        \n                sb.setDragPosition(e);\n                clearTimeout(sb.dragTimeout);\n        \n                sb.track.transition(0);\n                if (s.params.scrollbarHide) {\n                    sb.track.css('opacity', 1);\n                }\n                s.wrapper.transition(100);\n                sb.drag.transition(100);\n                s.emit('onScrollbarDragStart', s);\n            },\n            dragMove: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n                sb.setDragPosition(e);\n                s.wrapper.transition(0);\n                sb.track.transition(0);\n                sb.drag.transition(0);\n                s.emit('onScrollbarDragMove', s);\n            },\n            dragEnd: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                sb.isTouched = false;\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.dragTimeout);\n                    sb.dragTimeout = setTimeout(function () {\n                        sb.track.css('opacity', 0);\n                        sb.track.transition(400);\n                    }, 1000);\n        \n                }\n                s.emit('onScrollbarDragEnd', s);\n                if (s.params.scrollbarSnapOnRelease) {\n                    s.slideReset();\n                }\n            },\n            enableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).on(s.touchEvents.start, sb.dragStart);\n                $(target).on(s.touchEvents.move, sb.dragMove);\n                $(target).on(s.touchEvents.end, sb.dragEnd);\n            },\n            disableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).off(s.touchEvents.start, sb.dragStart);\n                $(target).off(s.touchEvents.move, sb.dragMove);\n                $(target).off(s.touchEvents.end, sb.dragEnd);\n            },\n            set: function () {\n                if (!s.params.scrollbar) return;\n                var sb = s.scrollbar;\n                sb.track = $(s.params.scrollbar);\n                sb.drag = sb.track.find('.swiper-scrollbar-drag');\n                if (sb.drag.length === 0) {\n                    sb.drag = $('<div class=\"swiper-scrollbar-drag\"></div>');\n                    sb.track.append(sb.drag);\n                }\n                sb.drag[0].style.width = '';\n                sb.drag[0].style.height = '';\n                sb.trackSize = isH() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;\n        \n                sb.divider = s.size / s.virtualSize;\n                sb.moveDivider = sb.divider * (sb.trackSize / s.size);\n                sb.dragSize = sb.trackSize * sb.divider;\n        \n                if (isH()) {\n                    sb.drag[0].style.width = sb.dragSize + 'px';\n                }\n                else {\n                    sb.drag[0].style.height = sb.dragSize + 'px';\n                }\n        \n                if (sb.divider >= 1) {\n                    sb.track[0].style.display = 'none';\n                }\n                else {\n                    sb.track[0].style.display = '';\n                }\n                if (s.params.scrollbarHide) {\n                    sb.track[0].style.opacity = 0;\n                }\n            },\n            setTranslate: function () {\n                if (!s.params.scrollbar) return;\n                var diff;\n                var sb = s.scrollbar;\n                var translate = s.translate || 0;\n                var newPos;\n        \n                var newSize = sb.dragSize;\n                newPos = (sb.trackSize - sb.dragSize) * s.progress;\n                if (s.rtl && isH()) {\n                    newPos = -newPos;\n                    if (newPos > 0) {\n                        newSize = sb.dragSize - newPos;\n                        newPos = 0;\n                    }\n                    else if (-newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize + newPos;\n                    }\n                }\n                else {\n                    if (newPos < 0) {\n                        newSize = sb.dragSize + newPos;\n                        newPos = 0;\n                    }\n                    else if (newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize - newPos;\n                    }\n                }\n                if (isH()) {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateX(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.width = newSize + 'px';\n                }\n                else {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateY(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.height = newSize + 'px';\n                }\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.timeout);\n                    sb.track[0].style.opacity = 1;\n                    sb.timeout = setTimeout(function () {\n                        sb.track[0].style.opacity = 0;\n                        sb.track.transition(400);\n                    }, 1000);\n                }\n            },\n            setTransition: function (duration) {\n                if (!s.params.scrollbar) return;\n                s.scrollbar.drag.transition(duration);\n            }\n        };\n\n        /*=========================\n          Controller\n          ===========================*/\n        s.controller = {\n            LinearSpline: function (x, y) {\n                this.x = x;\n                this.y = y;\n                this.lastIndex = x.length - 1;\n                // Given an x value (x2), return the expected y2 value:\n                // (x1,y1) is the known point before given value,\n                // (x3,y3) is the known point after given value.\n                var i1, i3;\n                var l = this.x.length;\n        \n                this.interpolate = function (x2) {\n                    if (!x2) return 0;\n        \n                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n                    i3 = binarySearch(this.x, x2);\n                    i1 = i3 - 1;\n        \n                    // We have our indexes i1 & i3, so we can calculate already:\n                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];\n                };\n        \n                var binarySearch = (function() {\n                    var maxIndex, minIndex, guess;\n                    return function(array, val) {\n                        minIndex = -1;\n                        maxIndex = array.length;\n                        while (maxIndex - minIndex > 1)\n                            if (array[guess = maxIndex + minIndex >> 1] <= val) {\n                                minIndex = guess;\n                            } else {\n                                maxIndex = guess;\n                            }\n                        return maxIndex;\n                    };\n                })();\n            },\n            //xxx: for now i will just save one spline function to to\n            getInterpolateFunction: function(c){\n                if(!s.controller.spline) s.controller.spline = s.params.loop ?\n                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :\n                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);\n            },\n            setTranslate: function (translate, byController) {\n               var controlled = s.params.control;\n               var multiplier, controlledTranslate;\n               function setControlledTranslate(c) {\n                    // this will create an Interpolate function based on the snapGrids\n                    // x is the Grid of the scrolled scroller and y will be the controlled scroller\n                    // it makes sense to create this only once and recall it for the interpolation\n                    // the function does a lot of value caching for performance\n                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;\n                    if (s.params.controlBy === 'slide') {\n                        s.controller.getInterpolateFunction(c);\n                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n                        // but it did not work out\n                        controlledTranslate = -s.controller.spline.interpolate(-translate);\n                    }\n        \n                    if(!controlledTranslate || s.params.controlBy === 'container'){\n                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());\n                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();\n                    }\n        \n                    if (s.params.controlInverse) {\n                        controlledTranslate = c.maxTranslate() - controlledTranslate;\n                    }\n                    c.updateProgress(controlledTranslate);\n                    c.setWrapperTranslate(controlledTranslate, false, s);\n                    c.updateActiveIndex();\n               }\n               if (s.isArray(controlled)) {\n                   for (var i = 0; i < controlled.length; i++) {\n                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                           setControlledTranslate(controlled[i]);\n                       }\n                   }\n               }\n               else if (controlled instanceof Swiper && byController !== controlled) {\n        \n                   setControlledTranslate(controlled);\n               }\n            },\n            setTransition: function (duration, byController) {\n                var controlled = s.params.control;\n                var i;\n                function setControlledTransition(c) {\n                    c.setWrapperTransition(duration, s);\n                    if (duration !== 0) {\n                        c.onTransitionStart();\n                        c.wrapper.transitionEnd(function(){\n                            if (!controlled) return;\n                            if (c.params.loop && s.params.controlBy === 'slide') {\n                                c.fixLoop();\n                            }\n                            c.onTransitionEnd();\n        \n                        });\n                    }\n                }\n                if (s.isArray(controlled)) {\n                    for (i = 0; i < controlled.length; i++) {\n                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                            setControlledTransition(controlled[i]);\n                        }\n                    }\n                }\n                else if (controlled instanceof Swiper && byController !== controlled) {\n                    setControlledTransition(controlled);\n                }\n            }\n        };\n\n        /*=========================\n          Hash Navigation\n          ===========================*/\n        s.hashnav = {\n            init: function () {\n                if (!s.params.hashnav) return;\n                s.hashnav.initialized = true;\n                var hash = document.location.hash.replace('#', '');\n                if (!hash) return;\n                var speed = 0;\n                for (var i = 0, length = s.slides.length; i < length; i++) {\n                    var slide = s.slides.eq(i);\n                    var slideHash = slide.attr('data-hash');\n                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {\n                        var index = slide.index();\n                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);\n                    }\n                }\n            },\n            setHash: function () {\n                if (!s.hashnav.initialized || !s.params.hashnav) return;\n                document.location.hash = s.slides.eq(s.activeIndex).attr('data-hash') || '';\n            }\n        };\n\n        /*=========================\n          Keyboard Control\n          ===========================*/\n        function handleKeyboard(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var kc = e.keyCode || e.charCode;\n            // Directions locks\n            if (!s.params.allowSwipeToNext && (isH() && kc === 39 || !isH() && kc === 40)) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && (isH() && kc === 37 || !isH() && kc === 38)) {\n                return false;\n            }\n            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n                return;\n            }\n            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n                return;\n            }\n            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n                var inView = false;\n                //Check that swiper should be inside of visible area of window\n                if (s.container.parents('.swiper-slide').length > 0 && s.container.parents('.swiper-slide-active').length === 0) {\n                    return;\n                }\n                var windowScroll = {\n                    left: window.pageXOffset,\n                    top: window.pageYOffset\n                };\n                var windowWidth = window.innerWidth;\n                var windowHeight = window.innerHeight;\n                var swiperOffset = s.container.offset();\n                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;\n                var swiperCoord = [\n                    [swiperOffset.left, swiperOffset.top],\n                    [swiperOffset.left + s.width, swiperOffset.top],\n                    [swiperOffset.left, swiperOffset.top + s.height],\n                    [swiperOffset.left + s.width, swiperOffset.top + s.height]\n                ];\n                for (var i = 0; i < swiperCoord.length; i++) {\n                    var point = swiperCoord[i];\n                    if (\n                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&\n                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight\n                    ) {\n                        inView = true;\n                    }\n        \n                }\n                if (!inView) return;\n            }\n            if (isH()) {\n                if (kc === 37 || kc === 39) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();\n                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();\n            }\n            else {\n                if (kc === 38 || kc === 40) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if (kc === 40) s.slideNext();\n                if (kc === 38) s.slidePrev();\n            }\n        }\n        s.disableKeyboardControl = function () {\n            s.params.keyboardControl = false;\n            $(document).off('keydown', handleKeyboard);\n        };\n        s.enableKeyboardControl = function () {\n            s.params.keyboardControl = true;\n            $(document).on('keydown', handleKeyboard);\n        };\n        \n\n        /*=========================\n          Mousewheel Control\n          ===========================*/\n        s.mousewheel = {\n            event: false,\n            lastScrollTime: (new window.Date()).getTime()\n        };\n        if (s.params.mousewheelControl) {\n            try {\n                new window.WheelEvent('wheel');\n                s.mousewheel.event = 'wheel';\n            } catch (e) {}\n        \n            if (!s.mousewheel.event && document.onmousewheel !== undefined) {\n                s.mousewheel.event = 'mousewheel';\n            }\n            if (!s.mousewheel.event) {\n                s.mousewheel.event = 'DOMMouseScroll';\n            }\n        }\n        function handleMousewheel(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var we = s.mousewheel.event;\n            var delta = 0;\n            var rtlFactor = s.rtl ? -1 : 1;\n            //Opera & IE\n            if (e.detail) delta = -e.detail;\n            //WebKits\n            else if (we === 'mousewheel') {\n                if (s.params.mousewheelForceToAxis) {\n                    if (isH()) {\n                        if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY)) delta = e.wheelDeltaX * rtlFactor;\n                        else return;\n                    }\n                    else {\n                        if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX)) delta = e.wheelDeltaY;\n                        else return;\n                    }\n                }\n                else {\n                    delta = Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY) ? - e.wheelDeltaX * rtlFactor : - e.wheelDeltaY;\n                }\n            }\n            //Old FireFox\n            else if (we === 'DOMMouseScroll') delta = -e.detail;\n            //New FireFox\n            else if (we === 'wheel') {\n                if (s.params.mousewheelForceToAxis) {\n                    if (isH()) {\n                        if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) delta = -e.deltaX * rtlFactor;\n                        else return;\n                    }\n                    else {\n                        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) delta = -e.deltaY;\n                        else return;\n                    }\n                }\n                else {\n                    delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? - e.deltaX * rtlFactor : - e.deltaY;\n                }\n            }\n            if (delta === 0) return;\n        \n            if (s.params.mousewheelInvert) delta = -delta;\n        \n            if (!s.params.freeMode) {\n                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {\n                    if (delta < 0) {\n                        if ((!s.isEnd || s.params.loop) && !s.animating) s.slideNext();\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                    else {\n                        if ((!s.isBeginning || s.params.loop) && !s.animating) s.slidePrev();\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                }\n                s.mousewheel.lastScrollTime = (new window.Date()).getTime();\n        \n            }\n            else {\n                //Freemode or scrollContainer:\n                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;\n                var wasBeginning = s.isBeginning,\n                    wasEnd = s.isEnd;\n        \n                if (position >= s.minTranslate()) position = s.minTranslate();\n                if (position <= s.maxTranslate()) position = s.maxTranslate();\n        \n                s.setWrapperTransition(0);\n                s.setWrapperTranslate(position);\n                s.updateProgress();\n                s.updateActiveIndex();\n        \n                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {\n                    s.updateClasses();\n                }\n        \n                if (s.params.freeModeSticky) {\n                    clearTimeout(s.mousewheel.timeout);\n                    s.mousewheel.timeout = setTimeout(function () {\n                        s.slideReset();\n                    }, 300);\n                }\n        \n                // Return page scroll on edge positions\n                if (position === 0 || position === s.maxTranslate()) return;\n            }\n            if (s.params.autoplay) s.stopAutoplay();\n        \n            if (e.preventDefault) e.preventDefault();\n            else e.returnValue = false;\n            return false;\n        }\n        s.disableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            s.container.off(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n        s.enableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            s.container.on(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n\n        /*=========================\n          Parallax\n          ===========================*/\n        function setParallaxTransform(el, progress) {\n            el = $(el);\n            var p, pX, pY;\n            var rtlFactor = s.rtl ? -1 : 1;\n        \n            p = el.attr('data-swiper-parallax') || '0';\n            pX = el.attr('data-swiper-parallax-x');\n            pY = el.attr('data-swiper-parallax-y');\n            if (pX || pY) {\n                pX = pX || '0';\n                pY = pY || '0';\n            }\n            else {\n                if (isH()) {\n                    pX = p;\n                    pY = '0';\n                }\n                else {\n                    pY = p;\n                    pX = '0';\n                }\n            }\n        \n            if ((pX).indexOf('%') >= 0) {\n                pX = parseInt(pX, 10) * progress * rtlFactor + '%';\n            }\n            else {\n                pX = pX * progress * rtlFactor + 'px' ;\n            }\n            if ((pY).indexOf('%') >= 0) {\n                pY = parseInt(pY, 10) * progress + '%';\n            }\n            else {\n                pY = pY * progress + 'px' ;\n            }\n        \n            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');\n        }\n        s.parallax = {\n            setTranslate: function () {\n                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    setParallaxTransform(this, s.progress);\n        \n                });\n                s.slides.each(function () {\n                    var slide = $(this);\n                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {\n                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);\n                        setParallaxTransform(this, progress);\n                    });\n                });\n            },\n            setTransition: function (duration) {\n                if (typeof duration === 'undefined') duration = s.params.speed;\n                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    var el = $(this);\n                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;\n                    if (duration === 0) parallaxDuration = 0;\n                    el.transition(parallaxDuration);\n                });\n            }\n        };\n        \n\n        /*=========================\n          Plugins API. Collect all and init all plugins\n          ===========================*/\n        s._plugins = [];\n        for (var plugin in s.plugins) {\n            var p = s.plugins[plugin](s, s.params[plugin]);\n            if (p) s._plugins.push(p);\n        }\n        // Method to call all plugins event/method\n        s.callPlugins = function (eventName) {\n            for (var i = 0; i < s._plugins.length; i++) {\n                if (eventName in s._plugins[i]) {\n                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n        };\n\n        /*=========================\n          Events/Callbacks/Plugins Emitter\n          ===========================*/\n        function normalizeEventName (eventName) {\n            if (eventName.indexOf('on') !== 0) {\n                if (eventName[0] !== eventName[0].toUpperCase()) {\n                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);\n                }\n                else {\n                    eventName = 'on' + eventName;\n                }\n            }\n            return eventName;\n        }\n        s.emitterEventListeners = {\n        \n        };\n        s.emit = function (eventName) {\n            // Trigger callbacks\n            if (s.params[eventName]) {\n                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n            }\n            var i;\n            // Trigger events\n            if (s.emitterEventListeners[eventName]) {\n                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n            // Trigger plugins\n            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        };\n        s.on = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];\n            s.emitterEventListeners[eventName].push(handler);\n            return s;\n        };\n        s.off = function (eventName, handler) {\n            var i;\n            eventName = normalizeEventName(eventName);\n            if (typeof handler === 'undefined') {\n                // Remove all handlers for such event\n                s.emitterEventListeners[eventName] = [];\n                return s;\n            }\n            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;\n            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);\n            }\n            return s;\n        };\n        s.once = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            var _handler = function () {\n                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n                s.off(eventName, _handler);\n            };\n            s.on(eventName, _handler);\n            return s;\n        };\n\n        // Accessibility tools\n        s.a11y = {\n            makeFocusable: function ($el) {\n                $el.attr('tabIndex', '0');\n                return $el;\n            },\n            addRole: function ($el, role) {\n                $el.attr('role', role);\n                return $el;\n            },\n        \n            addLabel: function ($el, label) {\n                $el.attr('aria-label', label);\n                return $el;\n            },\n        \n            disable: function ($el) {\n                $el.attr('aria-disabled', true);\n                return $el;\n            },\n        \n            enable: function ($el) {\n                $el.attr('aria-disabled', false);\n                return $el;\n            },\n        \n            onEnterKey: function (event) {\n                if (event.keyCode !== 13) return;\n                if ($(event.target).is(s.params.nextButton)) {\n                    s.onClickNext(event);\n                    if (s.isEnd) {\n                        s.a11y.notify(s.params.lastSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.nextSlideMessage);\n                    }\n                }\n                else if ($(event.target).is(s.params.prevButton)) {\n                    s.onClickPrev(event);\n                    if (s.isBeginning) {\n                        s.a11y.notify(s.params.firstSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.prevSlideMessage);\n                    }\n                }\n                if ($(event.target).is('.' + s.params.bulletClass)) {\n                    $(event.target)[0].click();\n                }\n            },\n        \n            liveRegion: $('<span class=\"swiper-notification\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n        \n            notify: function (message) {\n                var notification = s.a11y.liveRegion;\n                if (notification.length === 0) return;\n                notification.html('');\n                notification.html(message);\n            },\n            init: function () {\n                // Setup accessibility\n                if (s.params.nextButton) {\n                    var nextButton = $(s.params.nextButton);\n                    s.a11y.makeFocusable(nextButton);\n                    s.a11y.addRole(nextButton, 'button');\n                    s.a11y.addLabel(nextButton, s.params.nextSlideMessage);\n                }\n                if (s.params.prevButton) {\n                    var prevButton = $(s.params.prevButton);\n                    s.a11y.makeFocusable(prevButton);\n                    s.a11y.addRole(prevButton, 'button');\n                    s.a11y.addLabel(prevButton, s.params.prevSlideMessage);\n                }\n        \n                $(s.container).append(s.a11y.liveRegion);\n            },\n            initPagination: function () {\n                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {\n                    s.bullets.each(function () {\n                        var bullet = $(this);\n                        s.a11y.makeFocusable(bullet);\n                        s.a11y.addRole(bullet, 'button');\n                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));\n                    });\n                }\n            },\n            destroy: function () {\n                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();\n            }\n        };\n        \n\n        /*=========================\n          Init/Destroy\n          ===========================*/\n        s.init = function () {\n            if (s.params.loop) s.createLoop();\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.enableDraggable();\n                }\n            }\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                if (!s.params.loop) s.updateProgress();\n                s.effects[s.params.effect].setTranslate();\n            }\n            if (s.params.loop) {\n                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);\n            }\n            else {\n                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);\n                if (s.params.initialSlide === 0) {\n                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();\n                    if (s.lazy && s.params.lazyLoading) {\n                        s.lazy.load();\n                        s.lazy.initialImageLoaded = true;\n                    }\n                }\n            }\n            s.attachEvents();\n            if (s.params.observer && s.support.observer) {\n                s.initObservers();\n            }\n            if (s.params.preloadImages && !s.params.lazyLoading) {\n                s.preloadImages();\n            }\n            if (s.params.autoplay) {\n                s.startAutoplay();\n            }\n            if (s.params.keyboardControl) {\n                if (s.enableKeyboardControl) s.enableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.enableMousewheelControl) s.enableMousewheelControl();\n            }\n            if (s.params.hashnav) {\n                if (s.hashnav) s.hashnav.init();\n            }\n            if (s.params.a11y && s.a11y) s.a11y.init();\n            s.emit('onInit', s);\n        };\n        \n        // Cleanup dynamic styles\n        s.cleanupStyles = function () {\n            // Container\n            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');\n        \n            // Wrapper\n            s.wrapper.removeAttr('style');\n        \n            // Slides\n            if (s.slides && s.slides.length) {\n                s.slides\n                    .removeClass([\n                      s.params.slideVisibleClass,\n                      s.params.slideActiveClass,\n                      s.params.slideNextClass,\n                      s.params.slidePrevClass\n                    ].join(' '))\n                    .removeAttr('style')\n                    .removeAttr('data-swiper-column')\n                    .removeAttr('data-swiper-row');\n            }\n        \n            // Pagination/Bullets\n            if (s.paginationContainer && s.paginationContainer.length) {\n                s.paginationContainer.removeClass(s.params.paginationHiddenClass);\n            }\n            if (s.bullets && s.bullets.length) {\n                s.bullets.removeClass(s.params.bulletActiveClass);\n            }\n        \n            // Buttons\n            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n        \n            // Scrollbar\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');\n                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');\n            }\n        };\n        \n        // Destroy\n        s.destroy = function (deleteInstance, cleanupStyles) {\n            // Detach evebts\n            s.detachEvents();\n            // Stop autoplay\n            s.stopAutoplay();\n            // Disable draggable\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.disableDraggable();\n                }\n            }\n            // Destroy loop\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            // Cleanup styles\n            if (cleanupStyles) {\n                s.cleanupStyles();\n            }\n            // Disconnect observer\n            s.disconnectObservers();\n            // Disable keyboard/mousewheel\n            if (s.params.keyboardControl) {\n                if (s.disableKeyboardControl) s.disableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.disableMousewheelControl) s.disableMousewheelControl();\n            }\n            // Disable a11y\n            if (s.params.a11y && s.a11y) s.a11y.destroy();\n            // Destroy callback\n            s.emit('onDestroy');\n            // Delete instance\n            if (deleteInstance !== false) s = null;\n        };\n        \n        s.init();\n        \n\n    \n        // Return swiper instance\n        return s;\n    };\n    \n\n    /*==================================================\n        Prototype\n    ====================================================*/\n    Swiper.prototype = {\n        isSafari: (function () {\n            var ua = navigator.userAgent.toLowerCase();\n            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n        })(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),\n        isArray: function (arr) {\n            return Object.prototype.toString.apply(arr) === '[object Array]';\n        },\n        /*==================================================\n        Browser\n        ====================================================*/\n        browser: {\n            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1)\n        },\n        /*==================================================\n        Devices\n        ====================================================*/\n        device: (function () {\n            var ua = navigator.userAgent;\n            var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n            var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n            var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n            var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n            return {\n                ios: ipad || iphone || ipod,\n                android: android\n            };\n        })(),\n        /*==================================================\n        Feature Detection\n        ====================================================*/\n        support: {\n            touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n            })(),\n    \n            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n                var div = document.createElement('div').style;\n                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n            })(),\n    \n            flexbox: (function () {\n                var div = document.createElement('div').style;\n                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n                for (var i = 0; i < styles.length; i++) {\n                    if (styles[i] in div) return true;\n                }\n            })(),\n    \n            observer: (function () {\n                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n            })()\n        },\n        /*==================================================\n        Plugins\n        ====================================================*/\n        plugins: {}\n    };\n    \n\n    /*===========================\n    Dom7 Library\n    ===========================*/\n    var Dom7 = (function () {\n        var Dom7 = function (arr) {\n            var _this = this, i = 0;\n            // Create array-like object\n            for (i = 0; i < arr.length; i++) {\n                _this[i] = arr[i];\n            }\n            _this.length = arr.length;\n            // Return collection with methods\n            return this;\n        };\n        var $ = function (selector, context) {\n            var arr = [], i = 0;\n            if (selector && !context) {\n                if (selector instanceof Dom7) {\n                    return selector;\n                }\n            }\n            if (selector) {\n                // String\n                if (typeof selector === 'string') {\n                    var els, tempParent, html = selector.trim();\n                    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n                        var toCreate = 'div';\n                        if (html.indexOf('<li') === 0) toCreate = 'ul';\n                        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n                        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n                        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n                        if (html.indexOf('<option') === 0) toCreate = 'select';\n                        tempParent = document.createElement(toCreate);\n                        tempParent.innerHTML = selector;\n                        for (i = 0; i < tempParent.childNodes.length; i++) {\n                            arr.push(tempParent.childNodes[i]);\n                        }\n                    }\n                    else {\n                        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n                            // Pure ID selector\n                            els = [document.getElementById(selector.split('#')[1])];\n                        }\n                        else {\n                            // Other selectors\n                            els = (context || document).querySelectorAll(selector);\n                        }\n                        for (i = 0; i < els.length; i++) {\n                            if (els[i]) arr.push(els[i]);\n                        }\n                    }\n                }\n                // Node/element\n                else if (selector.nodeType || selector === window || selector === document) {\n                    arr.push(selector);\n                }\n                //Array of elements or instance of Dom\n                else if (selector.length > 0 && selector[0].nodeType) {\n                    for (i = 0; i < selector.length; i++) {\n                        arr.push(selector[i]);\n                    }\n                }\n            }\n            return new Dom7(arr);\n        };\n        Dom7.prototype = {\n            // Classes and attriutes\n            addClass: function (className) {\n                if (typeof className === 'undefined') {\n                    return this;\n                }\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.add(classes[i]);\n                    }\n                }\n                return this;\n            },\n            removeClass: function (className) {\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.remove(classes[i]);\n                    }\n                }\n                return this;\n            },\n            hasClass: function (className) {\n                if (!this[0]) return false;\n                else return this[0].classList.contains(className);\n            },\n            toggleClass: function (className) {\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.toggle(classes[i]);\n                    }\n                }\n                return this;\n            },\n            attr: function (attrs, value) {\n                if (arguments.length === 1 && typeof attrs === 'string') {\n                    // Get attr\n                    if (this[0]) return this[0].getAttribute(attrs);\n                    else return undefined;\n                }\n                else {\n                    // Set attrs\n                    for (var i = 0; i < this.length; i++) {\n                        if (arguments.length === 2) {\n                            // String\n                            this[i].setAttribute(attrs, value);\n                        }\n                        else {\n                            // Object\n                            for (var attrName in attrs) {\n                                this[i][attrName] = attrs[attrName];\n                                this[i].setAttribute(attrName, attrs[attrName]);\n                            }\n                        }\n                    }\n                    return this;\n                }\n            },\n            removeAttr: function (attr) {\n                for (var i = 0; i < this.length; i++) {\n                    this[i].removeAttribute(attr);\n                }\n                return this;\n            },\n            data: function (key, value) {\n                if (typeof value === 'undefined') {\n                    // Get value\n                    if (this[0]) {\n                        var dataKey = this[0].getAttribute('data-' + key);\n                        if (dataKey) return dataKey;\n                        else if (this[0].dom7ElementDataStorage && (key in this[0].dom7ElementDataStorage)) return this[0].dom7ElementDataStorage[key];\n                        else return undefined;\n                    }\n                    else return undefined;\n                }\n                else {\n                    // Set value\n                    for (var i = 0; i < this.length; i++) {\n                        var el = this[i];\n                        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n                        el.dom7ElementDataStorage[key] = value;\n                    }\n                    return this;\n                }\n            },\n            // Transforms\n            transform : function (transform) {\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n                }\n                return this;\n            },\n            transition: function (duration) {\n                if (typeof duration !== 'string') {\n                    duration = duration + 'ms';\n                }\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n                }\n                return this;\n            },\n            //Events\n            on: function (eventName, targetSelector, listener, capture) {\n                function handleLiveEvent(e) {\n                    var target = e.target;\n                    if ($(target).is(targetSelector)) listener.call(target, e);\n                    else {\n                        var parents = $(target).parents();\n                        for (var k = 0; k < parents.length; k++) {\n                            if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e);\n                        }\n                    }\n                }\n                var events = eventName.split(' ');\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof targetSelector === 'function' || targetSelector === false) {\n                        // Usual events\n                        if (typeof targetSelector === 'function') {\n                            listener = arguments[1];\n                            capture = arguments[2] || false;\n                        }\n                        for (j = 0; j < events.length; j++) {\n                            this[i].addEventListener(events[j], listener, capture);\n                        }\n                    }\n                    else {\n                        //Live events\n                        for (j = 0; j < events.length; j++) {\n                            if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];\n                            this[i].dom7LiveListeners.push({listener: listener, liveListener: handleLiveEvent});\n                            this[i].addEventListener(events[j], handleLiveEvent, capture);\n                        }\n                    }\n                }\n    \n                return this;\n            },\n            off: function (eventName, targetSelector, listener, capture) {\n                var events = eventName.split(' ');\n                for (var i = 0; i < events.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        if (typeof targetSelector === 'function' || targetSelector === false) {\n                            // Usual events\n                            if (typeof targetSelector === 'function') {\n                                listener = arguments[1];\n                                capture = arguments[2] || false;\n                            }\n                            this[j].removeEventListener(events[i], listener, capture);\n                        }\n                        else {\n                            // Live event\n                            if (this[j].dom7LiveListeners) {\n                                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {\n                                    if (this[j].dom7LiveListeners[k].listener === listener) {\n                                        this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                return this;\n            },\n            once: function (eventName, targetSelector, listener, capture) {\n                var dom = this;\n                if (typeof targetSelector === 'function') {\n                    targetSelector = false;\n                    listener = arguments[1];\n                    capture = arguments[2];\n                }\n                function proxy(e) {\n                    listener(e);\n                    dom.off(eventName, targetSelector, proxy, capture);\n                }\n                dom.on(eventName, targetSelector, proxy, capture);\n            },\n            trigger: function (eventName, eventData) {\n                for (var i = 0; i < this.length; i++) {\n                    var evt;\n                    try {\n                        evt = new window.CustomEvent(eventName, {detail: eventData, bubbles: true, cancelable: true});\n                    }\n                    catch (e) {\n                        evt = document.createEvent('Event');\n                        evt.initEvent(eventName, true, true);\n                        evt.detail = eventData;\n                    }\n                    this[i].dispatchEvent(evt);\n                }\n                return this;\n            },\n            transitionEnd: function (callback) {\n                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n                    i, j, dom = this;\n                function fireCallBack(e) {\n                    /*jshint validthis:true */\n                    if (e.target !== this) return;\n                    callback.call(this, e);\n                    for (i = 0; i < events.length; i++) {\n                        dom.off(events[i], fireCallBack);\n                    }\n                }\n                if (callback) {\n                    for (i = 0; i < events.length; i++) {\n                        dom.on(events[i], fireCallBack);\n                    }\n                }\n                return this;\n            },\n            // Sizing/Styles\n            width: function () {\n                if (this[0] === window) {\n                    return window.innerWidth;\n                }\n                else {\n                    if (this.length > 0) {\n                        return parseFloat(this.css('width'));\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            outerWidth: function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n                    else\n                        return this[0].offsetWidth;\n                }\n                else return null;\n            },\n            height: function () {\n                if (this[0] === window) {\n                    return window.innerHeight;\n                }\n                else {\n                    if (this.length > 0) {\n                        return parseFloat(this.css('height'));\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            outerHeight: function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));\n                    else\n                        return this[0].offsetHeight;\n                }\n                else return null;\n            },\n            offset: function () {\n                if (this.length > 0) {\n                    var el = this[0];\n                    var box = el.getBoundingClientRect();\n                    var body = document.body;\n                    var clientTop  = el.clientTop  || body.clientTop  || 0;\n                    var clientLeft = el.clientLeft || body.clientLeft || 0;\n                    var scrollTop  = window.pageYOffset || el.scrollTop;\n                    var scrollLeft = window.pageXOffset || el.scrollLeft;\n                    return {\n                        top: box.top  + scrollTop  - clientTop,\n                        left: box.left + scrollLeft - clientLeft\n                    };\n                }\n                else {\n                    return null;\n                }\n            },\n            css: function (props, value) {\n                var i;\n                if (arguments.length === 1) {\n                    if (typeof props === 'string') {\n                        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n                    }\n                    else {\n                        for (i = 0; i < this.length; i++) {\n                            for (var prop in props) {\n                                this[i].style[prop] = props[prop];\n                            }\n                        }\n                        return this;\n                    }\n                }\n                if (arguments.length === 2 && typeof props === 'string') {\n                    for (i = 0; i < this.length; i++) {\n                        this[i].style[props] = value;\n                    }\n                    return this;\n                }\n                return this;\n            },\n    \n            //Dom manipulation\n            each: function (callback) {\n                for (var i = 0; i < this.length; i++) {\n                    callback.call(this[i], i, this[i]);\n                }\n                return this;\n            },\n            html: function (html) {\n                if (typeof html === 'undefined') {\n                    return this[0] ? this[0].innerHTML : undefined;\n                }\n                else {\n                    for (var i = 0; i < this.length; i++) {\n                        this[i].innerHTML = html;\n                    }\n                    return this;\n                }\n            },\n            is: function (selector) {\n                if (!this[0]) return false;\n                var compareWith, i;\n                if (typeof selector === 'string') {\n                    var el = this[0];\n                    if (el === document) return selector === document;\n                    if (el === window) return selector === window;\n    \n                    if (el.matches) return el.matches(selector);\n                    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n                    else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);\n                    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n                    else {\n                        compareWith = $(selector);\n                        for (i = 0; i < compareWith.length; i++) {\n                            if (compareWith[i] === this[0]) return true;\n                        }\n                        return false;\n                    }\n                }\n                else if (selector === document) return this[0] === document;\n                else if (selector === window) return this[0] === window;\n                else {\n                    if (selector.nodeType || selector instanceof Dom7) {\n                        compareWith = selector.nodeType ? [selector] : selector;\n                        for (i = 0; i < compareWith.length; i++) {\n                            if (compareWith[i] === this[0]) return true;\n                        }\n                        return false;\n                    }\n                    return false;\n                }\n    \n            },\n            index: function () {\n                if (this[0]) {\n                    var child = this[0];\n                    var i = 0;\n                    while ((child = child.previousSibling) !== null) {\n                        if (child.nodeType === 1) i++;\n                    }\n                    return i;\n                }\n                else return undefined;\n            },\n            eq: function (index) {\n                if (typeof index === 'undefined') return this;\n                var length = this.length;\n                var returnIndex;\n                if (index > length - 1) {\n                    return new Dom7([]);\n                }\n                if (index < 0) {\n                    returnIndex = length + index;\n                    if (returnIndex < 0) return new Dom7([]);\n                    else return new Dom7([this[returnIndex]]);\n                }\n                return new Dom7([this[index]]);\n            },\n            append: function (newChild) {\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof newChild === 'string') {\n                        var tempDiv = document.createElement('div');\n                        tempDiv.innerHTML = newChild;\n                        while (tempDiv.firstChild) {\n                            this[i].appendChild(tempDiv.firstChild);\n                        }\n                    }\n                    else if (newChild instanceof Dom7) {\n                        for (j = 0; j < newChild.length; j++) {\n                            this[i].appendChild(newChild[j]);\n                        }\n                    }\n                    else {\n                        this[i].appendChild(newChild);\n                    }\n                }\n                return this;\n            },\n            prepend: function (newChild) {\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof newChild === 'string') {\n                        var tempDiv = document.createElement('div');\n                        tempDiv.innerHTML = newChild;\n                        for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {\n                            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n                        }\n                        // this[i].insertAdjacentHTML('afterbegin', newChild);\n                    }\n                    else if (newChild instanceof Dom7) {\n                        for (j = 0; j < newChild.length; j++) {\n                            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n                        }\n                    }\n                    else {\n                        this[i].insertBefore(newChild, this[i].childNodes[0]);\n                    }\n                }\n                return this;\n            },\n            insertBefore: function (selector) {\n                var before = $(selector);\n                for (var i = 0; i < this.length; i++) {\n                    if (before.length === 1) {\n                        before[0].parentNode.insertBefore(this[i], before[0]);\n                    }\n                    else if (before.length > 1) {\n                        for (var j = 0; j < before.length; j++) {\n                            before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n                        }\n                    }\n                }\n            },\n            insertAfter: function (selector) {\n                var after = $(selector);\n                for (var i = 0; i < this.length; i++) {\n                    if (after.length === 1) {\n                        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n                    }\n                    else if (after.length > 1) {\n                        for (var j = 0; j < after.length; j++) {\n                            after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n                        }\n                    }\n                }\n            },\n            next: function (selector) {\n                if (this.length > 0) {\n                    if (selector) {\n                        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);\n                        else return new Dom7([]);\n                    }\n                    else {\n                        if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n                        else return new Dom7([]);\n                    }\n                }\n                else return new Dom7([]);\n            },\n            nextAll: function (selector) {\n                var nextEls = [];\n                var el = this[0];\n                if (!el) return new Dom7([]);\n                while (el.nextElementSibling) {\n                    var next = el.nextElementSibling;\n                    if (selector) {\n                        if($(next).is(selector)) nextEls.push(next);\n                    }\n                    else nextEls.push(next);\n                    el = next;\n                }\n                return new Dom7(nextEls);\n            },\n            prev: function (selector) {\n                if (this.length > 0) {\n                    if (selector) {\n                        if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);\n                        else return new Dom7([]);\n                    }\n                    else {\n                        if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);\n                        else return new Dom7([]);\n                    }\n                }\n                else return new Dom7([]);\n            },\n            prevAll: function (selector) {\n                var prevEls = [];\n                var el = this[0];\n                if (!el) return new Dom7([]);\n                while (el.previousElementSibling) {\n                    var prev = el.previousElementSibling;\n                    if (selector) {\n                        if($(prev).is(selector)) prevEls.push(prev);\n                    }\n                    else prevEls.push(prev);\n                    el = prev;\n                }\n                return new Dom7(prevEls);\n            },\n            parent: function (selector) {\n                var parents = [];\n                for (var i = 0; i < this.length; i++) {\n                    if (selector) {\n                        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n                    }\n                    else {\n                        parents.push(this[i].parentNode);\n                    }\n                }\n                return $($.unique(parents));\n            },\n            parents: function (selector) {\n                var parents = [];\n                for (var i = 0; i < this.length; i++) {\n                    var parent = this[i].parentNode;\n                    while (parent) {\n                        if (selector) {\n                            if ($(parent).is(selector)) parents.push(parent);\n                        }\n                        else {\n                            parents.push(parent);\n                        }\n                        parent = parent.parentNode;\n                    }\n                }\n                return $($.unique(parents));\n            },\n            find : function (selector) {\n                var foundElements = [];\n                for (var i = 0; i < this.length; i++) {\n                    var found = this[i].querySelectorAll(selector);\n                    for (var j = 0; j < found.length; j++) {\n                        foundElements.push(found[j]);\n                    }\n                }\n                return new Dom7(foundElements);\n            },\n            children: function (selector) {\n                var children = [];\n                for (var i = 0; i < this.length; i++) {\n                    var childNodes = this[i].childNodes;\n    \n                    for (var j = 0; j < childNodes.length; j++) {\n                        if (!selector) {\n                            if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n                        }\n                        else {\n                            if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j]);\n                        }\n                    }\n                }\n                return new Dom7($.unique(children));\n            },\n            remove: function () {\n                for (var i = 0; i < this.length; i++) {\n                    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n                }\n                return this;\n            },\n            add: function () {\n                var dom = this;\n                var i, j;\n                for (i = 0; i < arguments.length; i++) {\n                    var toAdd = $(arguments[i]);\n                    for (j = 0; j < toAdd.length; j++) {\n                        dom[dom.length] = toAdd[j];\n                        dom.length++;\n                    }\n                }\n                return dom;\n            }\n        };\n        $.fn = Dom7.prototype;\n        $.unique = function (arr) {\n            var unique = [];\n            for (var i = 0; i < arr.length; i++) {\n                if (unique.indexOf(arr[i]) === -1) unique.push(arr[i]);\n            }\n            return unique;\n        };\n    \n        return $;\n    })();\n    \n\n    /*===========================\n     Get Dom libraries\n     ===========================*/\n    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];\n    for (var i = 0; i < swiperDomPlugins.length; i++) {\n    \tif (window[swiperDomPlugins[i]]) {\n    \t\taddLibraryPlugin(window[swiperDomPlugins[i]]);\n    \t}\n    }\n    // Required DOM Plugins\n    var domLib;\n    if (typeof Dom7 === 'undefined') {\n    \tdomLib = window.Dom7 || window.Zepto || window.jQuery;\n    }\n    else {\n    \tdomLib = Dom7;\n    }\n\n    /*===========================\n    Add .swiper plugin from Dom libraries\n    ===========================*/\n    function addLibraryPlugin(lib) {\n        lib.fn.swiper = function (params) {\n            var firstInstance;\n            lib(this).each(function () {\n                var s = new Swiper(this, params);\n                if (!firstInstance) firstInstance = s;\n            });\n            return firstInstance;\n        };\n    }\n    \n    if (domLib) {\n        if (!('transitionEnd' in domLib.fn)) {\n            domLib.fn.transitionEnd = function (callback) {\n                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n                    i, j, dom = this;\n                function fireCallBack(e) {\n                    /*jshint validthis:true */\n                    if (e.target !== this) return;\n                    callback.call(this, e);\n                    for (i = 0; i < events.length; i++) {\n                        dom.off(events[i], fireCallBack);\n                    }\n                }\n                if (callback) {\n                    for (i = 0; i < events.length; i++) {\n                        dom.on(events[i], fireCallBack);\n                    }\n                }\n                return this;\n            };\n        }\n        if (!('transform' in domLib.fn)) {\n            domLib.fn.transform = function (transform) {\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n                }\n                return this;\n            };\n        }\n        if (!('transition' in domLib.fn)) {\n            domLib.fn.transition = function (duration) {\n                if (typeof duration !== 'string') {\n                    duration = duration + 'ms';\n                }\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n                }\n                return this;\n            };\n        }\n    }\n\n    window.Swiper = Swiper;\n})();\n/*===========================\nSwiper AMD Export\n===========================*/\nif (typeof(module) !== 'undefined')\n{\n    module.exports = window.Swiper;\n}\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n        'use strict';\n        return window.Swiper;\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Swiper/dist/js/swiper.js\n ** module id = 3\n ** module chunks = 1 2 3\n **/"],"sourceRoot":""}